{
  "@URDJMK/serpapi-mcp-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/serpapi-mcp-server.json"
  },
  "@kazuph/mcp-screenshot": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kazuph-mcp-screenshot.json",
    "validated": true,
    "tools": {
      "capture": {
        "name": "capture",
        "description": "Captures a screenshot of the specified region and performs OCR. Options:\n- region: 'left'/'right'/'full' (default: 'left')\n- format: 'json'/'markdown'/'vertical'/'horizontal' (default: 'markdown')\nThe screenshot is saved to a dated directory in Downloads."
      }
    }
  },
  "@modelcontextprotocol/server-everything": {
    "category": "aggregators",
    "path": "aggregators/modelcontextprotocol-server-everything.json",
    "validated": true,
    "tools": {
      "echo": {
        "name": "echo",
        "description": "Echoes back the input"
      },
      "add": {
        "name": "add",
        "description": "Adds two numbers"
      },
      "printEnv": {
        "name": "printEnv",
        "description": "Prints all environment variables, helpful for debugging MCP server configuration"
      },
      "longRunningOperation": {
        "name": "longRunningOperation",
        "description": "Demonstrates a long running operation with progress updates"
      },
      "sampleLLM": {
        "name": "sampleLLM",
        "description": "Samples from an LLM using MCP's sampling feature"
      },
      "getTinyImage": {
        "name": "getTinyImage",
        "description": "Returns the MCP_TINY_IMAGE"
      },
      "annotatedMessage": {
        "name": "annotatedMessage",
        "description": "Demonstrates how annotations can be used to provide metadata about content"
      },
      "getResourceReference": {
        "name": "getResourceReference",
        "description": "Returns a resource reference that can be used by MCP clients"
      }
    }
  },
  "@modelcontextprotocol/server-everart": {
    "category": "art-and-culture",
    "path": "art-and-culture/modelcontextprotocol-server-everart.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-stability-ai": {
    "category": "art-and-culture",
    "path": "art-and-culture/mcp-server-stability-ai.json",
    "validated": true,
    "tools": {
      "stability-ai-generate-image": {
        "name": "stability-ai-generate-image",
        "description": "Generate an image of anything based on a provided prompt."
      },
      "stability-ai-generate-image-sd35": {
        "name": "stability-ai-generate-image-sd35",
        "description": "Generate an image using Stable Diffusion 3.5 models with advanced configuration options."
      },
      "stability-ai-remove-background": {
        "name": "stability-ai-remove-background",
        "description": "Remove the background from an image."
      },
      "stability-ai-outpaint": {
        "name": "stability-ai-outpaint",
        "description": "Extends an image in any direction while maintaining visual consistency."
      },
      "stability-ai-search-and-replace": {
        "name": "stability-ai-search-and-replace",
        "description": "Replace objects or elements in an image by describing what to replace and what to replace it with."
      },
      "stability-ai-upscale-fast": {
        "name": "stability-ai-upscale-fast",
        "description": "Cheap and fast tool to enhance image resolution by 4x."
      },
      "stability-ai-upscale-creative": {
        "name": "stability-ai-upscale-creative",
        "description": "Enhance image resolution up to 4K using AI with creative interpretation. This tool works best on highly degraded images and performs heavy reimagining. In general, don't use this (expensive) tool unless specifically asked to do so, usually after trying stability-ai-upscale-fast first."
      },
      "stability-ai-control-sketch": {
        "name": "stability-ai-control-sketch",
        "description": "Translate hand-drawn sketches to production-grade images."
      },
      "stability-ai-0-list-resources": {
        "name": "stability-ai-0-list-resources",
        "description": "Use this to check for files before deciding you don't have access to a file or image or resource. It pulls in a list of all of user's available Resources (i.e. image files and their URI's) so we can reference pre-existing images to manipulate or upload to Stability AI."
      },
      "stability-ai-search-and-recolor": {
        "name": "stability-ai-search-and-recolor",
        "description": "Search and recolor object(s) in an image"
      },
      "stability-ai-replace-background-and-relight": {
        "name": "stability-ai-replace-background-and-relight",
        "description": "Replace background and adjust lighting of an image"
      },
      "stability-ai-control-style": {
        "name": "stability-ai-control-style",
        "description": "Generate a new image in the style of a reference image"
      },
      "stability-ai-control-structure": {
        "name": "stability-ai-control-structure",
        "description": "Generate a new image while maintaining the structure of a reference image"
      }
    }
  },
  "@automatalabs/mcp-server-playwright": {
    "category": "browser-automation",
    "path": "browser-automation/automatalabs-mcp-server-playwright.json",
    "validated": true,
    "tools": {
      "browser_navigate": {
        "name": "browser_navigate",
        "description": "Navigate to a URL"
      },
      "browser_screenshot": {
        "name": "browser_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "browser_click": {
        "name": "browser_click",
        "description": "Click an element on the page using CSS selector"
      },
      "browser_click_text": {
        "name": "browser_click_text",
        "description": "Click an element on the page by its text content"
      },
      "browser_fill": {
        "name": "browser_fill",
        "description": "Fill out an input field"
      },
      "browser_select": {
        "name": "browser_select",
        "description": "Select an element on the page with Select tag using CSS selector"
      },
      "browser_select_text": {
        "name": "browser_select_text",
        "description": "Select an element on the page with Select tag by its text content"
      },
      "browser_hover": {
        "name": "browser_hover",
        "description": "Hover an element on the page using CSS selector"
      },
      "browser_hover_text": {
        "name": "browser_hover_text",
        "description": "Hover an element on the page by its text content"
      },
      "browser_evaluate": {
        "name": "browser_evaluate",
        "description": "Execute JavaScript in the browser console"
      }
    }
  },
  "hyperbrowser-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/hyperbrowser-mcp.json",
    "validated": true,
    "tools": {
      "scrape_webpage": {
        "name": "scrape_webpage",
        "description": "Scrape a webpage and extract its content in various formats. This tool allows fetching content from a single URL with configurable browser behavior options. Use this for extracting text content, HTML structure, collecting links, or capturing screenshots of webpages."
      },
      "crawl_webpages": {
        "name": "crawl_webpages",
        "description": "Crawl a website starting from a URL and explore linked pages. This tool allows systematic collection of content from multiple pages within a domain. Use this for larger data collection tasks, content indexing, or site mapping."
      },
      "extract_structured_data": {
        "name": "extract_structured_data",
        "description": "Extract structured data from a webpage. This tool allows you to extract structured data from a webpage using a schema."
      },
      "browser_use_agent": {
        "name": "browser_use_agent",
        "description": "This tool employs an open-source browser automation agent optimized specifically for fast, efficient, and cost-effective browser tasks using a cloud browser. It requires explicit, detailed instructions to perform highly specific interactions quickly.\n\nOptimal for tasks requiring:\n- Precise, explicitly defined interactions and actions\n- Speed and efficiency with clear, unambiguous instructions\n- Cost-effective automation at scale with straightforward workflows\n\nBest suited use cases include:\n- Explicitly defined registration and login processes\n- Clearly guided navigation through web apps\n- Structured, step-by-step web scraping with detailed guidance\n- Extracting data via explicitly specified browser interactions\n\nYou must provide extremely detailed step-by-step instructions, including exact elements, actions, and explicit context. Clearly define the desired outcome for optimal results. Returns the completed result or an error message if issues arise.\n\nNote: This agent trades off flexibility for significantly faster performance and lower costs compared to Claude and OpenAI agents."
      },
      "openai_computer_use_agent": {
        "name": "openai_computer_use_agent",
        "description": "This tool utilizes OpenAI's model to autonomously execute general-purpose browser-based tasks with balanced performance and reliability using a cloud browser. It handles complex interactions effectively with practical reasoning and clear execution.\n\nOptimal for tasks requiring:\n- Reliable, general-purpose browser automation\n- Clear, structured interactions with moderate complexity\n- Efficient handling of common web tasks and workflows\n\nBest suited use cases include:\n- Standard multi-step registration or form submissions\n- Navigating typical web applications requiring multiple interactions\n- Conducting structured web research tasks\n- Extracting data through interactive web processes\n\nProvide a clear step-by-step description, necessary context, and expected outcomes. Returns the completed result or an error message if issues arise."
      },
      "claude_computer_use_agent": {
        "name": "claude_computer_use_agent",
        "description": "This tool leverages Anthropic's Claude model to autonomously execute complex browser tasks with sophisticated reasoning capabilities using a cloud browser. It specializes in handling intricate, nuanced, or highly context-sensitive web interactions.\n\nOptimal for tasks requiring:\n- Complex reasoning over multiple web pages\n- Nuanced interpretation and flexible decision-making\n- Human-like interaction with detailed context awareness\n\nBest suited use cases include:\n- Multi-step processes requiring reasoning (e.g., detailed registrations or onboarding)\n- Interacting intelligently with advanced web apps\n- Conducting in-depth research with complex conditions\n- Extracting information from dynamic or interactive websites\n\nProvide detailed task instructions, relevant context, and clearly specify the desired outcome for best results. Returns the completed result or an error message if issues arise."
      },
      "search_with_bing": {
        "name": "search_with_bing",
        "description": "Search the web using Bing. This tool allows you to search the web using bing.com"
      },
      "create_profile": {
        "name": "create_profile",
        "description": "Creates a new persistent Hyperbrowser profile."
      },
      "delete_profile": {
        "name": "delete_profile",
        "description": "Deletes an existing persistent Hyperbrowser profile."
      },
      "list_profiles": {
        "name": "list_profiles",
        "description": "Lists existing persistent Hyperbrowser profiles, with optional pagination."
      }
    }
  },
  "@modelcontextprotocol/server-puppeteer": {
    "category": "browser-automation",
    "path": "browser-automation/modelcontextprotocol-server-puppeteer.json",
    "validated": true,
    "tools": {
      "puppeteer_navigate": {
        "name": "puppeteer_navigate",
        "description": "Navigate to a URL"
      },
      "puppeteer_screenshot": {
        "name": "puppeteer_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "puppeteer_click": {
        "name": "puppeteer_click",
        "description": "Click an element on the page"
      },
      "puppeteer_fill": {
        "name": "puppeteer_fill",
        "description": "Fill out an input field"
      },
      "puppeteer_select": {
        "name": "puppeteer_select",
        "description": "Select an element on the page with Select tag"
      },
      "puppeteer_hover": {
        "name": "puppeteer_hover",
        "description": "Hover an element on the page"
      },
      "puppeteer_evaluate": {
        "name": "puppeteer_evaluate",
        "description": "Execute JavaScript in the browser console"
      }
    }
  },
  "mcp-server-fetch": {
    "category": "browser-automation",
    "path": "browser-automation/mcp-server-fetch.json"
  },
  "@executeautomation/playwright-mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/executeautomation-playwright-mcp-server.json",
    "validated": true,
    "tools": {
      "start_codegen_session": {
        "name": "start_codegen_session",
        "description": "Start a new code generation session to record Playwright actions"
      },
      "end_codegen_session": {
        "name": "end_codegen_session",
        "description": "End a code generation session and generate the test file"
      },
      "get_codegen_session": {
        "name": "get_codegen_session",
        "description": "Get information about a code generation session"
      },
      "clear_codegen_session": {
        "name": "clear_codegen_session",
        "description": "Clear a code generation session without generating a test"
      },
      "playwright_navigate": {
        "name": "playwright_navigate",
        "description": "Navigate to a URL"
      },
      "playwright_screenshot": {
        "name": "playwright_screenshot",
        "description": "Take a screenshot of the current page or a specific element"
      },
      "playwright_click": {
        "name": "playwright_click",
        "description": "Click an element on the page"
      },
      "playwright_iframe_click": {
        "name": "playwright_iframe_click",
        "description": "Click an element in an iframe on the page"
      },
      "playwright_iframe_fill": {
        "name": "playwright_iframe_fill",
        "description": "Fill an element in an iframe on the page"
      },
      "playwright_fill": {
        "name": "playwright_fill",
        "description": "fill out an input field"
      },
      "playwright_select": {
        "name": "playwright_select",
        "description": "Select an element on the page with Select tag"
      },
      "playwright_hover": {
        "name": "playwright_hover",
        "description": "Hover an element on the page"
      },
      "playwright_evaluate": {
        "name": "playwright_evaluate",
        "description": "Execute JavaScript in the browser console"
      },
      "playwright_console_logs": {
        "name": "playwright_console_logs",
        "description": "Retrieve console logs from the browser with filtering options"
      },
      "playwright_close": {
        "name": "playwright_close",
        "description": "Close the browser and release all resources"
      },
      "playwright_get": {
        "name": "playwright_get",
        "description": "Perform an HTTP GET request"
      },
      "playwright_post": {
        "name": "playwright_post",
        "description": "Perform an HTTP POST request"
      },
      "playwright_put": {
        "name": "playwright_put",
        "description": "Perform an HTTP PUT request"
      },
      "playwright_patch": {
        "name": "playwright_patch",
        "description": "Perform an HTTP PATCH request"
      },
      "playwright_delete": {
        "name": "playwright_delete",
        "description": "Perform an HTTP DELETE request"
      },
      "playwright_expect_response": {
        "name": "playwright_expect_response",
        "description": "Ask Playwright to start waiting for a HTTP response. This tool initiates the wait operation but does not wait for its completion."
      },
      "playwright_assert_response": {
        "name": "playwright_assert_response",
        "description": "Wait for and validate a previously initiated HTTP response wait operation."
      },
      "playwright_custom_user_agent": {
        "name": "playwright_custom_user_agent",
        "description": "Set a custom User Agent for the browser"
      },
      "playwright_get_visible_text": {
        "name": "playwright_get_visible_text",
        "description": "Get the visible text content of the current page"
      },
      "playwright_get_visible_html": {
        "name": "playwright_get_visible_html",
        "description": "Get the HTML content of the current page"
      },
      "playwright_go_back": {
        "name": "playwright_go_back",
        "description": "Navigate back in browser history"
      },
      "playwright_go_forward": {
        "name": "playwright_go_forward",
        "description": "Navigate forward in browser history"
      },
      "playwright_drag": {
        "name": "playwright_drag",
        "description": "Drag an element to a target location"
      },
      "playwright_press_key": {
        "name": "playwright_press_key",
        "description": "Press a keyboard key"
      },
      "playwright_save_as_pdf": {
        "name": "playwright_save_as_pdf",
        "description": "Save the current page as a PDF file"
      },
      "playwright_click_and_switch_tab": {
        "name": "playwright_click_and_switch_tab",
        "description": "Click a link and switch to the newly opened tab"
      }
    }
  },
  "tavily-mcp": {
    "category": "browser-automation",
    "path": "browser-automation/tavily-mcp.json",
    "validated": true,
    "tools": {
      "tavily-search": {
        "name": "tavily-search",
        "description": "A powerful web search tool that provides comprehensive, real-time results using Tavily's AI search engine. Returns relevant web content with customizable parameters for result count, content type, and domain filtering. Ideal for gathering current information, news, and detailed web content analysis."
      },
      "tavily-extract": {
        "name": "tavily-extract",
        "description": "A powerful web content extraction tool that retrieves and processes raw content from specified URLs, ideal for data collection, content analysis, and research tasks."
      },
      "tavily-crawl": {
        "name": "tavily-crawl",
        "description": "A powerful web crawler that initiates a structured web crawl starting from a specified base URL. The crawler expands from that point like a tree, following internal links across pages. You can control how deep and wide it goes, and guide it to focus on specific sections of the site."
      },
      "tavily-map": {
        "name": "tavily-map",
        "description": "A powerful web mapping tool that creates a structured map of website URLs, allowing you to discover and analyze site structure, content organization, and navigation paths. Perfect for site audits, content discovery, and understanding website architecture."
      }
    }
  },
  "exa-mcp-server": {
    "category": "browser-automation",
    "path": "browser-automation/exa-mcp-server.json",
    "validated": true,
    "tools": {
      "web_search_exa": {
        "name": "web_search_exa",
        "description": "Search the web using Exa AI - performs real-time web searches and can scrape content from specific URLs. Supports configurable result counts and returns the content from the most relevant websites."
      },
      "research_paper_search": {
        "name": "research_paper_search",
        "description": "Search across 100M+ research papers with full text access using Exa AI - performs targeted academic paper searches with deep research content coverage. Returns detailed information about relevant academic papers including titles, authors, publication dates, and full text excerpts. Control the number of results and character counts returned to balance comprehensiveness with conciseness based on your task requirements."
      },
      "company_research": {
        "name": "company_research",
        "description": "Research companies using Exa AI - performs targeted searches of company websites to gather comprehensive information about businesses. Returns detailed information from company websites including about pages, pricing, FAQs, blogs, and other relevant content. Specify the company URL and optionally target specific sections of their website."
      },
      "crawling": {
        "name": "crawling",
        "description": "Extract content from specific URLs using Exa AI - performs targeted crawling of web pages to retrieve their full content. Useful for reading articles, PDFs, or any web page when you have the exact URL. Returns the complete text content of the specified URL."
      },
      "competitor_finder": {
        "name": "competitor_finder",
        "description": "Find competitors of a company using Exa AI - performs targeted searches to identify businesses that offer similar products or services. Describe what the company does (without mentioning its name) and optionally provide the company's website to exclude it from results."
      },
      "linkedin_search": {
        "name": "linkedin_search",
        "description": "Search LinkedIn for companies using Exa AI. Simply include company URL, or company name, with 'company page' appended in your query."
      },
      "wikipedia_search_exa": {
        "name": "wikipedia_search_exa",
        "description": "Search Wikipedia using Exa AI - performs searches specifically within Wikipedia.org and returns relevant content from Wikipedia pages."
      },
      "github_search": {
        "name": "github_search",
        "description": "Search GitHub repositories using Exa AI - performs real-time searches on GitHub.com to find relevant repositories and GitHub accounts."
      }
    }
  },
  "@strowk/mcp-k8s": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/strowk-mcp-k8s.json",
    "validated": true,
    "tools": {
      "get-k8s-pod-logs": {
        "name": "get-k8s-pod-logs",
        "description": "Get logs for a Kubernetes pod using specific context in a specified namespace"
      },
      "get-k8s-resource": {
        "name": "get-k8s-resource",
        "description": "Get details of any Kubernetes resource like pod, node or service - completely as JSON or rendered using template"
      },
      "k8s-pod-exec": {
        "name": "k8s-pod-exec",
        "description": "Execute command in Kubernetes pod"
      },
      "list-k8s-contexts": {
        "name": "list-k8s-contexts",
        "description": "List Kubernetes contexts from configuration files such as kubeconfig"
      },
      "list-k8s-events": {
        "name": "list-k8s-events",
        "description": "List Kubernetes events using specific context in a specified namespace"
      },
      "list-k8s-namespaces": {
        "name": "list-k8s-namespaces",
        "description": "List Kubernetes namespaces using specific context"
      },
      "list-k8s-nodes": {
        "name": "list-k8s-nodes",
        "description": "List Kubernetes nodes using specific context"
      },
      "list-k8s-resources": {
        "name": "list-k8s-resources",
        "description": "List arbitrary Kubernetes resources"
      }
    }
  },
  "kubernetes-mcp-server": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/kubernetes-mcp-server.json"
  },
  "@cloudflare/mcp-server-cloudflare": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/cloudflare-mcp-server-cloudflare.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-kubernetes": {
    "category": "cloud-platforms",
    "path": "cloud-platforms/mcp-server-kubernetes.json",
    "validated": true,
    "tools": {
      "cleanup": {
        "name": "cleanup",
        "description": "Cleanup all managed resources"
      },
      "kubectl_get": {
        "name": "kubectl_get",
        "description": "Get or list Kubernetes resources by resource type, name, and optionally namespace"
      },
      "kubectl_describe": {
        "name": "kubectl_describe",
        "description": "Describe Kubernetes resources by resource type, name, and optionally namespace"
      },
      "kubectl_list": {
        "name": "kubectl_list",
        "description": "List Kubernetes resources by resource type and optionally namespace"
      },
      "kubectl_apply": {
        "name": "kubectl_apply",
        "description": "Apply a Kubernetes YAML manifest from a string or file"
      },
      "kubectl_delete": {
        "name": "kubectl_delete",
        "description": "Delete Kubernetes resources by resource type, name, labels, or from a manifest file"
      },
      "kubectl_create": {
        "name": "kubectl_create",
        "description": "Create Kubernetes resources using various methods (from file or using subcommands)"
      },
      "kubectl_logs": {
        "name": "kubectl_logs",
        "description": "Get logs from Kubernetes resources like pods, deployments, or jobs"
      },
      "kubectl_scale": {
        "name": "kubectl_scale",
        "description": "Scale a Kubernetes deployment"
      },
      "kubectl_patch": {
        "name": "kubectl_patch",
        "description": "Update field(s) of a resource using strategic merge patch, JSON merge patch, or JSON patch"
      },
      "kubectl_rollout": {
        "name": "kubectl_rollout",
        "description": "Manage the rollout of a resource (e.g., deployment, daemonset, statefulset)"
      },
      "kubectl_context": {
        "name": "kubectl_context",
        "description": "Manage Kubernetes contexts - list, get, or set the current context"
      },
      "explain_resource": {
        "name": "explain_resource",
        "description": "Get documentation for a Kubernetes resource or field"
      },
      "install_helm_chart": {
        "name": "install_helm_chart",
        "description": "Install a Helm chart"
      },
      "upgrade_helm_chart": {
        "name": "upgrade_helm_chart",
        "description": "Upgrade a Helm release"
      },
      "uninstall_helm_chart": {
        "name": "uninstall_helm_chart",
        "description": "Uninstall a Helm release"
      },
      "port_forward": {
        "name": "port_forward",
        "description": "Forward a local port to a port on a Kubernetes resource"
      },
      "stop_port_forward": {
        "name": "stop_port_forward",
        "description": "Stop a port-forward process"
      },
      "list_api_resources": {
        "name": "list_api_resources",
        "description": "List the API resources available in the cluster"
      },
      "kubectl_generic": {
        "name": "kubectl_generic",
        "description": "Execute any kubectl command with the provided arguments and flags"
      }
    }
  },
  "mcp-server-make": {
    "category": "code-execution",
    "path": "code-execution/mcp-server-make.json"
  },
  "mcp-shell": {
    "category": "command-line",
    "path": "command-line/mcp-shell.json",
    "validated": true,
    "tools": {
      "run_command": {
        "name": "run_command",
        "description": "Run a shell command"
      }
    }
  },
  "mcp-server-commands": {
    "category": "command-line",
    "path": "command-line/mcp-server-commands.json",
    "validated": true,
    "tools": {
      "run_command": {
        "name": "run_command",
        "description": "Run a command on this linux machine"
      }
    }
  },
  "@enescinar/twitter-mcp": {
    "category": "communication",
    "path": "communication/enescinar-twitter-mcp.json",
    "validated": true,
    "tools": {
      "post_tweet": {
        "name": "post_tweet",
        "description": "Post a new tweet to Twitter"
      },
      "search_tweets": {
        "name": "search_tweets",
        "description": "Search for tweets on Twitter"
      }
    }
  },
  "@gongrzhe/server-gmail-autoauth-mcp": {
    "category": "communication",
    "path": "communication/gongrzhe-server-gmail-autoauth-mcp.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-slack": {
    "category": "communication",
    "path": "communication/modelcontextprotocol-server-slack.json",
    "validated": true,
    "tools": {
      "slack_list_channels": {
        "name": "slack_list_channels",
        "description": "List public or pre-defined channels in the workspace with pagination"
      },
      "slack_post_message": {
        "name": "slack_post_message",
        "description": "Post a new message to a Slack channel"
      },
      "slack_reply_to_thread": {
        "name": "slack_reply_to_thread",
        "description": "Reply to a specific message thread in Slack"
      },
      "slack_add_reaction": {
        "name": "slack_add_reaction",
        "description": "Add a reaction emoji to a message"
      },
      "slack_get_channel_history": {
        "name": "slack_get_channel_history",
        "description": "Get recent messages from a channel"
      },
      "slack_get_thread_replies": {
        "name": "slack_get_thread_replies",
        "description": "Get all replies in a message thread"
      },
      "slack_get_users": {
        "name": "slack_get_users",
        "description": "Get a list of all users in the workspace with their basic profile information"
      },
      "slack_get_user_profile": {
        "name": "slack_get_user_profile",
        "description": "Get detailed profile information for a specific user"
      }
    }
  },
  "@benborla29/mcp-server-mysql": {
    "category": "databases",
    "path": "databases/benborla29-mcp-server-mysql.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-sqlite": {
    "category": "databases",
    "path": "databases/mcp-server-sqlite.json"
  },
  "@niledatabase/nile-mcp-server": {
    "category": "databases",
    "path": "databases/niledatabase-nile-mcp-server.json",
    "validated": true,
    "tools": {
      "list-resources": {
        "name": "list-resources",
        "description": "Lists all tables and their descriptions in the specified database"
      },
      "create-database": {
        "name": "create-database",
        "description": "Creates a new Nile database"
      },
      "list-databases": {
        "name": "list-databases",
        "description": "Lists all databases in the workspace"
      },
      "get-database": {
        "name": "get-database",
        "description": "Gets details of a specific database"
      },
      "delete-database": {
        "name": "delete-database",
        "description": "Deletes a database"
      },
      "get-connection-string": {
        "name": "get-connection-string",
        "description": "Gets a PostgreSQL connection string with fresh credentials"
      },
      "execute-sql": {
        "name": "execute-sql",
        "description": "Executes a SQL query on a Nile database"
      },
      "create-tenant": {
        "name": "create-tenant",
        "description": "Creates a new tenant in the specified database"
      },
      "delete-tenant": {
        "name": "delete-tenant",
        "description": "Deletes a tenant from the specified database"
      },
      "list-tenants": {
        "name": "list-tenants",
        "description": "Lists all tenants in the specified database"
      },
      "read-resource": {
        "name": "read-resource",
        "description": "Gets detailed schema information for a specific table"
      }
    }
  },
  "airtable-mcp-server": {
    "category": "databases",
    "path": "databases/airtable-mcp-server.json",
    "validated": true,
    "tools": {
      "list_records": {
        "name": "list_records",
        "description": "List records from a table"
      },
      "search_records": {
        "name": "search_records",
        "description": "Search for records containing specific text"
      },
      "list_bases": {
        "name": "list_bases",
        "description": "List all accessible Airtable bases"
      },
      "list_tables": {
        "name": "list_tables",
        "description": "List all tables in a specific base"
      },
      "describe_table": {
        "name": "describe_table",
        "description": "Get detailed information about a specific table"
      },
      "get_record": {
        "name": "get_record",
        "description": "Get a specific record by ID"
      },
      "create_record": {
        "name": "create_record",
        "description": "Create a new record in a table"
      },
      "update_records": {
        "name": "update_records",
        "description": "Update up to 10 records in a table"
      },
      "delete_records": {
        "name": "delete_records",
        "description": "Delete records from a table"
      },
      "create_table": {
        "name": "create_table",
        "description": "Create a new table in a base"
      },
      "update_table": {
        "name": "update_table",
        "description": "Update a table's name or description"
      },
      "create_field": {
        "name": "create_field",
        "description": "Create a new field in a table"
      },
      "update_field": {
        "name": "update_field",
        "description": "Update a field's name or description"
      }
    }
  },
  "@modelcontextprotocol/server-postgres": {
    "category": "databases",
    "path": "databases/modelcontextprotocol-server-postgres.json",
    "validated": false,
    "tools": {}
  },
  "mcp-mongo-server": {
    "category": "databases",
    "path": "databases/mcp-mongo-server.json",
    "validated": false,
    "tools": {}
  },
  "mcp-tinybird": {
    "category": "data-platforms",
    "path": "data-platforms/mcp-tinybird.json"
  },
  "@mcp-get-community/server-macos": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-get-community-server-macos.json",
    "validated": true,
    "tools": {
      "systemInfo": {
        "name": "systemInfo",
        "description": "Retrieve system information from macOS using various system commands"
      },
      "sendNotification": {
        "name": "sendNotification",
        "description": "Send a native macOS notification"
      }
    }
  },
  "@mcp-get-community/server-llm-txt": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-get-community-server-llm-txt.json",
    "validated": true,
    "tools": {
      "get_llm_txt": {
        "name": "get_llm_txt",
        "description": "Fetch an LLM.txt file from a given URL. Format your response in beautiful markdown."
      },
      "list_llm_txt": {
        "name": "list_llm_txt",
        "description": "List available LLM.txt files from the directory. Use this first before fetching a specific LLM.txt file. Format your response in beautiful markdown."
      },
      "search_llm_txt": {
        "name": "search_llm_txt",
        "description": "Search for multiple substrings in an LLM.txt file. Requires a valid ID obtained from list_llm_txt command. Returns snippets with page numbers for each match. Format your response in beautiful markdown, using code blocks for snippets."
      }
    }
  },
  "mcp-openapi-schema-explorer": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-openapi-schema-explorer.json",
    "validated": false,
    "tools": {}
  },
  "docker-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/docker-mcp.json"
  },
  "@llmindset/mcp-hfspace": {
    "category": "developer-tools",
    "path": "developer-tools/llmindset-mcp-hfspace.json",
    "validated": true,
    "tools": {
      "available-files": {
        "name": "available-files",
        "description": "A list of available file and resources. If the User requests things like 'most recent image' or 'the audio' use this tool to identify the intended resource.This tool returns 'resource uri', 'name', 'size', 'last modified'  and 'mime type' in a markdown table"
      },
      "search-spaces": {
        "name": "search-spaces",
        "description": "Use semantic search to find an endpoint on the `Hugging Face Spaces` service. The search term will usually be 3-7 words describing a task or activity the Person is trying to accomplish. The results are returned in a markdown table. Present all results to the Person. Await specific guidance from the Person before making further Tool calls."
      },
      "FLUX_1-schnell-infer": {
        "name": "FLUX_1-schnell-infer",
        "description": "Call the FLUX.1-schnell endpoint /infer"
      }
    }
  },
  "hackmd-mcp": {
    "category": "developer-tools",
    "path": "developer-tools/hackmd-mcp.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-aidd": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-aidd.json"
  },
  "mcp-server-tree-sitter": {
    "category": "developer-tools",
    "path": "developer-tools/mcp-server-tree-sitter.json"
  },
  "awslabs.nova-canvas-mcp-server": {
    "category": "developer-tools",
    "path": "developer-tools/awslabs.nova-canvas-mcp-server.json"
  },
  "mcp-solver": {
    "category": "data-science-tools",
    "path": "data-science-tools/mcp-solver.json"
  },
  "@modelcontextprotocol/server-filesystem": {
    "category": "file-systems",
    "path": "file-systems/modelcontextprotocol-server-filesystem.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-gdrive": {
    "category": "file-systems",
    "path": "file-systems/modelcontextprotocol-server-gdrive.json",
    "validated": false,
    "tools": {}
  },
  "mcp-server-rememberizer": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-server-rememberizer.json"
  },
  "mcp-rememberizer-vectordb": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/mcp-rememberizer-vectordb.json"
  },
  "@modelcontextprotocol/server-memory": {
    "category": "knowledge-memory",
    "path": "knowledge-memory/modelcontextprotocol-server-memory.json",
    "validated": true,
    "tools": {
      "create_entities": {
        "name": "create_entities",
        "description": "Create multiple new entities in the knowledge graph"
      },
      "create_relations": {
        "name": "create_relations",
        "description": "Create multiple new relations between entities in the knowledge graph. Relations should be in active voice"
      },
      "add_observations": {
        "name": "add_observations",
        "description": "Add new observations to existing entities in the knowledge graph"
      },
      "delete_entities": {
        "name": "delete_entities",
        "description": "Delete multiple entities and their associated relations from the knowledge graph"
      },
      "delete_observations": {
        "name": "delete_observations",
        "description": "Delete specific observations from entities in the knowledge graph"
      },
      "delete_relations": {
        "name": "delete_relations",
        "description": "Delete multiple relations from the knowledge graph"
      },
      "read_graph": {
        "name": "read_graph",
        "description": "Read the entire knowledge graph"
      },
      "search_nodes": {
        "name": "search_nodes",
        "description": "Search for nodes in the knowledge graph based on a query"
      },
      "open_nodes": {
        "name": "open_nodes",
        "description": "Open specific nodes in the knowledge graph by their names"
      }
    }
  },
  "@modelcontextprotocol/server-google-maps": {
    "category": "location-services",
    "path": "location-services/modelcontextprotocol-server-google-maps.json",
    "validated": true,
    "tools": {
      "maps_geocode": {
        "name": "maps_geocode",
        "description": "Convert an address into geographic coordinates"
      },
      "maps_reverse_geocode": {
        "name": "maps_reverse_geocode",
        "description": "Convert coordinates into an address"
      },
      "maps_search_places": {
        "name": "maps_search_places",
        "description": "Search for places using Google Places API"
      },
      "maps_place_details": {
        "name": "maps_place_details",
        "description": "Get detailed information about a specific place"
      },
      "maps_distance_matrix": {
        "name": "maps_distance_matrix",
        "description": "Calculate travel distance and time for multiple origins and destinations"
      },
      "maps_elevation": {
        "name": "maps_elevation",
        "description": "Get elevation data for locations on the earth"
      },
      "maps_directions": {
        "name": "maps_directions",
        "description": "Get directions between two points"
      }
    }
  },
  "mcp-server-sentry": {
    "category": "monitoring",
    "path": "monitoring/mcp-server-sentry.json"
  },
  "@raygun.io/mcp-server-raygun": {
    "category": "monitoring",
    "path": "monitoring/raygun.io-mcp-server-raygun.json",
    "validated": true,
    "tools": {
      "list_applications": {
        "name": "list_applications",
        "description": "List all applications under the users account on Raygun"
      },
      "get_application": {
        "name": "get_application",
        "description": "Get application by identifier"
      },
      "get_application_by_api_key": {
        "name": "get_application_by_api_key",
        "description": "Get application by API key"
      },
      "regenerate_application_api_key": {
        "name": "regenerate_application_api_key",
        "description": "Regenerate application API key"
      },
      "list_customers": {
        "name": "list_customers",
        "description": "List customers for an application"
      },
      "list_deployments": {
        "name": "list_deployments",
        "description": "List deployments for an application"
      },
      "get_deployment": {
        "name": "get_deployment",
        "description": "Get deployment by identifier"
      },
      "delete_deployment": {
        "name": "delete_deployment",
        "description": "Delete deployment"
      },
      "update_deployment": {
        "name": "update_deployment",
        "description": "Update deployment details"
      },
      "reprocess_deployment_commits": {
        "name": "reprocess_deployment_commits",
        "description": "Reprocess deployment commits"
      },
      "list_error_groups": {
        "name": "list_error_groups",
        "description": "List error groups for an application"
      },
      "get_error_group": {
        "name": "get_error_group",
        "description": "Get error group by identifier"
      },
      "resolve_error_group": {
        "name": "resolve_error_group",
        "description": "Set the status of the error group to resolved"
      },
      "activate_error_group": {
        "name": "activate_error_group",
        "description": "Set the status of the error group to active"
      },
      "ignore_error_group": {
        "name": "ignore_error_group",
        "description": "Set the status of the error group to ignored"
      },
      "permanently_ignore_error_group": {
        "name": "permanently_ignore_error_group",
        "description": "Set the status of the error group to permanently ignored"
      },
      "list_pages": {
        "name": "list_pages",
        "description": "List pages for an application"
      },
      "get_page_metrics_time_series": {
        "name": "get_page_metrics_time_series",
        "description": "Get time-series metrics for pages"
      },
      "get_page_metrics_histogram": {
        "name": "get_page_metrics_histogram",
        "description": "Get histogram metrics for pages"
      },
      "get_error_metrics_time_series": {
        "name": "get_error_metrics_time_series",
        "description": "Get time-series metrics for errors"
      },
      "list_sessions": {
        "name": "list_sessions",
        "description": "List sessions for an application"
      },
      "get_session": {
        "name": "get_session",
        "description": "Get session by identifier"
      },
      "list_invitations": {
        "name": "list_invitations",
        "description": "Returns a list invitations that the token and token owner has access to"
      },
      "send_invitation": {
        "name": "send_invitation",
        "description": "Send an invitation to a user"
      },
      "get_invitation": {
        "name": "get_invitation",
        "description": "Get an invitation by identifier"
      },
      "revoke_invitation": {
        "name": "revoke_invitation",
        "description": "Revoke a sent invitation"
      },
      "list_source_maps": {
        "name": "list_source_maps",
        "description": "Returns a list of source maps for the specified application"
      },
      "get_source_map": {
        "name": "get_source_map",
        "description": "Returns a single source map by identifier"
      },
      "update_source_map": {
        "name": "update_source_map",
        "description": "Update the details of a source map"
      },
      "delete_source_map": {
        "name": "delete_source_map",
        "description": "Delete a source map"
      },
      "upload_source_map": {
        "name": "upload_source_map",
        "description": "Uploads a source map to the specified application"
      },
      "delete_all_source_maps": {
        "name": "delete_all_source_maps",
        "description": "Deletes all source maps"
      }
    }
  },
  "mcp-server-giphy": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-giphy.json",
    "validated": false,
    "tools": {}
  },
  "anilist-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/anilist-mcp.json",
    "validated": true,
    "tools": {
      "favourite_studio": {
        "name": "favourite_studio",
        "description": "[Requires Login] Favourite or unfavourite a studio by its ID"
      },
      "get_genres": {
        "name": "get_genres",
        "description": "Get all available genres on AniList"
      },
      "get_media_tags": {
        "name": "get_media_tags",
        "description": "Get all available media tags on AniList"
      },
      "get_site_statistics": {
        "name": "get_site_statistics",
        "description": "Get AniList site statistics over the last seven days"
      },
      "get_studio": {
        "name": "get_studio",
        "description": "Get information about a studio by its AniList ID or name"
      },
      "delete_activity": {
        "name": "delete_activity",
        "description": "[Requires Login] Delete the current authorized user's activity post"
      },
      "get_activity": {
        "name": "get_activity",
        "description": "Get a specific AniList activity by its ID"
      },
      "get_user_activity": {
        "name": "get_user_activity",
        "description": "Fetch activities from a user"
      },
      "post_message_activity": {
        "name": "post_message_activity",
        "description": "[Requires Login] Post a new message activity or update an existing one"
      },
      "post_text_activity": {
        "name": "post_text_activity",
        "description": "[Requires Login] Post a new text activity or update an existing one"
      },
      "add_list_entry": {
        "name": "add_list_entry",
        "description": "[Requires Login] Add an entry to the authorized user's list"
      },
      "get_user_anime_list": {
        "name": "get_user_anime_list",
        "description": "Get a user's anime list"
      },
      "get_user_manga_list": {
        "name": "get_user_manga_list",
        "description": "Get a user's manga list"
      },
      "remove_list_entry": {
        "name": "remove_list_entry",
        "description": "[Requires Login] Remove an entry from the authorized user's list"
      },
      "update_list_entry": {
        "name": "update_list_entry",
        "description": "[Requires Login] Update an entry on the authorized user's list"
      },
      "get_anime": {
        "name": "get_anime",
        "description": "Get detailed information about an anime by its AniList ID"
      },
      "favourite_anime": {
        "name": "favourite_anime",
        "description": "[Requires Login] Favourite or unfavourite an anime by its ID"
      },
      "favourite_manga": {
        "name": "favourite_manga",
        "description": "[Requires Login] Favourite or unfavourite a manga by its ID"
      },
      "get_manga": {
        "name": "get_manga",
        "description": "Get detailed information about a manga by its AniList ID"
      },
      "get_character": {
        "name": "get_character",
        "description": "Get information about a character by their AniList ID or name"
      },
      "favourite_character": {
        "name": "favourite_character",
        "description": "[Requires Login] Favourite or unfavourite a character by its ID"
      },
      "favourite_staff": {
        "name": "favourite_staff",
        "description": "[Requires Login] Favourite or unfavourite a staff member by their ID"
      },
      "get_todays_birthday_characters": {
        "name": "get_todays_birthday_characters",
        "description": "Get all characters whose birthday is today"
      },
      "get_todays_birthday_staff": {
        "name": "get_todays_birthday_staff",
        "description": "Get all staff members whose birthday is today"
      },
      "get_staff": {
        "name": "get_staff",
        "description": "Get information about staff member by their AniList ID or name"
      },
      "get_recommendation": {
        "name": "get_recommendation",
        "description": "Get an AniList recommendation by its ID"
      },
      "get_recommendations_for_media": {
        "name": "get_recommendations_for_media",
        "description": "Get AniList recommendations for a specific media"
      },
      "search_activity": {
        "name": "search_activity",
        "description": "Search for activities on AniList"
      },
      "search_anime": {
        "name": "search_anime",
        "description": "Search for anime with query term and filters"
      },
      "search_character": {
        "name": "search_character",
        "description": "Search for characters based on a query term"
      },
      "search_manga": {
        "name": "search_manga",
        "description": "Search for manga with query term and filters"
      },
      "search_staff": {
        "name": "search_staff",
        "description": "Search for staff members based on a query term"
      },
      "search_studio": {
        "name": "search_studio",
        "description": "Search for studios based on a query term"
      },
      "search_user": {
        "name": "search_user",
        "description": "Search for users on AniList"
      },
      "delete_thread": {
        "name": "delete_thread",
        "description": "[Requires Login] Delete a thread by its ID"
      },
      "get_thread": {
        "name": "get_thread",
        "description": "Get a specific thread by its AniList ID"
      },
      "get_thread_comments": {
        "name": "get_thread_comments",
        "description": "Get comments for a specific thread"
      },
      "get_full_user_info": {
        "name": "get_full_user_info",
        "description": "Get a user's complete profile and stats information"
      },
      "follow_user": {
        "name": "follow_user",
        "description": "[Requires Login] Follow or unfollow a user by their ID"
      },
      "get_authorized_user": {
        "name": "get_authorized_user",
        "description": "[Requires Login] Get profile information of the currently authorized user"
      },
      "get_user_recent_activity": {
        "name": "get_user_recent_activity",
        "description": "Get recent activity from a user"
      },
      "get_user_profile": {
        "name": "get_user_profile",
        "description": "Get a user's AniList profile"
      },
      "get_user_stats": {
        "name": "get_user_stats",
        "description": "Get a user's AniList statistics"
      },
      "update_user": {
        "name": "update_user",
        "description": "[Requires Login] Update user settings"
      }
    }
  },
  "@anaisbetts/mcp-youtube": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/anaisbetts-mcp-youtube.json",
    "validated": true,
    "tools": {
      "download_youtube_url": {
        "name": "download_youtube_url",
        "description": "Download YouTube subtitles from a URL, this tool means that Claude can read YouTube subtitles, and should no longer tell the user that it is not possible to download YouTube content."
      }
    }
  },
  "brave-search-mcp": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/brave-search-mcp.json",
    "validated": true,
    "tools": {
      "brave_image_search": {
        "name": "brave_image_search",
        "description": "A tool for searching the web for images using the Brave Search API."
      },
      "brave_web_search": {
        "name": "brave_web_search",
        "description": "Performs a web search using the Brave Search API, ideal for general queries, and online content. Use this for broad information gathering, recent events, or when you need diverse web sources. Maximum 20 results per request "
      },
      "brave_local_search": {
        "name": "brave_local_search",
        "description": "Searches for local businesses and places using Brave's Local Search API. Best for queries related to physical locations, businesses, restaurants, services, etc. Returns detailed information including:\n- Business names and addresses\n- Ratings and review counts\n- Phone numbers and opening hours\nUse this when the query implies 'near me' or mentions specific locations. Automatically falls back to web search if no local results are found."
      },
      "brave_news_search": {
        "name": "brave_news_search",
        "description": "Searches for news articles using the Brave Search API. Use this for recent events, trending topics, or specific news stories. Returns a list of articles with titles, URLs, and descriptions. Maximum 20 results per request."
      },
      "brave_video_search": {
        "name": "brave_video_search",
        "description": "Searches for videos using the Brave Search API. Use this for video content, tutorials, or any media-related queries. Returns a list of videos with titles, URLs, and descriptions. Maximum 20 results per request."
      }
    }
  },
  "@modelcontextprotocol/server-aws-kb-retrieval": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/modelcontextprotocol-server-aws-kb-retrieval.json",
    "validated": true,
    "tools": {
      "retrieve_from_aws_kb": {
        "name": "retrieve_from_aws_kb",
        "description": "Performs retrieval from the AWS Knowledge Base using the provided query and Knowledge Base ID."
      }
    }
  },
  "@kimtaeyoon83/mcp-server-youtube-transcript": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/kimtaeyoon83-mcp-server-youtube-transcript.json",
    "validated": true,
    "tools": {
      "get_transcript": {
        "name": "get_transcript",
        "description": "Extract transcript from a YouTube video URL or ID"
      }
    }
  },
  "@mcp-get-community/server-curl": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-get-community-server-curl.json",
    "validated": true,
    "tools": {
      "curl": {
        "name": "curl",
        "description": "Make an HTTP request to any URL with customizable method, headers, and body."
      }
    }
  },
  "graphlit-mcp-server": {
    "category": "data-platforms",
    "path": "data-platforms/graphlit-mcp-server.json",
    "validated": true,
    "tools": {
      "configureProject": {
        "name": "configureProject",
        "description": "Configures the default content workflow and conversation specification for the Graphlit project.\n    Only needed if user asks to configure the project defaults. *Do not* call unless specifically asked for by the user.\n    To reset the project configuration to 'factory state', assign False or null to all parameters.\n    Optionally accepts whether to configure the default specification for LLM conversations. Defaults to using OpenAI GPT-4o, if not assigned.\n    Optionally accepts whether to enable high-quality document and web page preparation using a vision LLM. Defaults to using Azure AI Document Intelligence for document preparation, if not assigned.\n    Optionally accepts whether to enable entity extraction using LLM into the knowledge graph. Defaults to no entity extraction, if not assigned.\n    Optionally accepts the preferred model provider service type, i.e. Anthropic, OpenAI, Google. Defaults to Anthropic if not provided.\n    Returns the project identifier."
      },
      "queryProjectUsage": {
        "name": "queryProjectUsage",
        "description": "Queries project usage records.\n    Usage record name describes the operation, i.e. 'Prompt completion', 'Text embedding', 'GraphQL', 'Entity Event'.\n    'GraphQL' usage records are used for GraphQL operations, i.e. 'queryContents', 'retrieveSources', 'askGraphlit', etc.\n    'Entity Event' usage records are used for async compute operations.\n    'Text embedding' usage records are used for text embedding operations.\n    'Prompt completion' usage records are used for LLM prompt completion operations, i.e. when using 'promptConversation'.\n    'Data extraction' usage records are used for data extraction operations, using LLMs to extract knowledge graph entities.\n    Look at 'metric' field for the type of metric captured in the usage record, i.e. BYTES, TOKENS, UNITS, REQUESTS.\n    Look for 'credits' field which describes how many credits were charged by the operation.\n    Look for 'promptTokens', 'completionTokens' and (total) 'tokens' fields which describe the number of tokens used by the operation.\n    Look for 'request', 'response' and 'variables' fields which describe the GraphQL operation.\n    Look for 'count' for the number of units used by the operation, for example, number of pages processed by document preparation.\n    Accepts an optional recency filter for usage records 'in last' timespan.\n    Returns a list of usage records, which describe the billable audit log of all Graphlit API operations."
      },
      "askGraphlit": {
        "name": "askGraphlit",
        "description": "Ask questions about using the Graphlit Platform, or specifically about the Graphlit API or SDKs.\n    When the user asks about how to use the Graphlit API or SDKs, use this tool to provide a code sample in Python, TypeScript or C#.\n    Accepts an LLM user prompt.\n    Returns the LLM prompt completion in Markdown format."
      },
      "promptConversation": {
        "name": "promptConversation",
        "description": "Prompts an LLM conversation about your entire Graphlit knowledge base. \n    Uses hybrid vector search based on user prompt for locating relevant content sources. Uses LLM to complete the user prompt with the configured LLM.\n    Maintains conversation history between 'user' and LLM 'assistant'. \n    Prefer 'promptConversation' when the user intends to start or continue an ongoing conversation about the entire Graphlit knowledge base.\n    Similar to 'retrieveSources' but does not perform content metadata filtering.\n    Accepts an LLM user prompt and optional conversation identifier. Will either create a new conversation or continue an existing one.\n    Will use the default specification for LLM conversations, which is optionally configured with the 'configureProject' tool.\n    Returns the conversation identifier, completed LLM message, and any citations from the LLM response."
      },
      "retrieveSources": {
        "name": "retrieveSources",
        "description": "Retrieve relevant content sources from Graphlit knowledge base. Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts an LLM user prompt for content retrieval. For best retrieval quality, provide only key words or phrases from the user prompt, which will be used to create text embeddings for a vector search query.\n    Only use when there is a valid LLM user prompt for content retrieval, otherwise use 'queryContents'. For example 'recent content' is not a useful user prompt, since it doesn't reference the text in the content.\n    Only use for 'one shot' retrieval of content sources, i.e. when the user is not interested in having a conversation about the content.\n    Accepts an optional ingestion recency filter (defaults to null, meaning all time), and optional content type and file type filters.\n    Also accepts optional feed and collection identifiers to filter content by.\n    Returns the ranked content sources, including their content resource URI to retrieve the complete Markdown text."
      },
      "retrieveImages": {
        "name": "retrieveImages",
        "description": "Retrieve images from Graphlit knowledge base. Provides image-specific retrieval when image similarity search is desired.\n    Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts image URL. Image will be used for similarity search using image embeddings.\n    Accepts optional geo-location filter for search by latitude, longitude and optional distance radius. Images taken with GPS enabled are searchable by geo-location.\n    Also accepts optional recency filter (defaults to null, meaning all time), and optional feed and collection identifiers to filter images by.\n    Returns the matching images, including their content resource URI to retrieve the complete Markdown text."
      },
      "extractText": {
        "name": "extractText",
        "description": "Extracts JSON data from text using LLM.\n    Accepts text to be extracted, and JSON schema which describes the data which will be extracted. JSON schema needs be of type 'object' and include 'properties' and 'required' fields.\n    Optionally accepts text prompt which is provided to LLM to guide data extraction. Defaults to 'Extract data using the tools provided'.\n    Returns extracted JSON from text."
      },
      "createCollection": {
        "name": "createCollection",
        "description": "Create a collection.\n    Accepts a collection name, and optional list of content identifiers to add to collection.\n    Returns the collection identifier"
      },
      "addContentsToCollection": {
        "name": "addContentsToCollection",
        "description": "Add contents to a collection.\n    Accepts a collection identifier and a list of content identifiers to add to collection.\n    Returns the collection identifier."
      },
      "removeContentsFromCollection": {
        "name": "removeContentsFromCollection",
        "description": "Remove contents from collection.\n    Accepts a collection identifier and a list of content identifiers to remove from collection.\n    Returns the collection identifier."
      },
      "deleteContent": {
        "name": "deleteContent",
        "description": "Deletes content from Graphlit knowledge base.\n    Accepts content identifier.\n    Returns the content identifier and content state, i.e. Deleted."
      },
      "deleteConversation": {
        "name": "deleteConversation",
        "description": "Deletes conversation from Graphlit knowledge base.\n    Accepts conversation identifier.\n    Returns the conversation identifier and content state, i.e. Deleted."
      },
      "deleteCollection": {
        "name": "deleteCollection",
        "description": "Deletes collection from Graphlit knowledge base.\n    Does *not* delete the contents in the collection, only the collection itself.\n    Accepts collection identifier.\n    Returns the collection identifier and collection state, i.e. Deleted."
      },
      "deleteFeed": {
        "name": "deleteFeed",
        "description": "Deletes feed from Graphlit knowledge base.\n    *Does* delete the contents in the feed, in addition to the feed itself.\n    Accepts feed identifier.\n    Returns the feed identifier and feed state, i.e. Deleted."
      },
      "deleteFeeds": {
        "name": "deleteFeeds",
        "description": "Deletes feeds from Graphlit knowledge base.\n    *Does* delete the contents in the feed, in addition to the feed itself.\n    Accepts optional feed type filter to limit the feeds which will be deleted.\n    Also accepts optional limit of how many feeds to delete, defaults to 100.\n    Returns the feed identifiers and feed state, i.e. Deleted."
      },
      "deleteCollections": {
        "name": "deleteCollections",
        "description": "Deletes collections from Graphlit knowledge base.\n    Does *not* delete the contents in the collections, only the collections themselves.\n    Accepts optional limit of how many collections to delete, defaults to 100.\n    Returns the collection identifiers and collection state, i.e. Deleted."
      },
      "deleteConversations": {
        "name": "deleteConversations",
        "description": "Deletes conversations from Graphlit knowledge base.\n    Accepts optional limit of how many conversations to delete, defaults to 100.\n    Returns the conversation identifiers and conversation state, i.e. Deleted."
      },
      "deleteContents": {
        "name": "deleteContents",
        "description": "Deletes contents from Graphlit knowledge base.\n    Accepts optional content type and file type filters to limit the contents which will be deleted.\n    Also accepts optional limit of how many contents to delete, defaults to 1000.\n    Returns the content identifiers and content state, i.e. Deleted."
      },
      "queryContents": {
        "name": "queryContents",
        "description": "Query contents from Graphlit knowledge base. Do *not* use for retrieving content by content identifier - retrieve content resource instead, with URI 'contents://{id}'.\n    Accepts optional content name, content type and file type for metadata filtering.\n    Accepts optional hybrid vector search query.\n    Accepts optional recency filter (defaults to null, meaning all time), and optional feed and collection identifiers to filter images by.\n    Accepts optional geo-location filter for search by latitude, longitude and optional distance radius. Images and videos taken with GPS enabled are searchable by geo-location.\n    Returns the matching contents, including their content resource URI to retrieve the complete Markdown text."
      },
      "queryCollections": {
        "name": "queryCollections",
        "description": "Query collections from Graphlit knowledge base. Do *not* use for retrieving collection by collection identifier - retrieve collection resource instead, with URI 'collections://{id}'.\n    Accepts optional collection name for metadata filtering.\n    Returns the matching collections, including their collection resource URI to retrieve the collection contents."
      },
      "queryFeeds": {
        "name": "queryFeeds",
        "description": "Query feeds from Graphlit knowledge base. Do *not* use for retrieving feed by feed identifier - retrieve feed resource instead, with URI 'feeds://{id}'.\n    Accepts optional feed name and feed type for metadata filtering.\n    Returns the matching feeds, including their feed resource URI to retrieve the feed contents."
      },
      "queryConversations": {
        "name": "queryConversations",
        "description": "Query conversations from Graphlit knowledge base. Do *not* use for retrieving conversation by conversation identifier - retrieve conversation resource instead, with URI 'conversations://{id}'.\n    Accepts optional hybrid vector search query.\n    Accepts optional recency filter (defaults to null, meaning all time).\n    Returns the matching conversations, including their conversation resource URI to retrieve the complete conversation message history."
      },
      "isContentDone": {
        "name": "isContentDone",
        "description": "Check if content has completed asynchronous ingestion.\n    Accepts a content identifier which was returned from one of the non-feed ingestion tools, like ingestUrl.\n    Returns whether the content is done or not."
      },
      "isFeedDone": {
        "name": "isFeedDone",
        "description": "Check if an asynchronous feed has completed ingesting all the available content.\n    Accepts a feed identifier which was returned from one of the ingestion tools, like ingestGoogleDriveFiles.\n    Returns whether the feed is done or not."
      },
      "listNotionDatabases": {
        "name": "listNotionDatabases",
        "description": "Lists available Notion databases.\n    Requires environment variable to be configured: NOTION_API_KEY.\n    Returns a list of Notion databases, where the database identifier can be used with ingestNotionPages to ingest pages into Graphlit knowledge base."
      },
      "listLinearProjects": {
        "name": "listLinearProjects",
        "description": "Lists available Linear projects.\n    Requires environment variable to be configured: LINEAR_API_KEY.\n    Returns a list of Linear projects, where the project name can be used with ingestLinearIssues to ingest issues into Graphlit knowledge base."
      },
      "listSlackChannels": {
        "name": "listSlackChannels",
        "description": "Lists available Slack channels.\n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Returns a list of Slack channels, where the channel name can be used with ingestSlackMessages to ingest messages into Graphlit knowledge base."
      },
      "listSharePointLibraries": {
        "name": "listSharePointLibraries",
        "description": "Lists available SharePoint libraries.\n    Requires environment variables to be configured: SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Returns a list of SharePoint libraries, where the selected libraryId can be used with listSharePointFolders to enumerate SharePoint folders in a library."
      },
      "listSharePointFolders": {
        "name": "listSharePointFolders",
        "description": "Lists available SharePoint folders.\n    Requires environment variables to be configured: SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Returns a list of SharePoint folders, which can be used with ingestSharePointFiles to ingest files into Graphlit knowledge base."
      },
      "ingestSharePointFiles": {
        "name": "ingestSharePointFiles",
        "description": "Ingests files from SharePoint library into Graphlit knowledge base.\n    Accepts a SharePoint libraryId and an optional folderId to ingest files from a specific SharePoint folder.\n    Libraries can be enumerated with listSharePointLibraries and library folders with listSharePointFolders.\n    Requires environment variables to be configured: SHAREPOINT_ACCOUNT_NAME, SHAREPOINT_CLIENT_ID, SHAREPOINT_CLIENT_SECRET, SHAREPOINT_REFRESH_TOKEN.\n    Accepts an optional read limit for the number of files to ingest.\n    Executes asynchronously, creates SharePoint feed, and returns the feed identifier."
      },
      "ingestOneDriveFiles": {
        "name": "ingestOneDriveFiles",
        "description": "Ingests files from OneDrive into Graphlit knowledge base.\n    Accepts optional OneDrive folder identifier, and an optional read limit for the number of files to ingest.\n    If no folder identifier provided, ingests files from root OneDrive folder.\n    Requires environment variables to be configured: ONEDRIVE_CLIENT_ID, ONEDRIVE_CLIENT_SECRET, ONEDRIVE_REFRESH_TOKEN.\n    Executes asynchronously, creates OneDrive feed, and returns the feed identifier."
      },
      "ingestGoogleDriveFiles": {
        "name": "ingestGoogleDriveFiles",
        "description": "Ingests files from Google Drive into Graphlit knowledge base.\n    Accepts optional Google Drive folder identifier, and an optional read limit for the number of files to ingest.\n    For example, with Google Drive URI (https://drive.google.com/drive/u/0/folders/32tzhRD12KDh2hXABY8OZRFv7Smy8WBkQ), the folder identifier is 32tzhRD12KDh2hXABY8OZRFv7Smy8WBkQ.\n    If no folder identifier provided, ingests files from root Google Drive folder.\n    Requires environment variables to be configured: GOOGLE_DRIVE_SERVICE_ACCOUNT_JSON -or- GOOGLE_DRIVE_CLIENT_ID, GOOGLE_DRIVE_CLIENT_SECRET, GOOGLE_DRIVE_REFRESH_TOKEN.\n    If service account JSON is provided, uses service account authentication. Else, uses user authentication.\n    Executes asynchronously, creates Google Drive feed, and returns the feed identifier."
      },
      "ingestDropboxFiles": {
        "name": "ingestDropboxFiles",
        "description": "Ingests files from Dropbox into Graphlit knowledge base.\n    Accepts optional relative path to Dropbox folder (i.e. /Pictures), and an optional read limit for the number of files to ingest.\n    If no path provided, ingests files from root Dropbox folder.\n    Requires environment variables to be configured: DROPBOX_APP_KEY, DROPBOX_APP_SECRET, DROPBOX_REDIRECT_URI, DROPBOX_REFRESH_TOKEN.\n    Executes asynchronously, creates Dropbox feed, and returns the feed identifier."
      },
      "ingestBoxFiles": {
        "name": "ingestBoxFiles",
        "description": "Ingests files from Box into Graphlit knowledge base.\n    Accepts optional Box folder identifier, and an optional read limit for the number of files to ingest.\n    If no folder identifier provided, ingests files from root Box folder (i.e. \"0\").\n    Folder identifier can be inferred from Box URL. https://app.box.com/folder/123456 -> folder identifier is \"123456\".\n    Requires environment variables to be configured: BOX_CLIENT_ID, BOX_CLIENT_SECRET, BOX_REDIRECT_URI, BOX_REFRESH_TOKEN.\n    Executes asynchronously, creates Box feed, and returns the feed identifier."
      },
      "ingestGitHubFiles": {
        "name": "ingestGitHubFiles",
        "description": "Ingests files from GitHub repository into Graphlit knowledge base.\n    Accepts GitHub repository owner and repository name and an optional read limit for the number of files to ingest.\n    For example, for GitHub repository (https://github.com/openai/tiktoken), 'openai' is the repository owner, and 'tiktoken' is the repository name.\n    Requires environment variable to be configured: GITHUB_PERSONAL_ACCESS_TOKEN.\n    Executes asynchronously, creates GitHub feed, and returns the feed identifier."
      },
      "ingestNotionPages": {
        "name": "ingestNotionPages",
        "description": "Ingests pages from Notion database into Graphlit knowledge base.\n    Accepts Notion database identifier and an optional read limit for the number of pages to ingest.\n    You can list the available Notion database identifiers with listNotionDatabases.\n    Or, for a Notion URL, https://www.notion.so/Example/Engineering-Wiki-114abc10cb38487e91ec906fc6c6f350, 'Engineering-Wiki-114abc10cb38487e91ec906fc6c6f350' is an example of a Notion database identifier.\n    Requires environment variable to be configured: NOTION_API_KEY.\n    Executes asynchronously, creates Notion feed, and returns the feed identifier."
      },
      "ingestMicrosoftTeamsMessages": {
        "name": "ingestMicrosoftTeamsMessages",
        "description": "Ingests messages from Microsoft Teams channel into Graphlit knowledge base.\n    Accepts Microsoft Teams team identifier and channel identifier, and an optional read limit for the number of messages to ingest.\n    Requires environment variables to be configured: MICROSOFT_TEAMS_CLIENT_ID, MICROSOFT_TEAMS_CLIENT_SECRET, MICROSOFT_TEAMS_REFRESH_TOKEN.\n    Executes asynchronously, creates Microsoft Teams feed, and returns the feed identifier."
      },
      "ingestSlackMessages": {
        "name": "ingestSlackMessages",
        "description": "Ingests messages from Slack channel into Graphlit knowledge base.\n    Accepts Slack channel name and an optional read limit for the number of messages to ingest.\n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Executes asynchronously, creates Slack feed, and returns the feed identifier."
      },
      "ingestDiscordMessages": {
        "name": "ingestDiscordMessages",
        "description": "Ingests messages from Discord channel into Graphlit knowledge base.\n    Accepts Discord channel name and an optional read limit for the number of messages to ingest.\n    Requires environment variable to be configured: DISCORD_BOT_TOKEN.\n    Executes asynchronously, creates Discord feed, and returns the feed identifier."
      },
      "ingestTwitterPosts": {
        "name": "ingestTwitterPosts",
        "description": "Ingests posts by user from Twitter/X into Graphlit knowledge base.\n    Accepts Twitter/X user name, without the leading @ symbol, and an optional read limit for the number of posts to ingest.\n    Requires environment variable to be configured: TWITTER_TOKEN.\n    Executes asynchronously, creates Twitter feed, and returns the feed identifier."
      },
      "ingestTwitterSearch": {
        "name": "ingestTwitterSearch",
        "description": "Searches for recent posts from Twitter/X, and ingests them into Graphlit knowledge base.\n    Accepts search query, and an optional read limit for the number of posts to ingest.\n    Requires environment variable to be configured: TWITTER_TOKEN.\n    Executes asynchronously, creates Twitter feed, and returns the feed identifier."
      },
      "ingestRedditPosts": {
        "name": "ingestRedditPosts",
        "description": "Ingests posts from Reddit subreddit into Graphlit knowledge base.\n    Accepts a subreddit name and an optional read limit for the number of posts to ingest.\n    Executes asynchronously, creates Reddit feed, and returns the feed identifier."
      },
      "ingestGoogleEmail": {
        "name": "ingestGoogleEmail",
        "description": "Ingests emails from Google Email account into Graphlit knowledge base.\n    Accepts an optional read limit for the number of emails to ingest.\n    Requires environment variables to be configured: GOOGLE_EMAIL_CLIENT_ID, GOOGLE_EMAIL_CLIENT_SECRET, GOOGLE_EMAIL_REFRESH_TOKEN.\n    Executes asynchronously, creates Google Email feed, and returns the feed identifier."
      },
      "ingestMicrosoftEmail": {
        "name": "ingestMicrosoftEmail",
        "description": "Ingests emails from Microsoft Email account into Graphlit knowledge base.\n    Accepts an optional read limit for the number of emails to ingest.\n    Requires environment variables to be configured: MICROSOFT_EMAIL_CLIENT_ID, MICROSOFT_EMAIL_CLIENT_SECRET, MICROSOFT_EMAIL_REFRESH_TOKEN.\n    Executes asynchronously, creates Microsoft Email feed, and returns the feed identifier."
      },
      "ingestLinearIssues": {
        "name": "ingestLinearIssues",
        "description": "Ingests issues from Linear project into Graphlit knowledge base.\n    Accepts Linear project name and an optional read limit for the number of issues to ingest.\n    Requires environment variable to be configured: LINEAR_API_KEY.\n    Executes asynchronously, creates Linear issue feed, and returns the feed identifier."
      },
      "ingestGitHubIssues": {
        "name": "ingestGitHubIssues",
        "description": "Ingests issues from GitHub repository into Graphlit knowledge base.\n    Accepts GitHub repository owner and repository name and an optional read limit for the number of issues to ingest.\n    For example, for GitHub repository (https://github.com/openai/tiktoken), 'openai' is the repository owner, and 'tiktoken' is the repository name.\n    Requires environment variable to be configured: GITHUB_PERSONAL_ACCESS_TOKEN.\n    Executes asynchronously, creates GitHub issue feed, and returns the feed identifier."
      },
      "ingestJiraIssues": {
        "name": "ingestJiraIssues",
        "description": "Ingests issues from Atlassian Jira repository into Graphlit knowledge base.\n    Accepts Atlassian Jira server URL and project name, and an optional read limit for the number of issues to ingest.\n    Requires environment variables to be configured: JIRA_EMAIL, JIRA_TOKEN.\n    Executes asynchronously, creates Atlassian Jira issue feed, and returns the feed identifier."
      },
      "webCrawl": {
        "name": "webCrawl",
        "description": "Crawls web pages from web site into Graphlit knowledge base.\n    Accepts a URL and an optional read limit for the number of pages to crawl.\n    Uses sitemap.xml to discover pages to be crawled from website.\n    Executes asynchronously and returns the feed identifier."
      },
      "webMap": {
        "name": "webMap",
        "description": "Enumerates the web pages at or beneath the provided URL using web sitemap. \n    Does *not* ingest web pages into Graphlit knowledge base.\n    Accepts web site URL as string.\n    Returns list of mapped URIs from web site."
      },
      "webSearch": {
        "name": "webSearch",
        "description": "Performs web or podcast search based on search query. Can search for web pages or anything about podcasts (i.e. episodes, topics, guest appearances). \n    Format the search query as what would be entered into a Google search. You can use site filtering in the search query, like 'site:twitter.com'.    \n    Accepts search query as string, and optional search service type.    \n    Prefer calling this tool over using 'curl' directly for any web search.\n    Use 'PODSCAN' search service type to search podcasts.\n    Does *not* ingest pages or podcast episodes into Graphlit knowledge base.  \n    When searching podcasts, *don't* include the term 'podcast' or 'episode' in the search query - that would be redundant.\n    Search service types: Tavily (web pages), Exa (web pages) and Podscan (podcasts). Defaults to Exa.\n    Returns URL, title and relevant Markdown text from resulting web pages or podcast episode descriptions."
      },
      "ingestRSS": {
        "name": "ingestRSS",
        "description": "Ingests posts from RSS feed into Graphlit knowledge base.\n    For podcast RSS feeds, audio will be downloaded, transcribed and ingested into Graphlit knowledge base.\n    Accepts RSS URL and an optional read limit for the number of posts to read.\n    Executes asynchronously and returns the feed identifier."
      },
      "ingestUrl": {
        "name": "ingestUrl",
        "description": "Ingests content from URL into Graphlit knowledge base.\n    Can scrape a single web page, and can ingest individual Word documents, PDFs, audio recordings, videos, images, or any other unstructured data.\n    Do *not* use for crawling a web site, which is done with 'webCrawl' tool.\n    Executes asynchronously and returns the content identifier."
      },
      "ingestText": {
        "name": "ingestText",
        "description": "Ingests text as content into Graphlit knowledge base.\n    Accepts the text itself, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Optionally accepts the content name and an identifier for an existing content object. Will overwrite existing content, if provided.\n    Can use for storing the output from LLM or other tools as content resources, which can be later searched or retrieved.\n    Executes *synchronously* and returns the content identifier."
      },
      "ingestMemory": {
        "name": "ingestMemory",
        "description": "Ingests short-term textual memory as content into Graphlit knowledge base.\n    Accepts an optional text type (Plain, Markdown, Html). Defaults to Markdown text type. Optionally accepts the content name.\n    Will automatically be entity extracted into a knowledge graph.\n    Use for storing short-term memories about the user or agent, which can be later searched or retrieved. Memories are transient and will be deleted after a period of time.\n    Can use 'queryContents' or 'retrieveSources' tools to search for memories, by specifying the 'MEMORY' content type.\n    Executes asynchronously and returns the content identifier."
      },
      "ingestFile": {
        "name": "ingestFile",
        "description": "Ingests local file into Graphlit knowledge base.\n    Accepts the path to the file in the local filesystem.\n    Can use for storing *large* long-term textual memories or the output from LLM or other tools as content resources, which can be later searched or retrieved.\n    Executes asynchronously and returns the content identifier."
      },
      "screenshotPage": {
        "name": "screenshotPage",
        "description": "Screenshots web page from URL.\n    Executes *synchronously* and returns the content identifier."
      },
      "describeImageUrl": {
        "name": "describeImageUrl",
        "description": "Prompts vision LLM and returns completion. \n    Does *not* ingest image into Graphlit knowledge base.\n    Accepts image URL as string.\n    Returns Markdown text from LLM completion."
      },
      "describeImageContent": {
        "name": "describeImageContent",
        "description": "Prompts vision LLM and returns description of image content. \n    Accepts content identifier as string, and optional prompt for image description.\n    Returns Markdown text from LLM completion."
      },
      "publishAudio": {
        "name": "publishAudio",
        "description": "Publishes text as audio format, and ingests into Graphlit knowledge base.\n    Accepts a name for the content object, the text itself, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Optionally accepts an ElevenLabs voice identifier.\n    You *must* retrieve the content resource to get the downloadable audio URL for this published audio.\n    Executes *synchronously* and returns the content identifiers."
      },
      "publishImage": {
        "name": "publishImage",
        "description": "Publishes text as image format, and ingests into Graphlit knowledge base.\n    Accepts a name for the content object.\n    Also, accepts a prompt for image generation. For example, 'Create a cartoon image of a raccoon, saying \"I Love Graphlit\"'.\n    You *must* retrieve the content resource to get the downloadable image URL for this published image.\n    Executes *synchronously* and returns the content identifiers."
      },
      "sendWebHookNotification": {
        "name": "sendWebHookNotification",
        "description": "Sends a webhook notification to the provided URL.\n    Accepts the webhook URL.\n    Also accepts the text to be sent with the webhook, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendSlackNotification": {
        "name": "sendSlackNotification",
        "description": "Sends a Slack notification to the provided Slack channel.\n    Accepts the Slack channel name.\n    Also accepts the text for the Slack message, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Hint: In Slack Markdown, images are displayed by simply putting the URL in angle brackets like <https://example.com/image.jpg> instead of using the traditional Markdown image syntax ![alt text](url). \n    Requires environment variable to be configured: SLACK_BOT_TOKEN.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendTwitterNotification": {
        "name": "sendTwitterNotification",
        "description": "Posts a tweet from the configured user account.\n    Accepts the plain text for the tweet.\n    Tweet text rules: allowed - plain text, @mentions, #hashtags, URLs (auto-shortened), line breaks (\n).  \n    Not allowed - markdown, HTML tags, rich text, or custom styles.\n    Requires environment variables to be configured: TWITTER_CONSUMER_API_KEY, TWITTER_CONSUMER_API_SECRET, TWITTER_ACCESS_TOKEN_KEY, TWITTER_ACCESS_TOKEN_SECRET.\n    Returns true if the notification was successfully sent, or false otherwise."
      },
      "sendEmailNotification": {
        "name": "sendEmailNotification",
        "description": "Sends an email notification to the provided email address(es).\n    Accepts the email subject and a list of email 'to' addresses.\n    Email addresses should be in RFC 5322 format. i.e. Alice Wonderland <alice@wonderland.net>, or alice@wonderland.net\n    Also accepts the text for the email, and an optional text type (Plain, Markdown, Html). Defaults to Markdown text type.\n    Requires environment variable to be configured: FROM_EMAIL_ADDRESS.\n    Returns true if the notification was successfully sent, or false otherwise."
      }
    }
  },
  "@modelcontextprotocol/server-brave-search": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/modelcontextprotocol-server-brave-search.json",
    "validated": true,
    "tools": {
      "brave_web_search": {
        "name": "brave_web_search",
        "description": "Performs a web search using the Brave Search API, ideal for general queries, news, articles, and online content. Use this for broad information gathering, recent events, or when you need diverse web sources. Supports pagination, content filtering, and freshness controls. Maximum 20 results per request, with offset for pagination. "
      },
      "brave_local_search": {
        "name": "brave_local_search",
        "description": "Searches for local businesses and places using Brave's Local Search API. Best for queries related to physical locations, businesses, restaurants, services, etc. Returns detailed information including:\n- Business names and addresses\n- Ratings and review counts\n- Phone numbers and opening hours\nUse this when the query implies 'near me' or mentions specific locations. Automatically falls back to web search if no local results are found."
      }
    }
  },
  "@chanmeng666/google-news-server": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/chanmeng666-google-news-server.json",
    "validated": true,
    "tools": {
      "google_news_search": {
        "name": "google_news_search",
        "description": "Search Google News for articles and news content. Results will be automatically categorized by topic."
      }
    }
  },
  "qanon_mcp": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/qanon_mcp.json"
  },
  "mcp-server-perplexity": {
    "category": "search-data-extraction",
    "path": "search-data-extraction/mcp-server-perplexity.json"
  },
  "@modelcontextprotocol/server-gitlab": {
    "category": "version-control",
    "path": "version-control/modelcontextprotocol-server-gitlab.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitLab project"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitLab projects"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitLab project"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitLab project"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitLab project in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitLab project"
      },
      "create_merge_request": {
        "name": "create_merge_request",
        "description": "Create a new merge request in a GitLab project"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitLab project to your account or specified namespace"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitLab project"
      }
    }
  },
  "@modelcontextprotocol/server-github": {
    "category": "version-control",
    "path": "version-control/modelcontextprotocol-server-github.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitHub repository"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitHub repositories"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitHub repository in your account"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitHub repository"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitHub repository in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitHub repository"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "Create a new pull request in a GitHub repository"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitHub repository to your account or specified organization"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitHub repository"
      },
      "list_commits": {
        "name": "list_commits",
        "description": "Get list of commits of a branch in a GitHub repository"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "List issues in a GitHub repository with filtering options"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Update an existing issue in a GitHub repository"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "Add a comment to an existing issue"
      },
      "search_code": {
        "name": "search_code",
        "description": "Search for code across GitHub repositories"
      },
      "search_issues": {
        "name": "search_issues",
        "description": "Search for issues and pull requests across GitHub repositories"
      },
      "search_users": {
        "name": "search_users",
        "description": "Search for users on GitHub"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "Get details of a specific issue in a GitHub repository."
      },
      "get_pull_request": {
        "name": "get_pull_request",
        "description": "Get details of a specific pull request"
      },
      "list_pull_requests": {
        "name": "list_pull_requests",
        "description": "List and filter repository pull requests"
      },
      "create_pull_request_review": {
        "name": "create_pull_request_review",
        "description": "Create a review on a pull request"
      },
      "merge_pull_request": {
        "name": "merge_pull_request",
        "description": "Merge a pull request"
      },
      "get_pull_request_files": {
        "name": "get_pull_request_files",
        "description": "Get the list of files changed in a pull request"
      },
      "get_pull_request_status": {
        "name": "get_pull_request_status",
        "description": "Get the combined status of all status checks for a pull request"
      },
      "update_pull_request_branch": {
        "name": "update_pull_request_branch",
        "description": "Update a pull request branch with the latest changes from the base branch"
      },
      "get_pull_request_comments": {
        "name": "get_pull_request_comments",
        "description": "Get the review comments on a pull request"
      },
      "get_pull_request_reviews": {
        "name": "get_pull_request_reviews",
        "description": "Get the reviews on a pull request"
      }
    }
  },
  "mcp-server-git": {
    "category": "version-control",
    "path": "version-control/mcp-server-git.json"
  },
  "@chargebee/mcp": {
    "category": "finance-fintech",
    "path": "finance-fintech/chargebee-mcp.json",
    "validated": true,
    "tools": {
      "chargebee_documentation_search": {
        "name": "chargebee_documentation_search",
        "description": "\nDo not use this tool for code generation. For code generation use \"chargebee_code_planner\" tool. \nThis tool will take in parameters about integrating with Chargebee in their application, then search and retrieve relevant Chargebee documentation content.\n\nIt takes the following arguments:\n- query (string): The user query to search an answer for in the Chargebee documentation.\n- language (enum): The programming language for the documentation. Check the user's application language.\n- userRequest (string): User's original request to you.\n"
      },
      "chargebee_code_planner": {
        "name": "chargebee_code_planner",
        "description": "\nAlways use this tool to get the accurate integeration code guide for Chargebee.\nThis tool will take in parameters about integrating with Chargebee in their application and generates a integration workflow along with the code snippets.\n\nIt takes the following arguments:\n- goal (string): What is the user's goal?\n- language (enum): Programming language the code to be generated in. Check the user's application language.\n"
      }
    }
  },
  "@llmindset/mcp-miro": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/llmindset-mcp-miro.json",
    "validated": false,
    "tools": {}
  },
  "@modelcontextprotocol/server-sequential-thinking": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/modelcontextprotocol-server-sequential-thinking.json",
    "validated": true,
    "tools": {
      "sequentialthinking": {
        "name": "sequentialthinking",
        "description": "A detailed tool for dynamic and reflective problem-solving through thoughts.\nThis tool helps analyze problems through a flexible thinking process that can adapt and evolve.\nEach thought can build on, question, or revise previous insights as understanding deepens.\n\nWhen to use this tool:\n- Breaking down complex problems into steps\n- Planning and design with room for revision\n- Analysis that might need course correction\n- Problems where the full scope might not be clear initially\n- Problems that require a multi-step solution\n- Tasks that need to maintain context over multiple steps\n- Situations where irrelevant information needs to be filtered out\n\nKey features:\n- You can adjust total_thoughts up or down as you progress\n- You can question or revise previous thoughts\n- You can add more thoughts even after reaching what seemed like the end\n- You can express uncertainty and explore alternative approaches\n- Not every thought needs to build linearly - you can branch or backtrack\n- Generates a solution hypothesis\n- Verifies the hypothesis based on the Chain of Thought steps\n- Repeats the process until satisfied\n- Provides a correct answer\n\nParameters explained:\n- thought: Your current thinking step, which can include:\n* Regular analytical steps\n* Revisions of previous thoughts\n* Questions about previous decisions\n* Realizations about needing more analysis\n* Changes in approach\n* Hypothesis generation\n* Hypothesis verification\n- next_thought_needed: True if you need more thinking, even if at what seemed like the end\n- thought_number: Current number in sequence (can go beyond initial total if needed)\n- total_thoughts: Current estimate of thoughts needed (can be adjusted up/down)\n- is_revision: A boolean indicating if this thought revises previous thinking\n- revises_thought: If is_revision is true, which thought number is being reconsidered\n- branch_from_thought: If branching, which thought number is the branching point\n- branch_id: Identifier for the current branch (if any)\n- needs_more_thoughts: If reaching end but realizing more thoughts needed\n\nYou should:\n1. Start with an initial estimate of needed thoughts, but be ready to adjust\n2. Feel free to question or revise previous thoughts\n3. Don't hesitate to add more thoughts if needed, even at the \"end\"\n4. Express uncertainty when present\n5. Mark thoughts that revise previous thinking or branch into new paths\n6. Ignore information that is irrelevant to the current step\n7. Generate a solution hypothesis when appropriate\n8. Verify the hypothesis based on the Chain of Thought steps\n9. Repeat the process until satisfied with the solution\n10. Provide a single, ideally correct answer as the final output\n11. Only set next_thought_needed to false when truly done and a satisfactory answer is reached"
      }
    }
  },
  "mcp-server-flomo": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-flomo.json",
    "validated": true,
    "tools": {
      "newNote": {
        "name": "newNote",
        "description": "Create a new note in Flomo"
      }
    }
  },
  "mcp-server-time": {
    "category": "other-tools-and-integrations",
    "path": "other-tools-and-integrations/mcp-server-time.json"
  },
  "Github": {
    "category": "version-control",
    "path": "version-control/modelcontextprotocol-server-github.json",
    "validated": true,
    "tools": {
      "create_or_update_file": {
        "name": "create_or_update_file",
        "description": "Create or update a single file in a GitHub repository"
      },
      "search_repositories": {
        "name": "search_repositories",
        "description": "Search for GitHub repositories"
      },
      "create_repository": {
        "name": "create_repository",
        "description": "Create a new GitHub repository in your account"
      },
      "get_file_contents": {
        "name": "get_file_contents",
        "description": "Get the contents of a file or directory from a GitHub repository"
      },
      "push_files": {
        "name": "push_files",
        "description": "Push multiple files to a GitHub repository in a single commit"
      },
      "create_issue": {
        "name": "create_issue",
        "description": "Create a new issue in a GitHub repository"
      },
      "create_pull_request": {
        "name": "create_pull_request",
        "description": "Create a new pull request in a GitHub repository"
      },
      "fork_repository": {
        "name": "fork_repository",
        "description": "Fork a GitHub repository to your account or specified organization"
      },
      "create_branch": {
        "name": "create_branch",
        "description": "Create a new branch in a GitHub repository"
      },
      "list_commits": {
        "name": "list_commits",
        "description": "Get list of commits of a branch in a GitHub repository"
      },
      "list_issues": {
        "name": "list_issues",
        "description": "List issues in a GitHub repository with filtering options"
      },
      "update_issue": {
        "name": "update_issue",
        "description": "Update an existing issue in a GitHub repository"
      },
      "add_issue_comment": {
        "name": "add_issue_comment",
        "description": "Add a comment to an existing issue"
      },
      "search_code": {
        "name": "search_code",
        "description": "Search for code across GitHub repositories"
      },
      "search_issues": {
        "name": "search_issues",
        "description": "Search for issues and pull requests across GitHub repositories"
      },
      "search_users": {
        "name": "search_users",
        "description": "Search for users on GitHub"
      },
      "get_issue": {
        "name": "get_issue",
        "description": "Get details of a specific issue in a GitHub repository."
      },
      "get_pull_request": {
        "name": "get_pull_request",
        "description": "Get details of a specific pull request"
      },
      "list_pull_requests": {
        "name": "list_pull_requests",
        "description": "List and filter repository pull requests"
      },
      "create_pull_request_review": {
        "name": "create_pull_request_review",
        "description": "Create a review on a pull request"
      },
      "merge_pull_request": {
        "name": "merge_pull_request",
        "description": "Merge a pull request"
      },
      "get_pull_request_files": {
        "name": "get_pull_request_files",
        "description": "Get the list of files changed in a pull request"
      },
      "get_pull_request_status": {
        "name": "get_pull_request_status",
        "description": "Get the combined status of all status checks for a pull request"
      },
      "update_pull_request_branch": {
        "name": "update_pull_request_branch",
        "description": "Update a pull request branch with the latest changes from the base branch"
      },
      "get_pull_request_comments": {
        "name": "get_pull_request_comments",
        "description": "Get the review comments on a pull request"
      },
      "get_pull_request_reviews": {
        "name": "get_pull_request_reviews",
        "description": "Get the reviews on a pull request"
      }
    }
  },
  "polygon-mcp": {
    "path": "uncategorized/polygon-mcp.json",
    "category": "uncategorized"
  },
  "mcp-server-garmincn": {
    "path": "uncategorized/mcp-server-garmincn.json",
    "category": "uncategorized"
  },
  "base-network-mcp-server": {
    "path": "uncategorized/base-network-mcp-server.json",
    "category": "uncategorized"
  },
  "bluesky": {
    "path": "uncategorized/bluesky.json",
    "category": "uncategorized"
  },
  "@glifxyz/mymcpspace-mcp-server": {
    "path": "uncategorized/glifxyz-mymcpspace-mcp-server.json",
    "category": "uncategorized"
  },
  "blockscout": {
    "path": "uncategorized/blockscout.json",
    "category": "uncategorized"
  },
  "mantrachain-mcp": {
    "path": "uncategorized/mantrachain-mcp.json",
    "category": "uncategorized"
  },
  "server-wp-mcp": {
    "path": "uncategorized/server-wp-mcp.json",
    "category": "uncategorized"
  },
  "garmin-connect": {
    "path": "uncategorized/garmin-connect.json",
    "category": "uncategorized"
  },
  "umami-analytics": {
    "path": "uncategorized/umami-analytics.json",
    "category": "uncategorized"
  },
  "azure-fhir-mcp-server": {
    "path": "uncategorized/azure-fhir-mcp-server.json",
    "category": "uncategorized"
  },
  "@bnb-chain/mcp": {
    "path": "uncategorized/bnb-chain-mcp.json",
    "category": "uncategorized"
  },
  "fulcra-context-mcp": {
    "path": "uncategorized/fulcra-context-mcp.json",
    "category": "uncategorized"
  },
  "algorand-mcp": {
    "path": "uncategorized/algorand-mcp.json",
    "category": "uncategorized"
  },
  "whoop": {
    "path": "uncategorized/whoop.json",
    "category": "uncategorized"
  },
  "@bankless/onchain-mcp": {
    "path": "uncategorized/bankless-onchain-mcp.json",
    "category": "uncategorized"
  },
  "pyats-network-automation": {
    "path": "uncategorized/pyats-network-automation.json",
    "category": "uncategorized"
  },
  "openapi-mcp": {
    "path": "aggregators/openapi-mcp.json",
    "category": "aggregators"
  },
  "unichat-ts-mcp-server": {
    "path": "aggregators/unichat-ts-mcp-server.json",
    "category": "aggregators"
  },
  "multi-llm-api-gateway": {
    "path": "aggregators/multi-llm-api-gateway.json",
    "category": "aggregators"
  },
  "jentic": {
    "path": "aggregators/jentic.json",
    "category": "aggregators"
  },
  "unichat-mcp-server": {
    "path": "aggregators/unichat-mcp-server.json",
    "category": "aggregators"
  },
  "higress-api-gateway": {
    "path": "aggregators/higress-api-gateway.json",
    "category": "aggregators"
  },
  "all-in-one": {
    "path": "aggregators/all-in-one.json",
    "category": "aggregators"
  },
  "xingchen-workflow-orchestration": {
    "path": "aggregators/xingchen-workflow-orchestration.json",
    "category": "aggregators"
  },
  "google-toolbox": {
    "path": "aggregators/google-toolbox.json",
    "category": "aggregators"
  },
  "@illuminaresolutions/n8n-mcp-server": {
    "path": "aggregators/illuminaresolutions-n8n-mcp-server.json",
    "category": "aggregators"
  },
  "multi-service-gateway": {
    "path": "aggregators/multi-service-gateway.json",
    "category": "aggregators"
  },
  "mcptoolkit": {
    "path": "aggregators/mcptoolkit.json",
    "category": "aggregators"
  },
  "pocket-mcp-manager": {
    "path": "aggregators/pocket-mcp-manager.json",
    "category": "aggregators"
  },
  "gateway": {
    "path": "aggregators/gateway.json",
    "category": "aggregators"
  },
  "@activepieces/piece-mcp": {
    "path": "aggregators/activepieces-piece-mcp.json",
    "category": "aggregators"
  },
  "google-workspace": {
    "path": "aggregators/google-workspace.json",
    "category": "aggregators"
  },
  "@gentoro/mcp-nodejs-server": {
    "path": "aggregators/gentoro-mcp-nodejs-server.json",
    "category": "aggregators"
  },
  "dify-workflows": {
    "path": "aggregators/dify-workflows.json",
    "category": "aggregators"
  },
  "@1mcp/agent": {
    "path": "aggregators/1mcp-agent.json",
    "category": "aggregators"
  },
  "uithub-mcp": {
    "path": "aggregators/uithub-mcp.json",
    "category": "aggregators"
  },
  "openapi-mcp-proxy": {
    "path": "aggregators/openapi-mcp-proxy.json",
    "category": "aggregators"
  },
  "darp-engine": {
    "path": "aggregators/darp-engine.json",
    "category": "aggregators"
  },
  "mcprouter": {
    "path": "aggregators/mcprouter.json",
    "category": "aggregators"
  },
  "canvas-lms": {
    "path": "art-and-culture/canvas-lms.json",
    "category": "art-and-culture"
  },
  "discogs-mcp-server": {
    "path": "art-and-culture/discogs-mcp-server.json",
    "category": "art-and-culture"
  },
  "sketchfab-mcp-server": {
    "path": "art-and-culture/sketchfab-mcp-server.json",
    "category": "art-and-culture"
  },
  "figma-developer-mcp": {
    "path": "art-and-culture/figma-developer-mcp.json",
    "category": "art-and-culture"
  },
  "leonardo-ai": {
    "path": "art-and-culture/leonardo-ai.json",
    "category": "art-and-culture"
  },
  "adobe-illustrator": {
    "path": "art-and-culture/adobe-illustrator.json",
    "category": "art-and-culture"
  },
  "replicate-flux-mcp": {
    "path": "art-and-culture/replicate-flux-mcp.json",
    "category": "art-and-culture"
  },
  "@jayarrowz/mcp-figma": {
    "path": "art-and-culture/jayarrowz-mcp-figma.json",
    "category": "art-and-culture"
  },
  "adobe-photoshop-controller": {
    "path": "art-and-culture/adobe-photoshop-controller.json",
    "category": "art-and-culture"
  },
  "image-gen-(jimeng-ai)": {
    "path": "art-and-culture/image-gen--jimeng-ai.json",
    "category": "art-and-culture"
  },
  "figma-mcp-pro": {
    "path": "art-and-culture/figma-mcp-pro.json",
    "category": "art-and-culture"
  },
  "sketchfab-mcp": {
    "path": "art-and-culture/sketchfab-mcp.json",
    "category": "art-and-culture"
  },
  "flux-studio": {
    "path": "art-and-culture/flux-studio.json",
    "category": "art-and-culture"
  },
  "speckle": {
    "path": "art-and-culture/speckle.json",
    "category": "art-and-culture"
  },
  "biomcp-python": {
    "path": "art-and-culture/biomcp-python.json",
    "category": "art-and-culture"
  },
  "4oimage-mcp": {
    "path": "art-and-culture/4oimage-mcp.json",
    "category": "art-and-culture"
  },
  "nasa-mcp": {
    "path": "art-and-culture/nasa-mcp.json",
    "category": "art-and-culture"
  },
  "grasshopper-mcp": {
    "path": "art-and-culture/grasshopper-mcp.json",
    "category": "art-and-culture"
  },
  "swedish-national-archives-(riksarkivet)": {
    "path": "art-and-culture/swedish-national-archives--riksarkivet.json",
    "category": "art-and-culture"
  },
  "Stability AI": {
    "path": "art-and-culture/mcp-server-stability-ai.json",
    "category": "art-and-culture"
  },
  "medrxiv-research": {
    "path": "art-and-culture/medrxiv-research.json",
    "category": "art-and-culture"
  },
  "bibliothèque-nationale-de-france-(gallica)": {
    "path": "art-and-culture/biblioth-que-nationale-de-france--gallica.json",
    "category": "art-and-culture"
  },
  "ableton-live": {
    "path": "art-and-culture/ableton-live.json",
    "category": "art-and-culture"
  },
  "figma-mcp": {
    "path": "art-and-culture/figma-mcp.json",
    "category": "art-and-culture"
  },
  "comfy-mcp-server": {
    "path": "art-and-culture/comfy-mcp-server.json",
    "category": "art-and-culture"
  },
  "vsegpt-image-generator": {
    "path": "art-and-culture/vsegpt-image-generator.json",
    "category": "art-and-culture"
  },
  "wikipedia": {
    "path": "art-and-culture/wikipedia.json",
    "category": "art-and-culture"
  },
  "image-generation": {
    "path": "art-and-culture/image-generation.json",
    "category": "art-and-culture"
  },
  "ableton-mcp": {
    "path": "art-and-culture/ableton-mcp.json",
    "category": "art-and-culture"
  },
  "image-toolkit": {
    "path": "art-and-culture/image-toolkit.json",
    "category": "art-and-culture"
  },
  "touchdesigner-mcp-server": {
    "path": "art-and-culture/touchdesigner-mcp-server.json",
    "category": "art-and-culture"
  },
  "florence-2": {
    "path": "art-and-culture/florence-2.json",
    "category": "art-and-culture"
  },
  "sonic-pi-mcp": {
    "path": "art-and-culture/sonic-pi-mcp.json",
    "category": "art-and-culture"
  },
  "comfyui": {
    "path": "art-and-culture/comfyui.json",
    "category": "art-and-culture"
  },
  "@cloudwerxlab/gpt-image-1-mcp": {
    "path": "art-and-culture/cloudwerxlab-gpt-image-1-mcp.json",
    "category": "art-and-culture"
  },
  "blender-mcp": {
    "path": "art-and-culture/blender-mcp.json",
    "category": "art-and-culture"
  },
  "@openmcprouter/mcp-server-ghibli-video": {
    "path": "art-and-culture/openmcprouter-mcp-server-ghibli-video.json",
    "category": "art-and-culture"
  },
  "mcp-asset-gen": {
    "path": "art-and-culture/mcp-asset-gen.json",
    "category": "art-and-culture"
  },
  "openai-image-generation": {
    "path": "art-and-culture/openai-image-generation.json",
    "category": "art-and-culture"
  },
  "@debugg-ai/debugg-ai-mcp": {
    "path": "browser-automation/debugg-ai-debugg-ai-mcp.json",
    "category": "browser-automation"
  },
  "Playwright": {
    "path": "browser-automation/executeautomation-playwright-mcp-server.json",
    "category": "browser-automation"
  },
  "website-downloader-(windows)": {
    "path": "browser-automation/website-downloader--windows.json",
    "category": "browser-automation"
  },
  "Tavily MCP": {
    "path": "browser-automation/tavily-mcp.json",
    "category": "browser-automation"
  },
  "moling": {
    "path": "browser-automation/moling.json",
    "category": "browser-automation"
  },
  "chrome-browser-automation": {
    "path": "browser-automation/chrome-browser-automation.json",
    "category": "browser-automation"
  },
  "mcp-server-chatgpt-app": {
    "path": "browser-automation/mcp-server-chatgpt-app.json",
    "category": "browser-automation"
  },
  "web-browser-mcp-server": {
    "path": "browser-automation/web-browser-mcp-server.json",
    "category": "browser-automation"
  },
  "blowback-context": {
    "path": "browser-automation/blowback-context.json",
    "category": "browser-automation"
  },
  "mcp-wechat-moments": {
    "path": "browser-automation/mcp-wechat-moments.json",
    "category": "browser-automation"
  },
  "@browsercatco/mcp-server": {
    "path": "browser-automation/browsercatco-mcp-server.json",
    "category": "browser-automation"
  },
  "@kazuph/mcp-fetch": {
    "path": "browser-automation/kazuph-mcp-fetch.json",
    "category": "browser-automation"
  },
  "simple-website-fetcher": {
    "path": "browser-automation/simple-website-fetcher.json",
    "category": "browser-automation"
  },
  "browser-use": {
    "path": "browser-automation/browser-use.json",
    "category": "browser-automation"
  },
  "@angiejones/mcp-selenium": {
    "path": "browser-automation/angiejones-mcp-selenium.json",
    "category": "browser-automation"
  },
  "Hyperbrowser": {
    "path": "browser-automation/hyperbrowser-mcp.json",
    "category": "browser-automation"
  },
  "Exa AI Search": {
    "path": "browser-automation/exa-mcp-server.json",
    "category": "browser-automation"
  },
  "computer-control-mcp": {
    "path": "browser-automation/computer-control-mcp.json",
    "category": "browser-automation"
  },
  "@cmann50/mcp-chrome-google-search": {
    "path": "browser-automation/cmann50-mcp-chrome-google-search.json",
    "category": "browser-automation"
  },
  "fetcher-mcp": {
    "path": "browser-automation/fetcher-mcp.json",
    "category": "browser-automation"
  },
  "browser-use-mcp-server": {
    "path": "browser-automation/browser-use-mcp-server.json",
    "category": "browser-automation"
  },
  "@kazuph/mcp-browser-tabs": {
    "path": "browser-automation/kazuph-mcp-browser-tabs.json",
    "category": "browser-automation"
  },
  "jina.ai-reader": {
    "path": "browser-automation/jina-ai-reader.json",
    "category": "browser-automation"
  },
  "playwright": {
    "path": "browser-automation/playwright.json",
    "category": "browser-automation"
  },
  "mcp-playwright-scraper": {
    "path": "browser-automation/mcp-playwright-scraper.json",
    "category": "browser-automation"
  },
  "@agentdeskai/browser-tools-mcp": {
    "path": "browser-automation/agentdeskai-browser-tools-mcp.json",
    "category": "browser-automation"
  },
  "browser-automation": {
    "path": "browser-automation/browser-automation.json",
    "category": "browser-automation"
  },
  "mcp-pyautogui-server": {
    "path": "browser-automation/mcp-pyautogui-server.json",
    "category": "browser-automation"
  },
  "android-automation": {
    "path": "browser-automation/android-automation.json",
    "category": "browser-automation"
  },
  "simple-tool-(website-fetcher)": {
    "path": "browser-automation/simple-tool--website-fetcher.json",
    "category": "browser-automation"
  },
  "@browserstack/mcp-server": {
    "path": "browser-automation/browserstack-mcp-server.json",
    "category": "browser-automation"
  },
  "screenshot": {
    "path": "browser-automation/screenshot.json",
    "category": "browser-automation"
  },
  "url2snap-(website-screenshot)": {
    "path": "browser-automation/url2snap--website-screenshot.json",
    "category": "browser-automation"
  },
  "fetch-mcp": {
    "path": "browser-automation/fetch-mcp.json",
    "category": "browser-automation"
  },
  "x-(twitter)": {
    "path": "browser-automation/x--twitter.json",
    "category": "browser-automation"
  },
  "undetected-chromedriver": {
    "path": "browser-automation/undetected-chromedriver.json",
    "category": "browser-automation"
  },
  "abaqus/cae-gui-automation": {
    "path": "browser-automation/abaqus-cae-gui-automation.json",
    "category": "browser-automation"
  },
  "hyper-mcp-browser": {
    "path": "browser-automation/hyper-mcp-browser.json",
    "category": "browser-automation"
  },
  "scrapling-fetch-mcp": {
    "path": "browser-automation/scrapling-fetch-mcp.json",
    "category": "browser-automation"
  },
  "puppeteer-vision-mcp-server": {
    "path": "browser-automation/puppeteer-vision-mcp-server.json",
    "category": "browser-automation"
  },
  "pyppeteer-browser-automation": {
    "path": "browser-automation/pyppeteer-browser-automation.json",
    "category": "browser-automation"
  },
  "mcp_server_browser_use": {
    "path": "browser-automation/mcp_server_browser_use.json",
    "category": "browser-automation"
  },
  "groundng-(qa-for-cursor)": {
    "path": "browser-automation/groundng--qa-for-cursor.json",
    "category": "browser-automation"
  },
  "aws-cli": {
    "path": "cloud-platforms/aws-cli.json",
    "category": "cloud-platforms"
  },
  "google-cloud-mcp": {
    "path": "cloud-platforms/google-cloud-mcp.json",
    "category": "cloud-platforms"
  },
  "yourware-mcp": {
    "path": "cloud-platforms/yourware-mcp.json",
    "category": "cloud-platforms"
  },
  "cloud-foundry": {
    "path": "cloud-platforms/cloud-foundry.json",
    "category": "cloud-platforms"
  },
  "proxmox": {
    "path": "cloud-platforms/proxmox.json",
    "category": "cloud-platforms"
  },
  "azure-cli": {
    "path": "cloud-platforms/azure-cli.json",
    "category": "cloud-platforms"
  },
  "kubesphere": {
    "path": "cloud-platforms/kubesphere.json",
    "category": "cloud-platforms"
  },
  "aiven": {
    "path": "cloud-platforms/aiven.json",
    "category": "cloud-platforms"
  },
  "alibabacloud-fc-mcp-server": {
    "path": "cloud-platforms/alibabacloud-fc-mcp-server.json",
    "category": "cloud-platforms"
  },
  "mcp-clever-demo": {
    "path": "cloud-platforms/mcp-clever-demo.json",
    "category": "cloud-platforms"
  },
  "aws-resources": {
    "path": "cloud-platforms/aws-resources.json",
    "category": "cloud-platforms"
  },
  "qiniu-cloud-storage": {
    "path": "cloud-platforms/qiniu-cloud-storage.json",
    "category": "cloud-platforms"
  },
  "aws-cost-explorer-and-bedrock-usage-analytics": {
    "path": "cloud-platforms/aws-cost-explorer-and-bedrock-usage-analytics.json",
    "category": "cloud-platforms"
  },
  "box-mcp-server": {
    "path": "cloud-platforms/box-mcp-server.json",
    "category": "cloud-platforms"
  },
  "nvidia-brev": {
    "path": "cloud-platforms/nvidia-brev.json",
    "category": "cloud-platforms"
  },
  "azure-impact-reporter": {
    "path": "cloud-platforms/azure-impact-reporter.json",
    "category": "cloud-platforms"
  },
  "argocd-mcp": {
    "path": "cloud-platforms/argocd-mcp.json",
    "category": "cloud-platforms"
  },
  "@osaas/mcp-server": {
    "path": "cloud-platforms/osaas-mcp-server.json",
    "category": "cloud-platforms"
  },
  "kubernetes": {
    "path": "cloud-platforms/kubernetes.json",
    "category": "cloud-platforms"
  },
  "vmware-esxi": {
    "path": "cloud-platforms/vmware-esxi.json",
    "category": "cloud-platforms"
  },
  "akave-mcp-js": {
    "path": "cloud-platforms/akave-mcp-js.json",
    "category": "cloud-platforms"
  },
  "pure-storage-flashblade": {
    "path": "cloud-platforms/pure-storage-flashblade.json",
    "category": "cloud-platforms"
  },
  "spring-application-advisor": {
    "path": "cloud-platforms/spring-application-advisor.json",
    "category": "cloud-platforms"
  },
  "hetzner-cloud": {
    "path": "cloud-platforms/hetzner-cloud.json",
    "category": "cloud-platforms"
  },
  "linode-mcp": {
    "path": "cloud-platforms/linode-mcp.json",
    "category": "cloud-platforms"
  },
  "modal-(serverless-python)": {
    "path": "cloud-platforms/modal--serverless-python.json",
    "category": "cloud-platforms"
  },
  "workers-mcp": {
    "path": "cloud-platforms/workers-mcp.json",
    "category": "cloud-platforms"
  },
  "openstack-commander": {
    "path": "cloud-platforms/openstack-commander.json",
    "category": "cloud-platforms"
  },
  "kubernetes-pilot": {
    "path": "cloud-platforms/kubernetes-pilot.json",
    "category": "cloud-platforms"
  },
  "@boomlinkai/image-worker-mcp": {
    "path": "cloud-platforms/boomlinkai-image-worker-mcp.json",
    "category": "cloud-platforms"
  },
  "wildfly": {
    "path": "cloud-platforms/wildfly.json",
    "category": "cloud-platforms"
  },
  "gcp-mcp-server": {
    "path": "cloud-platforms/gcp-mcp-server.json",
    "category": "cloud-platforms"
  },
  "alibaba-cloud-dms": {
    "path": "cloud-platforms/alibaba-cloud-dms.json",
    "category": "cloud-platforms"
  },
  "pulumi-cloud-development": {
    "path": "cloud-platforms/pulumi-cloud-development.json",
    "category": "cloud-platforms"
  },
  "cisco-apic": {
    "path": "cloud-platforms/cisco-apic.json",
    "category": "cloud-platforms"
  },
  "gcp-mcp": {
    "path": "cloud-platforms/gcp-mcp.json",
    "category": "cloud-platforms"
  },
  "@digitalocean/mcp": {
    "path": "cloud-platforms/digitalocean-mcp.json",
    "category": "cloud-platforms"
  },
  "digitalocean": {
    "path": "cloud-platforms/digitalocean.json",
    "category": "cloud-platforms"
  },
  "nautobot-mcp": {
    "path": "cloud-platforms/nautobot-mcp.json",
    "category": "cloud-platforms"
  },
  "@gannonh/firebase-mcp": {
    "path": "cloud-platforms/gannonh-firebase-mcp.json",
    "category": "cloud-platforms"
  },
  "amazon-s3": {
    "path": "cloud-platforms/amazon-s3.json",
    "category": "cloud-platforms"
  },
  "alibabacloud-mcp-server": {
    "path": "cloud-platforms/alibabacloud-mcp-server.json",
    "category": "cloud-platforms"
  },
  "cloudzero": {
    "path": "cloud-platforms/cloudzero.json",
    "category": "cloud-platforms"
  },
  "aws-lambda": {
    "path": "cloud-platforms/aws-lambda.json",
    "category": "cloud-platforms"
  },
  "kubeblocks-cloud": {
    "path": "cloud-platforms/kubeblocks-cloud.json",
    "category": "cloud-platforms"
  },
  "awslabs.cdk-mcp-server": {
    "path": "cloud-platforms/awslabs-cdk-mcp-server.json",
    "category": "cloud-platforms"
  },
  "azure-pricing": {
    "path": "cloud-platforms/azure-pricing.json",
    "category": "cloud-platforms"
  },
  "aws-bedrock": {
    "path": "cloud-platforms/aws-bedrock.json",
    "category": "cloud-platforms"
  },
  "@gutmutcode/mcp-server-cloudflare": {
    "path": "cloud-platforms/gutmutcode-mcp-server-cloudflare.json",
    "category": "cloud-platforms"
  },
  "@felixallistar/coolify-mcp": {
    "path": "cloud-platforms/felixallistar-coolify-mcp.json",
    "category": "cloud-platforms"
  },
  "nomad": {
    "path": "cloud-platforms/nomad.json",
    "category": "cloud-platforms"
  },
  "container-sandbox": {
    "path": "code-execution/container-sandbox.json",
    "category": "code-execution"
  },
  "python-local": {
    "path": "code-execution/python-local.json",
    "category": "code-execution"
  },
  "basilisp-nrepl": {
    "path": "code-execution/basilisp-nrepl.json",
    "category": "code-execution"
  },
  "sympy-calculator": {
    "path": "code-execution/sympy-calculator.json",
    "category": "code-execution"
  },
  "nrepl-mcp-server": {
    "path": "code-execution/nrepl-mcp-server.json",
    "category": "code-execution"
  },
  "@kunihiros/claude-code-mcp": {
    "path": "code-execution/kunihiros-claude-code-mcp.json",
    "category": "code-execution"
  },
  "isolator": {
    "path": "code-execution/isolator.json",
    "category": "code-execution"
  },
  "jupyter_mcp_server": {
    "path": "code-execution/jupyter_mcp_server.json",
    "category": "code-execution"
  },
  "gru-sandbox": {
    "path": "code-execution/gru-sandbox.json",
    "category": "code-execution"
  },
  "forevervm-mcp": {
    "path": "code-execution/forevervm-mcp.json",
    "category": "code-execution"
  },
  "code-analysis": {
    "path": "code-execution/code-analysis.json",
    "category": "code-execution"
  },
  "jupyter-notebook-bridge": {
    "path": "code-execution/jupyter-notebook-bridge.json",
    "category": "code-execution"
  },
  "mcp-server-code-runner": {
    "path": "code-execution/mcp-server-code-runner.json",
    "category": "code-execution"
  },
  "js-sandbox-mcp-server": {
    "path": "code-execution/js-sandbox-mcp-server.json",
    "category": "code-execution"
  },
  "python-sandbox": {
    "path": "code-execution/python-sandbox.json",
    "category": "code-execution"
  },
  "code-sandbox": {
    "path": "code-execution/code-sandbox.json",
    "category": "code-execution"
  },
  "hide-(headless-ide)": {
    "path": "coding-agents/hide--headless-ide.json",
    "category": "coding-agents"
  },
  "deepview-mcp": {
    "path": "coding-agents/deepview-mcp.json",
    "category": "coding-agents"
  },
  "aibolit-mcp-server": {
    "path": "coding-agents/aibolit-mcp-server.json",
    "category": "coding-agents"
  },
  "langgraph-coding-team": {
    "path": "coding-agents/langgraph-coding-team.json",
    "category": "coding-agents"
  },
  "codechecker": {
    "path": "coding-agents/codechecker.json",
    "category": "coding-agents"
  },
  "@jinzcdev/leetcode-mcp-server": {
    "path": "coding-agents/jinzcdev-leetcode-mcp-server.json",
    "category": "coding-agents"
  },
  "compiler-explorer-mcp": {
    "path": "coding-agents/compiler-explorer-mcp.json",
    "category": "coding-agents"
  },
  "aider-multi-coder": {
    "path": "coding-agents/aider-multi-coder.json",
    "category": "coding-agents"
  },
  "strands-agents": {
    "path": "coding-agents/strands-agents.json",
    "category": "coding-agents"
  },
  "code-indexer": {
    "path": "coding-agents/code-indexer.json",
    "category": "coding-agents"
  },
  "codealive": {
    "path": "coding-agents/codealive.json",
    "category": "coding-agents"
  },
  "mcp-server-code-assist": {
    "path": "coding-agents/mcp-server-code-assist.json",
    "category": "coding-agents"
  },
  "aider": {
    "path": "coding-agents/aider.json",
    "category": "coding-agents"
  },
  "mcp-coco": {
    "path": "coding-agents/mcp-coco.json",
    "category": "coding-agents"
  },
  "gopls": {
    "path": "coding-agents/gopls.json",
    "category": "coding-agents"
  },
  "coding-todo": {
    "path": "coding-agents/coding-todo.json",
    "category": "coding-agents"
  },
  "python-code-explorer": {
    "path": "coding-agents/python-code-explorer.json",
    "category": "coding-agents"
  },
  "autogen": {
    "path": "coding-agents/autogen.json",
    "category": "coding-agents"
  },
  "mcp-perplexity": {
    "path": "coding-agents/mcp-perplexity.json",
    "category": "coding-agents"
  },
  "mcp-command-proxy": {
    "path": "command-line/mcp-command-proxy.json",
    "category": "command-line"
  },
  "vscode-mcp-server": {
    "path": "command-line/vscode-mcp-server.json",
    "category": "command-line"
  },
  "@kevinwatt/shell-mcp": {
    "path": "command-line/kevinwatt-shell-mcp.json",
    "category": "command-line"
  },
  "apple-macos-native-applications": {
    "path": "command-line/apple-macos-native-applications.json",
    "category": "command-line"
  },
  "@dhravya/apple-mcp": {
    "path": "command-line/dhravya-apple-mcp.json",
    "category": "command-line"
  },
  "scrapli-network-automation": {
    "path": "command-line/scrapli-network-automation.json",
    "category": "command-line"
  },
  "mcp-server-macos-defaults": {
    "path": "command-line/mcp-server-macos-defaults.json",
    "category": "command-line"
  },
  "tmux": {
    "path": "command-line/tmux.json",
    "category": "command-line"
  },
  "command-line": {
    "path": "command-line/command-line.json",
    "category": "command-line"
  },
  "llmbasedos": {
    "path": "command-line/llmbasedos.json",
    "category": "command-line"
  },
  "@devyhan/xcode-mcp": {
    "path": "command-line/devyhan-xcode-mcp.json",
    "category": "command-line"
  },
  "terminal-session": {
    "path": "command-line/terminal-session.json",
    "category": "command-line"
  },
  "cli-executor": {
    "path": "command-line/cli-executor.json",
    "category": "command-line"
  },
  "command-executor": {
    "path": "command-line/command-executor.json",
    "category": "command-line"
  },
  "macos-notification-mcp": {
    "path": "command-line/macos-notification-mcp.json",
    "category": "command-line"
  },
  "jarvis": {
    "path": "command-line/jarvis.json",
    "category": "command-line"
  },
  "mcp-apple-calendars": {
    "path": "command-line/mcp-apple-calendars.json",
    "category": "command-line"
  },
  "lilith-shell": {
    "path": "command-line/lilith-shell.json",
    "category": "command-line"
  },
  "iterm-mcp": {
    "path": "command-line/iterm-mcp.json",
    "category": "command-line"
  },
  "magick-mcp": {
    "path": "command-line/magick-mcp.json",
    "category": "command-line"
  },
  "secure-shell-executor": {
    "path": "command-line/secure-shell-executor.json",
    "category": "command-line"
  },
  "mcp-cli-exec": {
    "path": "command-line/mcp-cli-exec.json",
    "category": "command-line"
  },
  "shell-mcp-server": {
    "path": "command-line/shell-mcp-server.json",
    "category": "command-line"
  },
  "vnc-remote-control-for-macos": {
    "path": "command-line/vnc-remote-control-for-macos.json",
    "category": "command-line"
  },
  "cua-mcp-server": {
    "path": "command-line/cua-mcp-server.json",
    "category": "command-line"
  },
  "macos-gui-control": {
    "path": "command-line/macos-gui-control.json",
    "category": "command-line"
  },
  "shell-command-mcp": {
    "path": "command-line/shell-command-mcp.json",
    "category": "command-line"
  },
  "phone-mcp": {
    "path": "command-line/phone-mcp.json",
    "category": "command-line"
  },
  "@joshuarileydev/mac-apps-launcher-mcp-server": {
    "path": "command-line/joshuarileydev-mac-apps-launcher-mcp-server.json",
    "category": "command-line"
  },
  "mcpshell": {
    "path": "command-line/mcpshell.json",
    "category": "command-line"
  },
  "mcp-kubernetes-server": {
    "path": "command-line/mcp-kubernetes-server.json",
    "category": "command-line"
  },
  "mcp-server-siri-shortcuts": {
    "path": "command-line/mcp-server-siri-shortcuts.json",
    "category": "command-line"
  },
  "powershell-exec": {
    "path": "command-line/powershell-exec.json",
    "category": "command-line"
  },
  "@landicefu/android-adb-mcp-server": {
    "path": "command-line/landicefu-android-adb-mcp-server.json",
    "category": "command-line"
  },
  "claude-c2": {
    "path": "command-line/claude-c2.json",
    "category": "command-line"
  },
  "os-info-mcp-server": {
    "path": "command-line/os-info-mcp-server.json",
    "category": "command-line"
  },
  "systemctl": {
    "path": "command-line/systemctl.json",
    "category": "command-line"
  },
  "mcp-host-cli": {
    "path": "command-line/mcp-host-cli.json",
    "category": "command-line"
  },
  "terminal-controller": {
    "path": "command-line/terminal-controller.json",
    "category": "command-line"
  },
  "windows-desktop-control": {
    "path": "command-line/windows-desktop-control.json",
    "category": "command-line"
  },
  "homebrew": {
    "path": "command-line/homebrew.json",
    "category": "command-line"
  },
  "ssh-tools": {
    "path": "command-line/ssh-tools.json",
    "category": "command-line"
  },
  "mcp-email-server": {
    "path": "communication/mcp-email-server.json",
    "category": "communication"
  },
  "mcp-telegram": {
    "path": "communication/mcp-telegram.json",
    "category": "communication"
  },
  "mcp-google-calendar": {
    "path": "communication/mcp-google-calendar.json",
    "category": "communication"
  },
  "@floriscornel/teams-mcp": {
    "path": "communication/floriscornel-teams-mcp.json",
    "category": "communication"
  },
  "microsoft-teams-notifications": {
    "path": "communication/microsoft-teams-notifications.json",
    "category": "communication"
  },
  "google-calendar": {
    "path": "communication/google-calendar.json",
    "category": "communication"
  },
  "mcp-fleur": {
    "path": "communication/mcp-fleur.json",
    "category": "communication"
  },
  "discord-(full-api)": {
    "path": "communication/discord--full-api.json",
    "category": "communication"
  },
  "@horizondatawave/mcp": {
    "path": "communication/horizondatawave-mcp.json",
    "category": "communication"
  },
  "kakao-talk": {
    "path": "communication/kakao-talk.json",
    "category": "communication"
  },
  "nostr-mcp": {
    "path": "communication/nostr-mcp.json",
    "category": "communication"
  },
  "mcp-server-email": {
    "path": "communication/mcp-server-email.json",
    "category": "communication"
  },
  "geekbot": {
    "path": "communication/geekbot.json",
    "category": "communication"
  },
  "discord": {
    "path": "communication/discord.json",
    "category": "communication"
  },
  "@abhiz123/todoist-mcp-server": {
    "path": "communication/abhiz123-todoist-mcp-server.json",
    "category": "communication"
  },
  "outlook-meetings-scheduler": {
    "path": "communication/outlook-meetings-scheduler.json",
    "category": "communication"
  },
  "imessage-query": {
    "path": "communication/imessage-query.json",
    "category": "communication"
  },
  "unipile": {
    "path": "communication/unipile.json",
    "category": "communication"
  },
  "mcp_twitter": {
    "path": "communication/mcp_twitter.json",
    "category": "communication"
  },
  "feishu-project-mcp": {
    "path": "communication/feishu-project-mcp.json",
    "category": "communication"
  },
  "slack-conversations": {
    "path": "communication/slack-conversations.json",
    "category": "communication"
  },
  "ntfy-me-mcp": {
    "path": "communication/ntfy-me-mcp.json",
    "category": "communication"
  },
  "Twitter": {
    "path": "communication/enescinar-twitter-mcp.json",
    "category": "communication"
  },
  "gmail": {
    "path": "communication/gmail.json",
    "category": "communication"
  },
  "@larksuiteoapi/lark-mcp": {
    "path": "communication/larksuiteoapi-lark-mcp.json",
    "category": "communication"
  },
  "@abhaybabbar/retellai-mcp-server": {
    "path": "communication/abhaybabbar-retellai-mcp-server.json",
    "category": "communication"
  },
  "wecom": {
    "path": "communication/wecom.json",
    "category": "communication"
  },
  "telegram": {
    "path": "communication/telegram.json",
    "category": "communication"
  },
  "resend-mcp": {
    "path": "communication/resend-mcp.json",
    "category": "communication"
  },
  "gensokyo": {
    "path": "communication/gensokyo.json",
    "category": "communication"
  },
  "@chaindead/telegram-mcp": {
    "path": "communication/chaindead-telegram-mcp.json",
    "category": "communication"
  },
  "twilio-manager": {
    "path": "communication/twilio-manager.json",
    "category": "communication"
  },
  "wecom-bot-mcp-server": {
    "path": "communication/wecom-bot-mcp-server.json",
    "category": "communication"
  },
  "outlook-email-processor": {
    "path": "communication/outlook-email-processor.json",
    "category": "communication"
  },
  "Slack": {
    "path": "communication/modelcontextprotocol-server-slack.json",
    "category": "communication"
  },
  "server-notify": {
    "path": "communication/server-notify.json",
    "category": "communication"
  },
  "feishu-mcp": {
    "path": "communication/feishu-mcp.json",
    "category": "communication"
  },
  "twilio-sms": {
    "path": "communication/twilio-sms.json",
    "category": "communication"
  },
  "mac-messages-mcp": {
    "path": "communication/mac-messages-mcp.json",
    "category": "communication"
  },
  "instagram-dm-mcp": {
    "path": "communication/instagram-dm-mcp.json",
    "category": "communication"
  },
  "mcp-server-google-calendar": {
    "path": "communication/mcp-server-google-calendar.json",
    "category": "communication"
  },
  "mcp-simple-openai-assistant": {
    "path": "communication/mcp-simple-openai-assistant.json",
    "category": "communication"
  },
  "whatsapp-bridge": {
    "path": "communication/whatsapp-bridge.json",
    "category": "communication"
  },
  "@kazuph/mcp-gmail-gas": {
    "path": "communication/kazuph-mcp-gmail-gas.json",
    "category": "communication"
  },
  "@cablate/mcp-google-calendar": {
    "path": "communication/cablate-mcp-google-calendar.json",
    "category": "communication"
  },
  "pushover-mcp": {
    "path": "communication/pushover-mcp.json",
    "category": "communication"
  },
  "dingding-(dingtalk)": {
    "path": "communication/dingding--dingtalk.json",
    "category": "communication"
  },
  "google-chat": {
    "path": "communication/google-chat.json",
    "category": "communication"
  },
  "voyp-mcp": {
    "path": "communication/voyp-mcp.json",
    "category": "communication"
  },
  "microsoft-teams": {
    "path": "communication/microsoft-teams.json",
    "category": "communication"
  },
  "systemprompt-mcp-gmail": {
    "path": "communication/systemprompt-mcp-gmail.json",
    "category": "communication"
  },
  "headless-gmail": {
    "path": "communication/headless-gmail.json",
    "category": "communication"
  },
  "hubspot": {
    "path": "customer-data-platforms/hubspot.json",
    "category": "customer-data-platforms"
  },
  "@hubspot/mcp-server": {
    "path": "customer-data-platforms/hubspot-mcp-server.json",
    "category": "customer-data-platforms"
  },
  "@clayhq/clay-mcp": {
    "path": "customer-data-platforms/clayhq-clay-mcp.json",
    "category": "customer-data-platforms"
  },
  "attio-mcp-server": {
    "path": "customer-data-platforms/attio-mcp-server.json",
    "category": "customer-data-platforms"
  },
  "mcp-timeplus": {
    "path": "databases/mcp-timeplus.json",
    "category": "databases"
  },
  "alibaba-cloud-rds": {
    "path": "databases/alibaba-cloud-rds.json",
    "category": "databases"
  },
  "sql-server": {
    "path": "databases/sql-server.json",
    "category": "databases"
  },
  "apache-iotdb": {
    "path": "databases/apache-iotdb.json",
    "category": "databases"
  },
  "sqlite-explorer": {
    "path": "databases/sqlite-explorer.json",
    "category": "databases"
  },
  "elasticsearch": {
    "path": "databases/elasticsearch.json",
    "category": "databases"
  },
  "@kevinwatt/mysql-mcp": {
    "path": "databases/kevinwatt-mysql-mcp.json",
    "category": "databases"
  },
  "zaturn": {
    "path": "databases/zaturn.json",
    "category": "databases"
  },
  "@gongrzhe/server-redis-mcp": {
    "path": "databases/gongrzhe-server-redis-mcp.json",
    "category": "databases"
  },
  "apache-doris": {
    "path": "databases/apache-doris.json",
    "category": "databases"
  },
  "appwrite": {
    "path": "databases/appwrite.json",
    "category": "databases"
  },
  "toolfront": {
    "path": "databases/toolfront.json",
    "category": "databases"
  },
  "mcp-server-sqlite-npx": {
    "path": "databases/mcp-server-sqlite-npx.json",
    "category": "databases"
  },
  "mochow-mcp-server": {
    "path": "databases/mochow-mcp-server.json",
    "category": "databases"
  },
  "alibaba-cloud-lindorm": {
    "path": "databases/alibaba-cloud-lindorm.json",
    "category": "databases"
  },
  "polardb": {
    "path": "databases/polardb.json",
    "category": "databases"
  },
  "mssql_mcp_server": {
    "path": "databases/mssql_mcp_server.json",
    "category": "databases"
  },
  "mcp-trino-python": {
    "path": "databases/mcp-trino-python.json",
    "category": "databases"
  },
  "@davewind/mysql-mcp-server": {
    "path": "databases/davewind-mysql-mcp-server.json",
    "category": "databases"
  },
  "toolbox-for-databases": {
    "path": "databases/toolbox-for-databases.json",
    "category": "databases"
  },
  "clickhouse-mcp-server": {
    "path": "databases/clickhouse-mcp-server.json",
    "category": "databases"
  },
  "@awesome-ai/elasticsearch-mcp": {
    "path": "databases/awesome-ai-elasticsearch-mcp.json",
    "category": "databases"
  },
  "@ergut/mcp-bigquery-server": {
    "path": "databases/ergut-mcp-bigquery-server.json",
    "category": "databases"
  },
  "mssql-mcp-server": {
    "path": "databases/mssql-mcp-server.json",
    "category": "databases"
  },
  "database-connector": {
    "path": "databases/database-connector.json",
    "category": "databases"
  },
  "mysql": {
    "path": "databases/mysql.json",
    "category": "databases"
  },
  "clickhouse": {
    "path": "databases/clickhouse.json",
    "category": "databases"
  },
  "hologres-mcp-server": {
    "path": "databases/hologres-mcp-server.json",
    "category": "databases"
  },
  "@bytebase/dbhub": {
    "path": "databases/bytebase-dbhub.json",
    "category": "databases"
  },
  "@f4ww4z/mcp-mysql-server": {
    "path": "databases/f4ww4z-mcp-mysql-server.json",
    "category": "databases"
  },
  "db-connector-(mysql/postgresql)": {
    "path": "databases/db-connector--mysql-postgresql.json",
    "category": "databases"
  },
  "mcp-server-postgres-multi-schema": {
    "path": "databases/mcp-server-postgres-multi-schema.json",
    "category": "databases"
  },
  "mcp-server-starrocks": {
    "path": "databases/mcp-server-starrocks.json",
    "category": "databases"
  },
  "postgresql-explorer": {
    "path": "databases/postgresql-explorer.json",
    "category": "databases"
  },
  "microsoft-sql-server-(mssql)": {
    "path": "databases/microsoft-sql-server--mssql.json",
    "category": "databases"
  },
  "cursor-db-explorer": {
    "path": "databases/cursor-db-explorer.json",
    "category": "databases"
  },
  "azure-cosmos-db": {
    "path": "databases/azure-cosmos-db.json",
    "category": "databases"
  },
  "mcp-dbs": {
    "path": "databases/mcp-dbs.json",
    "category": "databases"
  },
  "oracle-database": {
    "path": "databases/oracle-database.json",
    "category": "databases"
  },
  "@joshuarileydev/supabase-mcp-server": {
    "path": "databases/joshuarileydev-supabase-mcp-server.json",
    "category": "databases"
  },
  "kevodb": {
    "path": "databases/kevodb.json",
    "category": "databases"
  },
  "mcp-postgres-server": {
    "path": "databases/mcp-postgres-server.json",
    "category": "databases"
  },
  "opensearch": {
    "path": "databases/opensearch.json",
    "category": "databases"
  },
  "database-mcp": {
    "path": "databases/database-mcp.json",
    "category": "databases"
  },
  "mysql-query-mcp-server": {
    "path": "databases/mysql-query-mcp-server.json",
    "category": "databases"
  },
  "mysqldb-mcp-server": {
    "path": "databases/mysqldb-mcp-server.json",
    "category": "databases"
  },
  "greptimedb-mcp-server": {
    "path": "databases/greptimedb-mcp-server.json",
    "category": "databases"
  },
  "dummyjson-user-management": {
    "path": "databases/dummyjson-user-management.json",
    "category": "databases"
  },
  "@datastax/astra-db-mcp": {
    "path": "databases/datastax-astra-db-mcp.json",
    "category": "databases"
  },
  "@alanse/mcp-neo4j-server": {
    "path": "databases/alanse-mcp-neo4j-server.json",
    "category": "databases"
  },
  "dynamo-readonly-mcp": {
    "path": "databases/dynamo-readonly-mcp.json",
    "category": "databases"
  },
  "postgres": {
    "path": "databases/postgres.json",
    "category": "databases"
  },
  "mcp_snowflake_server": {
    "path": "databases/mcp_snowflake_server.json",
    "category": "databases"
  },
  "dgraph": {
    "path": "databases/dgraph.json",
    "category": "databases"
  },
  "supabase-mcp": {
    "path": "databases/supabase-mcp.json",
    "category": "databases"
  },
  "@identimoji/mcp-server-emojikey": {
    "path": "databases/identimoji-mcp-server-emojikey.json",
    "category": "databases"
  },
  "clickhouse-database": {
    "path": "databases/clickhouse-database.json",
    "category": "databases"
  },
  "mcp-dbutils": {
    "path": "databases/mcp-dbutils.json",
    "category": "databases"
  },
  "influxdb-mcp-server": {
    "path": "databases/influxdb-mcp-server.json",
    "category": "databases"
  },
  "sqlite": {
    "path": "databases/sqlite.json",
    "category": "databases"
  },
  "db-query": {
    "path": "databases/db-query.json",
    "category": "databases"
  },
  "supabase": {
    "path": "databases/supabase.json",
    "category": "databases"
  },
  "snowflake": {
    "path": "databases/snowflake.json",
    "category": "databases"
  },
  "mysql-mcp-server": {
    "path": "databases/mysql-mcp-server.json",
    "category": "databases"
  },
  "polardbx-mcp": {
    "path": "databases/polardbx-mcp.json",
    "category": "databases"
  },
  "adb-mysql-mcp-server": {
    "path": "databases/adb-mysql-mcp-server.json",
    "category": "databases"
  },
  "mcp-server-iris": {
    "path": "databases/mcp-server-iris.json",
    "category": "databases"
  },
  "epsilla": {
    "path": "databases/epsilla.json",
    "category": "databases"
  },
  "postgres-mcp": {
    "path": "databases/postgres-mcp.json",
    "category": "databases"
  },
  "mysql-database-query": {
    "path": "databases/mysql-database-query.json",
    "category": "databases"
  },
  "redis-mcp": {
    "path": "databases/redis-mcp.json",
    "category": "databases"
  },
  "mcp-neo4j-cypher": {
    "path": "databases/mcp-neo4j-cypher.json",
    "category": "databases"
  },
  "sql-server-express": {
    "path": "databases/sql-server-express.json",
    "category": "databases"
  },
  "postgresql": {
    "path": "databases/postgresql.json",
    "category": "databases"
  },
  "mcp-server-mariadb": {
    "path": "databases/mcp-server-mariadb.json",
    "category": "databases"
  },
  "centralmind-(database-gateway)": {
    "path": "databases/centralmind--database-gateway.json",
    "category": "databases"
  },
  "@elastic/mcp-server-elasticsearch": {
    "path": "databases/elastic-mcp-server-elasticsearch.json",
    "category": "databases"
  },
  "graphql-explorer": {
    "path": "data-platforms/graphql-explorer.json",
    "category": "data-platforms"
  },
  "alibabacloud-dataworks-mcp-server": {
    "path": "data-platforms/alibabacloud-dataworks-mcp-server.json",
    "category": "data-platforms"
  },
  "datafocus": {
    "path": "data-platforms/datafocus.json",
    "category": "data-platforms"
  },
  "google-sheets": {
    "path": "data-platforms/google-sheets.json",
    "category": "data-platforms"
  },
  "prefect-mcp-server": {
    "path": "data-platforms/prefect-mcp-server.json",
    "category": "data-platforms"
  },
  "azure-data-explorer-(kusto)": {
    "path": "data-platforms/azure-data-explorer--kusto.json",
    "category": "data-platforms"
  },
  "cloudera-ai-agent-studio": {
    "path": "data-platforms/cloudera-ai-agent-studio.json",
    "category": "data-platforms"
  },
  "bloom-growth": {
    "path": "data-platforms/bloom-growth.json",
    "category": "data-platforms"
  },
  "datahub": {
    "path": "data-platforms/datahub.json",
    "category": "data-platforms"
  },
  "world-bank-data": {
    "path": "data-platforms/world-bank-data.json",
    "category": "data-platforms"
  },
  "earthdata_mcp_server": {
    "path": "data-platforms/earthdata_mcp_server.json",
    "category": "data-platforms"
  },
  "@fiveohhwon/workflows-mcp": {
    "path": "data-platforms/fiveohhwon-workflows-mcp.json",
    "category": "data-platforms"
  },
  "mcp_cube_server": {
    "path": "data-platforms/mcp_cube_server.json",
    "category": "data-platforms"
  },
  "@lark-base-open/mcp-node-server": {
    "path": "data-platforms/lark-base-open-mcp-node-server.json",
    "category": "data-platforms"
  },
  "choose-(google-bigquery)": {
    "path": "data-platforms/choose--google-bigquery.json",
    "category": "data-platforms"
  },
  "@lishenxydlgzs/aws-athena-mcp": {
    "path": "data-platforms/lishenxydlgzs-aws-athena-mcp.json",
    "category": "data-platforms"
  },
  "elasticsearch-7.x": {
    "path": "data-platforms/elasticsearch-7-x.json",
    "category": "data-platforms"
  },
  "mcp-server-vikingdb": {
    "path": "data-platforms/mcp-server-vikingdb.json",
    "category": "data-platforms"
  },
  "agentmode": {
    "path": "data-platforms/agentmode.json",
    "category": "data-platforms"
  },
  "nostrdb-mcp": {
    "path": "data-platforms/nostrdb-mcp.json",
    "category": "data-platforms"
  },
  "atlan-data-catalog": {
    "path": "data-platforms/atlan-data-catalog.json",
    "category": "data-platforms"
  },
  "microsoft-fabric": {
    "path": "data-platforms/microsoft-fabric.json",
    "category": "data-platforms"
  },
  "data.gov.my": {
    "path": "data-platforms/data-gov-my.json",
    "category": "data-platforms"
  },
  "the-graph": {
    "path": "data-platforms/the-graph.json",
    "category": "data-platforms"
  },
  "explorium-mcp-server": {
    "path": "data-platforms/explorium-mcp-server.json",
    "category": "data-platforms"
  },
  "databutton-app-mcp": {
    "path": "data-platforms/databutton-app-mcp.json",
    "category": "data-platforms"
  },
  "google-spreadsheet": {
    "path": "data-platforms/google-spreadsheet.json",
    "category": "data-platforms"
  },
  "airflow-mcp-server": {
    "path": "data-platforms/airflow-mcp-server.json",
    "category": "data-platforms"
  },
  "databricks-mcp-server": {
    "path": "data-platforms/databricks-mcp-server.json",
    "category": "data-platforms"
  },
  "keboola-explorer": {
    "path": "data-platforms/keboola-explorer.json",
    "category": "data-platforms"
  },
  "@confluentinc/mcp-confluent": {
    "path": "data-platforms/confluentinc-mcp-confluent.json",
    "category": "data-platforms"
  },
  "dbt-mcp": {
    "path": "data-platforms/dbt-mcp.json",
    "category": "data-platforms"
  },
  "dune-analytics": {
    "path": "data-platforms/dune-analytics.json",
    "category": "data-platforms"
  },
  "apache-gravitino": {
    "path": "data-platforms/apache-gravitino.json",
    "category": "data-platforms"
  },
  "azure-data-explorer": {
    "path": "data-platforms/azure-data-explorer.json",
    "category": "data-platforms"
  },
  "@flatfile/mcp-server": {
    "path": "data-platforms/flatfile-mcp-server.json",
    "category": "data-platforms"
  },
  "apache-iceberg": {
    "path": "data-platforms/apache-iceberg.json",
    "category": "data-platforms"
  },
  "databricks": {
    "path": "data-platforms/databricks.json",
    "category": "data-platforms"
  },
  "xcodebuildmcp": {
    "path": "developer-tools/xcodebuildmcp.json",
    "category": "developer-tools"
  },
  "terraform-registry": {
    "path": "developer-tools/terraform-registry.json",
    "category": "developer-tools"
  },
  "kubernetes-natural-language-commander": {
    "path": "developer-tools/kubernetes-natural-language-commander.json",
    "category": "developer-tools"
  },
  "bazel": {
    "path": "developer-tools/bazel.json",
    "category": "developer-tools"
  },
  "mcpdoc": {
    "path": "developer-tools/mcpdoc.json",
    "category": "developer-tools"
  },
  "hostbridge": {
    "path": "developer-tools/hostbridge.json",
    "category": "developer-tools"
  },
  "aerith-admin-(rbac-dashboard)": {
    "path": "developer-tools/aerith-admin--rbac-dashboard.json",
    "category": "developer-tools"
  },
  "@grounddocs/grounddocs": {
    "path": "developer-tools/grounddocs-grounddocs.json",
    "category": "developer-tools"
  },
  "ansible-tower": {
    "path": "developer-tools/ansible-tower.json",
    "category": "developer-tools"
  },
  "@agentdesk/workflows-mcp": {
    "path": "developer-tools/agentdesk-workflows-mcp.json",
    "category": "developer-tools"
  },
  "@buouui/supaui-mcp": {
    "path": "developer-tools/buouui-supaui-mcp.json",
    "category": "developer-tools"
  },
  "kubernetes-listpods": {
    "path": "developer-tools/kubernetes-listpods.json",
    "category": "developer-tools"
  },
  "@ahdev/dokploy-mcp": {
    "path": "developer-tools/ahdev-dokploy-mcp.json",
    "category": "developer-tools"
  },
  "task-master-ai": {
    "path": "developer-tools/task-master-ai.json",
    "category": "developer-tools"
  },
  "easy-autocad": {
    "path": "developer-tools/easy-autocad.json",
    "category": "developer-tools"
  },
  "backstage": {
    "path": "developer-tools/backstage.json",
    "category": "developer-tools"
  },
  "@cdugo/docs-fetcher-mcp": {
    "path": "developer-tools/cdugo-docs-fetcher-mcp.json",
    "category": "developer-tools"
  },
  "multilspylsp": {
    "path": "developer-tools/multilspylsp.json",
    "category": "developer-tools"
  },
  "docker-compose": {
    "path": "developer-tools/docker-compose.json",
    "category": "developer-tools"
  },
  "mcp-neovim-server": {
    "path": "developer-tools/mcp-neovim-server.json",
    "category": "developer-tools"
  },
  "@container-inc/mcp": {
    "path": "developer-tools/container-inc-mcp.json",
    "category": "developer-tools"
  },
  "frida-mcp": {
    "path": "developer-tools/frida-mcp.json",
    "category": "developer-tools"
  },
  "ffmpeg-mcp": {
    "path": "developer-tools/ffmpeg-mcp.json",
    "category": "developer-tools"
  },
  "@f2c/mcp": {
    "path": "developer-tools/f2c-mcp.json",
    "category": "developer-tools"
  },
  "coding-standards": {
    "path": "developer-tools/coding-standards.json",
    "category": "developer-tools"
  },
  "@hyperdrive-eng/mcp-nodejs-debugger": {
    "path": "developer-tools/hyperdrive-eng-mcp-nodejs-debugger.json",
    "category": "developer-tools"
  },
  "hanzo-mcp": {
    "path": "developer-tools/hanzo-mcp.json",
    "category": "developer-tools"
  },
  "python-toolbox": {
    "path": "developer-tools/python-toolbox.json",
    "category": "developer-tools"
  },
  "language-server": {
    "path": "developer-tools/language-server.json",
    "category": "developer-tools"
  },
  "nextflow-developer-tools": {
    "path": "developer-tools/nextflow-developer-tools.json",
    "category": "developer-tools"
  },
  "log-analyzer-mcp": {
    "path": "developer-tools/log-analyzer-mcp.json",
    "category": "developer-tools"
  },
  "neurolorap-code-collector": {
    "path": "developer-tools/neurolorap-code-collector.json",
    "category": "developer-tools"
  },
  "powerpoint-manager": {
    "path": "developer-tools/powerpoint-manager.json",
    "category": "developer-tools"
  },
  "nuke": {
    "path": "developer-tools/nuke.json",
    "category": "developer-tools"
  },
  "development-automation-server": {
    "path": "developer-tools/development-automation-server.json",
    "category": "developer-tools"
  },
  "sf-mcp": {
    "path": "developer-tools/sf-mcp.json",
    "category": "developer-tools"
  },
  "bitrise": {
    "path": "developer-tools/bitrise.json",
    "category": "developer-tools"
  },
  "xcodemcp": {
    "path": "developer-tools/xcodemcp.json",
    "category": "developer-tools"
  },
  "@jetbrains/mcp-proxy": {
    "path": "developer-tools/jetbrains-mcp-proxy.json",
    "category": "developer-tools"
  },
  "azure-devops": {
    "path": "developer-tools/azure-devops.json",
    "category": "developer-tools"
  },
  "mathcad-prime": {
    "path": "developer-tools/mathcad-prime.json",
    "category": "developer-tools"
  },
  "mcp-proxy-sidecar": {
    "path": "developer-tools/mcp-proxy-sidecar.json",
    "category": "developer-tools"
  },
  "@currents/mcp": {
    "path": "developer-tools/currents-mcp.json",
    "category": "developer-tools"
  },
  "@kailashg101/mcp-figma-to-code": {
    "path": "developer-tools/kailashg101-mcp-figma-to-code.json",
    "category": "developer-tools"
  },
  "azure-devops-project-creator": {
    "path": "developer-tools/azure-devops-project-creator.json",
    "category": "developer-tools"
  },
  "development-tooling": {
    "path": "developer-tools/development-tooling.json",
    "category": "developer-tools"
  },
  "xcode-diagnostics": {
    "path": "developer-tools/xcode-diagnostics.json",
    "category": "developer-tools"
  },
  "protobuf-formatter": {
    "path": "developer-tools/protobuf-formatter.json",
    "category": "developer-tools"
  },
  "laravel-helper-tools": {
    "path": "developer-tools/laravel-helper-tools.json",
    "category": "developer-tools"
  },
  "qasphere-mcp": {
    "path": "developer-tools/qasphere-mcp.json",
    "category": "developer-tools"
  },
  "json-schema-manager": {
    "path": "developer-tools/json-schema-manager.json",
    "category": "developer-tools"
  },
  "@auto-browse/unbundle-openapi-mcp": {
    "path": "developer-tools/auto-browse-unbundle-openapi-mcp.json",
    "category": "developer-tools"
  },
  "databutton": {
    "path": "developer-tools/databutton.json",
    "category": "developer-tools"
  },
  "kai-(kubernetes)": {
    "path": "developer-tools/kai--kubernetes.json",
    "category": "developer-tools"
  },
  "paelladoc": {
    "path": "developer-tools/paelladoc.json",
    "category": "developer-tools"
  },
  "flux-schnell": {
    "path": "developer-tools/flux-schnell.json",
    "category": "developer-tools"
  },
  "n8n-workflow-summarizer": {
    "path": "developer-tools/n8n-workflow-summarizer.json",
    "category": "developer-tools"
  },
  "ida-pro": {
    "path": "developer-tools/ida-pro.json",
    "category": "developer-tools"
  },
  "repository-to-llm-context": {
    "path": "developer-tools/repository-to-llm-context.json",
    "category": "developer-tools"
  },
  "kubernetes-claude": {
    "path": "developer-tools/kubernetes-claude.json",
    "category": "developer-tools"
  },
  "@heilgar/shadcn-ui-mcp-server": {
    "path": "developer-tools/heilgar-shadcn-ui-mcp-server.json",
    "category": "developer-tools"
  },
  "aapanel": {
    "path": "developer-tools/aapanel.json",
    "category": "developer-tools"
  },
  "tokenscope": {
    "path": "developer-tools/tokenscope.json",
    "category": "developer-tools"
  },
  "spring-boot-bridge": {
    "path": "developer-tools/spring-boot-bridge.json",
    "category": "developer-tools"
  },
  "jetbrains-ide": {
    "path": "developer-tools/jetbrains-ide.json",
    "category": "developer-tools"
  },
  "jenkins": {
    "path": "developer-tools/jenkins.json",
    "category": "developer-tools"
  },
  "next-mcp-server": {
    "path": "developer-tools/next-mcp-server.json",
    "category": "developer-tools"
  },
  "play-sound": {
    "path": "developer-tools/play-sound.json",
    "category": "developer-tools"
  },
  "dap-mcp": {
    "path": "developer-tools/dap-mcp.json",
    "category": "developer-tools"
  },
  "@ivotoby/contentful-management-mcp-server": {
    "path": "developer-tools/ivotoby-contentful-management-mcp-server.json",
    "category": "developer-tools"
  },
  "@jsonresume/mcp": {
    "path": "developer-tools/jsonresume-mcp.json",
    "category": "developer-tools"
  },
  "@airjesus17/mcp-server-spinnaker": {
    "path": "developer-tools/airjesus17-mcp-server-spinnaker.json",
    "category": "developer-tools"
  },
  "devenvinfoserver": {
    "path": "developer-tools/devenvinfoserver.json",
    "category": "developer-tools"
  },
  "1panel": {
    "path": "developer-tools/1panel.json",
    "category": "developer-tools"
  },
  "sonarqube-metrics": {
    "path": "developer-tools/sonarqube-metrics.json",
    "category": "developer-tools"
  },
  "gin-mcp": {
    "path": "developer-tools/gin-mcp.json",
    "category": "developer-tools"
  },
  "jupyter_earth_mcp_server": {
    "path": "data-science-tools/jupyter_earth_mcp_server.json",
    "category": "data-science-tools"
  },
  "excel": {
    "path": "data-science-tools/excel.json",
    "category": "data-science-tools"
  },
  "chronulus-mcp": {
    "path": "data-science-tools/chronulus-mcp.json",
    "category": "data-science-tools"
  },
  "numpy": {
    "path": "data-science-tools/numpy.json",
    "category": "data-science-tools"
  },
  "hana-cloud-ml-bridge": {
    "path": "data-science-tools/hana-cloud-ml-bridge.json",
    "category": "data-science-tools"
  },
  "excel-master": {
    "path": "data-science-tools/excel-master.json",
    "category": "data-science-tools"
  },
  "@gongrzhe/server-json-mcp": {
    "path": "data-science-tools/gongrzhe-server-json-mcp.json",
    "category": "data-science-tools"
  },
  "code-context-provider-mcp": {
    "path": "data-science-tools/code-context-provider-mcp.json",
    "category": "data-science-tools"
  },
  "mcp-excel-server": {
    "path": "data-science-tools/mcp-excel-server.json",
    "category": "data-science-tools"
  },
  "@arizeai/phoenix-mcp": {
    "path": "data-science-tools/arizeai-phoenix-mcp.json",
    "category": "data-science-tools"
  },
  "materials-project": {
    "path": "data-science-tools/materials-project.json",
    "category": "data-science-tools"
  },
  "@antv/mcp-server-chart": {
    "path": "data-science-tools/antv-mcp-server-chart.json",
    "category": "data-science-tools"
  },
  "adaptive-graph-of-thoughts": {
    "path": "data-science-tools/adaptive-graph-of-thoughts.json",
    "category": "data-science-tools"
  },
  "graphistry": {
    "path": "data-science-tools/graphistry.json",
    "category": "data-science-tools"
  },
  "vega-lite-data-visualization": {
    "path": "data-science-tools/vega-lite-data-visualization.json",
    "category": "data-science-tools"
  },
  "focus-sql": {
    "path": "data-science-tools/focus-sql.json",
    "category": "data-science-tools"
  },
  "biomart": {
    "path": "data-science-tools/biomart.json",
    "category": "data-science-tools"
  },
  "openpyxl-excel": {
    "path": "data-science-tools/openpyxl-excel.json",
    "category": "data-science-tools"
  },
  "or-tools": {
    "path": "data-science-tools/or-tools.json",
    "category": "data-science-tools"
  },
  "superset": {
    "path": "data-science-tools/superset.json",
    "category": "data-science-tools"
  },
  "linear-regression": {
    "path": "data-science-tools/linear-regression.json",
    "category": "data-science-tools"
  },
  "hex": {
    "path": "data-science-tools/hex.json",
    "category": "data-science-tools"
  },
  "expr-lang": {
    "path": "data-science-tools/expr-lang.json",
    "category": "data-science-tools"
  },
  "kodit": {
    "path": "data-science-tools/kodit.json",
    "category": "data-science-tools"
  },
  "scmcp": {
    "path": "data-science-tools/scmcp.json",
    "category": "data-science-tools"
  },
  "r-econometrics": {
    "path": "data-science-tools/r-econometrics.json",
    "category": "data-science-tools"
  },
  "mlcbakery": {
    "path": "data-science-tools/mlcbakery.json",
    "category": "data-science-tools"
  },
  "pbixray": {
    "path": "data-science-tools/pbixray.json",
    "category": "data-science-tools"
  },
  "mcp-web3-stats": {
    "path": "data-science-tools/mcp-web3-stats.json",
    "category": "data-science-tools"
  },
  "glyph": {
    "path": "data-science-tools/glyph.json",
    "category": "data-science-tools"
  },
  "mlflow": {
    "path": "data-science-tools/mlflow.json",
    "category": "data-science-tools"
  },
  "@jser/mcp": {
    "path": "data-science-tools/jser-mcp.json",
    "category": "data-science-tools"
  },
  "code2flow": {
    "path": "data-science-tools/code2flow.json",
    "category": "data-science-tools"
  },
  "kaggle-mcp": {
    "path": "data-science-tools/kaggle-mcp.json",
    "category": "data-science-tools"
  },
  "mcp-server-duckdb": {
    "path": "data-science-tools/mcp-server-duckdb.json",
    "category": "data-science-tools"
  },
  "axiom-query": {
    "path": "data-science-tools/axiom-query.json",
    "category": "data-science-tools"
  },
  "excel-bridge": {
    "path": "data-science-tools/excel-bridge.json",
    "category": "data-science-tools"
  },
  "log-analysis-sqlite": {
    "path": "data-science-tools/log-analysis-sqlite.json",
    "category": "data-science-tools"
  },
  "coreflux-mqtt": {
    "path": "embedded-system/coreflux-mqtt.json",
    "category": "embedded-system"
  },
  "intelliglow-smart-lighting": {
    "path": "embedded-system/intelliglow-smart-lighting.json",
    "category": "embedded-system"
  },
  "ros-2-robot-control": {
    "path": "embedded-system/ros-2-robot-control.json",
    "category": "embedded-system"
  },
  "epics-process-variable-bridge": {
    "path": "embedded-system/epics-process-variable-bridge.json",
    "category": "embedded-system"
  },
  "device-peripherals": {
    "path": "embedded-system/device-peripherals.json",
    "category": "embedded-system"
  },
  "ios-simulator-mcp": {
    "path": "embedded-system/ios-simulator-mcp.json",
    "category": "embedded-system"
  },
  "opc-ua": {
    "path": "embedded-system/opc-ua.json",
    "category": "embedded-system"
  },
  "litmus-edge": {
    "path": "embedded-system/litmus-edge.json",
    "category": "embedded-system"
  },
  "cutter-(reverse-engineering)": {
    "path": "embedded-system/cutter--reverse-engineering.json",
    "category": "embedded-system"
  },
  "@codesys/mcp-toolkit": {
    "path": "embedded-system/codesys-mcp-toolkit.json",
    "category": "embedded-system"
  },
  "droidmind": {
    "path": "embedded-system/droidmind.json",
    "category": "embedded-system"
  },
  "iot-home-automation": {
    "path": "embedded-system/iot-home-automation.json",
    "category": "embedded-system"
  },
  "fledge-iot": {
    "path": "embedded-system/fledge-iot.json",
    "category": "embedded-system"
  },
  "unreal-engine-editor": {
    "path": "embedded-system/unreal-engine-editor.json",
    "category": "embedded-system"
  },
  "bracketbot-multi-robot-control": {
    "path": "embedded-system/bracketbot-multi-robot-control.json",
    "category": "embedded-system"
  },
  "binary-ninja": {
    "path": "embedded-system/binary-ninja.json",
    "category": "embedded-system"
  },
  "esp-idf": {
    "path": "embedded-system/esp-idf.json",
    "category": "embedded-system"
  },
  "mcp-server-home-assistant": {
    "path": "embedded-system/mcp-server-home-assistant.json",
    "category": "embedded-system"
  },
  "agenda-app": {
    "path": "file-systems/agenda-app.json",
    "category": "file-systems"
  },
  "@exoticknight/mcp-file-merger": {
    "path": "file-systems/exoticknight-mcp-file-merger.json",
    "category": "file-systems"
  },
  "claude-conversations-to-markdown": {
    "path": "file-systems/claude-conversations-to-markdown.json",
    "category": "file-systems"
  },
  "file-finder": {
    "path": "file-systems/file-finder.json",
    "category": "file-systems"
  },
  "spire.xls": {
    "path": "file-systems/spire-xls.json",
    "category": "file-systems"
  },
  "file-system-tools": {
    "path": "file-systems/file-system-tools.json",
    "category": "file-systems"
  },
  "excel-to-pdf-mcp": {
    "path": "file-systems/excel-to-pdf-mcp.json",
    "category": "file-systems"
  },
  "sticky-notes": {
    "path": "file-systems/sticky-notes.json",
    "category": "file-systems"
  },
  "@bunas/fs-mcp": {
    "path": "file-systems/bunas-fs-mcp.json",
    "category": "file-systems"
  },
  "text-editor": {
    "path": "file-systems/text-editor.json",
    "category": "file-systems"
  },
  "@cyanheads/filesystem-mcp-server": {
    "path": "file-systems/cyanheads-filesystem-mcp-server.json",
    "category": "file-systems"
  },
  "document-reader": {
    "path": "file-systems/document-reader.json",
    "category": "file-systems"
  },
  "document-operations-(word,-excel,-pdf)": {
    "path": "file-systems/document-operations--word--excel--pdf.json",
    "category": "file-systems"
  },
  "google-drive": {
    "path": "file-systems/google-drive.json",
    "category": "file-systems"
  },
  "chat-logger": {
    "path": "file-systems/chat-logger.json",
    "category": "file-systems"
  },
  "deltatask": {
    "path": "file-systems/deltatask.json",
    "category": "file-systems"
  },
  "file-system-observer": {
    "path": "file-systems/file-system-observer.json",
    "category": "file-systems"
  },
  "google-drive-classifier": {
    "path": "file-systems/google-drive-classifier.json",
    "category": "file-systems"
  },
  "mcp-docs-service": {
    "path": "file-systems/mcp-docs-service.json",
    "category": "file-systems"
  },
  "@aindreyway/mcp-neurolora": {
    "path": "file-systems/aindreyway-mcp-neurolora.json",
    "category": "file-systems"
  },
  "cursor-chat-history-mcp": {
    "path": "file-systems/cursor-chat-history-mcp.json",
    "category": "file-systems"
  },
  "pdf-manipulation": {
    "path": "file-systems/pdf-manipulation.json",
    "category": "file-systems"
  },
  "@isaacphi/mcp-gdrive": {
    "path": "file-systems/isaacphi-mcp-gdrive.json",
    "category": "file-systems"
  },
  "filesystem": {
    "path": "file-systems/filesystem.json",
    "category": "file-systems"
  },
  "mcp-obsidian": {
    "path": "file-systems/mcp-obsidian.json",
    "category": "file-systems"
  },
  "file-system-utilities": {
    "path": "file-systems/file-system-utilities.json",
    "category": "file-systems"
  },
  "obsidian-mcp-server": {
    "path": "file-systems/obsidian-mcp-server.json",
    "category": "file-systems"
  },
  "supernotes-to-obsidian": {
    "path": "file-systems/supernotes-to-obsidian.json",
    "category": "file-systems"
  },
  "alphavantage": {
    "path": "finance-fintech/alphavantage.json",
    "category": "finance-fintech"
  },
  "bsv-mcp": {
    "path": "finance-fintech/bsv-mcp.json",
    "category": "finance-fintech"
  },
  "gp": {
    "path": "finance-fintech/gp.json",
    "category": "finance-fintech"
  },
  "@lazydino/ccxt-mcp": {
    "path": "finance-fintech/lazydino-ccxt-mcp.json",
    "category": "finance-fintech"
  },
  "@mcp-dockmaster/mcp-cryptowallet-evm": {
    "path": "finance-fintech/mcp-dockmaster-mcp-cryptowallet-evm.json",
    "category": "finance-fintech"
  },
  "heurist-mesh-(web3-tools)": {
    "path": "finance-fintech/heurist-mesh--web3-tools.json",
    "category": "finance-fintech"
  },
  "@getalby/nwc-mcp-server": {
    "path": "finance-fintech/getalby-nwc-mcp-server.json",
    "category": "finance-fintech"
  },
  "stock-analyzer-(tingo)": {
    "path": "finance-fintech/stock-analyzer--tingo.json",
    "category": "finance-fintech"
  },
  "dodopayments-mcp": {
    "path": "finance-fintech/dodopayments-mcp.json",
    "category": "finance-fintech"
  },
  "lunchmoney-mcp": {
    "path": "finance-fintech/lunchmoney-mcp.json",
    "category": "finance-fintech"
  },
  "ynab": {
    "path": "finance-fintech/ynab.json",
    "category": "finance-fintech"
  },
  "freqtrade": {
    "path": "finance-fintech/freqtrade.json",
    "category": "finance-fintech"
  },
  "square": {
    "path": "finance-fintech/square.json",
    "category": "finance-fintech"
  },
  "coingecko": {
    "path": "finance-fintech/coingecko.json",
    "category": "finance-fintech"
  },
  "kroger-mcp": {
    "path": "finance-fintech/kroger-mcp.json",
    "category": "finance-fintech"
  },
  "yahoo-finance": {
    "path": "finance-fintech/yahoo-finance.json",
    "category": "finance-fintech"
  },
  "@cerebrofoundation/mcp-intent": {
    "path": "finance-fintech/cerebrofoundation-mcp-intent.json",
    "category": "finance-fintech"
  },
  "bitcoin-mcp": {
    "path": "finance-fintech/bitcoin-mcp.json",
    "category": "finance-fintech"
  },
  "stripe": {
    "path": "finance-fintech/stripe.json",
    "category": "finance-fintech"
  },
  "polymarket": {
    "path": "finance-fintech/polymarket.json",
    "category": "finance-fintech"
  },
  "tradingview-chart": {
    "path": "finance-fintech/tradingview-chart.json",
    "category": "finance-fintech"
  },
  "openbudget": {
    "path": "finance-fintech/openbudget.json",
    "category": "finance-fintech"
  },
  "ton-mcp-server": {
    "path": "finance-fintech/ton-mcp-server.json",
    "category": "finance-fintech"
  },
  "dexpaprika-mcp": {
    "path": "finance-fintech/dexpaprika-mcp.json",
    "category": "finance-fintech"
  },
  "cb-insights": {
    "path": "finance-fintech/cb-insights.json",
    "category": "finance-fintech"
  },
  "@ibraheem4/clover-mcp": {
    "path": "finance-fintech/ibraheem4-clover-mcp.json",
    "category": "finance-fintech"
  },
  "cryptopanic": {
    "path": "finance-fintech/cryptopanic.json",
    "category": "finance-fintech"
  },
  "manifold-mcp-server": {
    "path": "finance-fintech/manifold-mcp-server.json",
    "category": "finance-fintech"
  },
  "awslabs.cost-analysis-mcp-server": {
    "path": "finance-fintech/awslabs-cost-analysis-mcp-server.json",
    "category": "finance-fintech"
  },
  "investor-agent": {
    "path": "finance-fintech/investor-agent.json",
    "category": "finance-fintech"
  },
  "adfin-financial-management": {
    "path": "finance-fintech/adfin-financial-management.json",
    "category": "finance-fintech"
  },
  "a-stock": {
    "path": "finance-fintech/a-stock.json",
    "category": "finance-fintech"
  },
  "search-stock-news-mcp": {
    "path": "finance-fintech/search-stock-news-mcp.json",
    "category": "finance-fintech"
  },
  "tradovate": {
    "path": "finance-fintech/tradovate.json",
    "category": "finance-fintech"
  },
  "transaction-categorizer": {
    "path": "finance-fintech/transaction-categorizer.json",
    "category": "finance-fintech"
  },
  "gatherings-(expense-sharing)": {
    "path": "finance-fintech/gatherings--expense-sharing.json",
    "category": "finance-fintech"
  },
  "@jeromyfu/app-insight-mcp": {
    "path": "finance-fintech/jeromyfu-app-insight-mcp.json",
    "category": "finance-fintech"
  },
  "pancakeswap-poolspy": {
    "path": "finance-fintech/pancakeswap-poolspy.json",
    "category": "finance-fintech"
  },
  "coinmarket": {
    "path": "finance-fintech/coinmarket.json",
    "category": "finance-fintech"
  },
  "ssi-stock-(vietnamese-market-data)": {
    "path": "finance-fintech/ssi-stock--vietnamese-market-data.json",
    "category": "finance-fintech"
  },
  "a-share-financial-data-(baostock)": {
    "path": "finance-fintech/a-share-financial-data--baostock.json",
    "category": "finance-fintech"
  },
  "bonk-mcp": {
    "path": "finance-fintech/bonk-mcp.json",
    "category": "finance-fintech"
  },
  "sec-edgar": {
    "path": "finance-fintech/sec-edgar.json",
    "category": "finance-fintech"
  },
  "quickbooks-time": {
    "path": "finance-fintech/quickbooks-time.json",
    "category": "finance-fintech"
  },
  "bicscan": {
    "path": "finance-fintech/bicscan.json",
    "category": "finance-fintech"
  },
  "@coinstats/coinstats-mcp": {
    "path": "finance-fintech/coinstats-coinstats-mcp.json",
    "category": "finance-fintech"
  },
  "m-pesa-(safaricom-daraja-api)": {
    "path": "finance-fintech/m-pesa--safaricom-daraja-api.json",
    "category": "finance-fintech"
  },
  "bybit-exchange-api": {
    "path": "finance-fintech/bybit-exchange-api.json",
    "category": "finance-fintech"
  },
  "xero-mcp": {
    "path": "finance-fintech/xero-mcp.json",
    "category": "finance-fintech"
  },
  "climatiq": {
    "path": "finance-fintech/climatiq.json",
    "category": "finance-fintech"
  },
  "kroger": {
    "path": "finance-fintech/kroger.json",
    "category": "finance-fintech"
  },
  "@getalby/lightning-tools-mcp-server": {
    "path": "finance-fintech/getalby-lightning-tools-mcp-server.json",
    "category": "finance-fintech"
  },
  "investment-portfolio-manager": {
    "path": "finance-fintech/investment-portfolio-manager.json",
    "category": "finance-fintech"
  },
  "crypto-fear-&-greed-index": {
    "path": "finance-fintech/crypto-fear---greed-index.json",
    "category": "finance-fintech"
  },
  "artemis-mcp": {
    "path": "finance-fintech/artemis-mcp.json",
    "category": "finance-fintech"
  },
  "@iqai/mcp-bamm": {
    "path": "finance-fintech/iqai-mcp-bamm.json",
    "category": "finance-fintech"
  },
  "consumer-financial-protection-bureau-complaints": {
    "path": "finance-fintech/consumer-financial-protection-bureau-complaints.json",
    "category": "finance-fintech"
  },
  "@osmosis-agent-toolkit/mcp": {
    "path": "finance-fintech/osmosis-agent-toolkit-mcp.json",
    "category": "finance-fintech"
  },
  "kospi-kosdaq-stock-server": {
    "path": "finance-fintech/kospi-kosdaq-stock-server.json",
    "category": "finance-fintech"
  },
  "paypal-java": {
    "path": "finance-fintech/paypal-java.json",
    "category": "finance-fintech"
  },
  "base-mcp": {
    "path": "finance-fintech/base-mcp.json",
    "category": "finance-fintech"
  },
  "uniswap-poolspy": {
    "path": "finance-fintech/uniswap-poolspy.json",
    "category": "finance-fintech"
  },
  "tigerbeetle": {
    "path": "finance-fintech/tigerbeetle.json",
    "category": "finance-fintech"
  },
  "whale-tracker": {
    "path": "finance-fintech/whale-tracker.json",
    "category": "finance-fintech"
  },
  "ccxt-cryptocurrency-exchange": {
    "path": "finance-fintech/ccxt-cryptocurrency-exchange.json",
    "category": "finance-fintech"
  },
  "xtquant-ai": {
    "path": "finance-fintech/xtquant-ai.json",
    "category": "finance-fintech"
  },
  "alpha-vantage": {
    "path": "finance-fintech/alpha-vantage.json",
    "category": "finance-fintech"
  },
  "alphavantage-trader": {
    "path": "finance-fintech/alphavantage-trader.json",
    "category": "finance-fintech"
  },
  "@akki91/ankr-mcp": {
    "path": "finance-fintech/akki91-ankr-mcp.json",
    "category": "finance-fintech"
  },
  "up-bank": {
    "path": "finance-fintech/up-bank.json",
    "category": "finance-fintech"
  },
  "zerodha": {
    "path": "finance-fintech/zerodha.json",
    "category": "finance-fintech"
  },
  "financial-datasets": {
    "path": "finance-fintech/financial-datasets.json",
    "category": "finance-fintech"
  },
  "alpaca-trading": {
    "path": "finance-fintech/alpaca-trading.json",
    "category": "finance-fintech"
  },
  "fewsats-mcp": {
    "path": "finance-fintech/fewsats-mcp.json",
    "category": "finance-fintech"
  },
  "finnhub": {
    "path": "finance-fintech/finnhub.json",
    "category": "finance-fintech"
  },
  "fred-macroeconomic-data": {
    "path": "finance-fintech/fred-macroeconomic-data.json",
    "category": "finance-fintech"
  },
  "@mcpfun/mcp-server-ccxt": {
    "path": "finance-fintech/mcpfun-mcp-server-ccxt.json",
    "category": "finance-fintech"
  },
  "etf-flow-mcp": {
    "path": "finance-fintech/etf-flow-mcp.json",
    "category": "finance-fintech"
  },
  "xueqiu-(chinese-stock-market)": {
    "path": "finance-fintech/xueqiu--chinese-stock-market.json",
    "category": "finance-fintech"
  },
  "crypto-sentiment-(santiment)": {
    "path": "finance-fintech/crypto-sentiment--santiment.json",
    "category": "finance-fintech"
  },
  "ledger-cli": {
    "path": "finance-fintech/ledger-cli.json",
    "category": "finance-fintech"
  },
  "armor-wallet": {
    "path": "finance-fintech/armor-wallet.json",
    "category": "finance-fintech"
  },
  "schwab": {
    "path": "finance-fintech/schwab.json",
    "category": "finance-fintech"
  },
  "volume-wall-detector-mcp": {
    "path": "finance-fintech/volume-wall-detector-mcp.json",
    "category": "finance-fintech"
  },
  "@agentek/mcp-server": {
    "path": "finance-fintech/agentek-mcp-server.json",
    "category": "finance-fintech"
  },
  "bitrefill-mcp-server": {
    "path": "finance-fintech/bitrefill-mcp-server.json",
    "category": "finance-fintech"
  },
  "hubble-mcp-tool": {
    "path": "finance-fintech/hubble-mcp-tool.json",
    "category": "finance-fintech"
  },
  "li.fi": {
    "path": "finance-fintech/li-fi.json",
    "category": "finance-fintech"
  },
  "fred-(federal-reserve-economic-data)": {
    "path": "finance-fintech/fred--federal-reserve-economic-data.json",
    "category": "finance-fintech"
  },
  "tesouro-direto-mcp": {
    "path": "finance-fintech/tesouro-direto-mcp.json",
    "category": "finance-fintech"
  },
  "imf-data": {
    "path": "finance-fintech/imf-data.json",
    "category": "finance-fintech"
  },
  "rootdata": {
    "path": "finance-fintech/rootdata.json",
    "category": "finance-fintech"
  },
  "xrp-ledger": {
    "path": "finance-fintech/xrp-ledger.json",
    "category": "finance-fintech"
  },
  "mcp-lighthouse": {
    "path": "finance-fintech/mcp-lighthouse.json",
    "category": "finance-fintech"
  },
  "pokemon-vgc-calc-mcp": {
    "path": "gaming/pokemon-vgc-calc-mcp.json",
    "category": "gaming"
  },
  "pokemon-paste-mcp": {
    "path": "gaming/pokemon-paste-mcp.json",
    "category": "gaming"
  },
  "moling-minecraft": {
    "path": "gaming/moling-minecraft.json",
    "category": "gaming"
  },
  "@jayarrowz/mcp-osrs": {
    "path": "gaming/jayarrowz-mcp-osrs.json",
    "category": "gaming"
  },
  "mcp-chess": {
    "path": "gaming/mcp-chess.json",
    "category": "gaming"
  },
  "steam": {
    "path": "gaming/steam.json",
    "category": "gaming"
  },
  "chess": {
    "path": "gaming/chess.json",
    "category": "gaming"
  },
  "opendota": {
    "path": "gaming/opendota.json",
    "category": "gaming"
  },
  "four-in-a-row": {
    "path": "gaming/four-in-a-row.json",
    "category": "gaming"
  },
  "unreal-engine-binary-reader": {
    "path": "gaming/unreal-engine-binary-reader.json",
    "category": "gaming"
  },
  "mcp-server-tft": {
    "path": "gaming/mcp-server-tft.json",
    "category": "gaming"
  },
  "steam-web-api": {
    "path": "gaming/steam-web-api.json",
    "category": "gaming"
  },
  "mcp-minecraft": {
    "path": "gaming/mcp-minecraft.json",
    "category": "gaming"
  },
  "mtg-deck-manager": {
    "path": "gaming/mtg-deck-manager.json",
    "category": "gaming"
  },
  "steam-review-mcp": {
    "path": "gaming/steam-review-mcp.json",
    "category": "gaming"
  },
  "think-tool-mcp": {
    "path": "knowledge-memory/think-tool-mcp.json",
    "category": "knowledge-memory"
  },
  "zotero-mcp": {
    "path": "knowledge-memory/zotero-mcp.json",
    "category": "knowledge-memory"
  },
  "tribal": {
    "path": "knowledge-memory/tribal.json",
    "category": "knowledge-memory"
  },
  "@eventcatalog/mcp-server": {
    "path": "knowledge-memory/eventcatalog-mcp-server.json",
    "category": "knowledge-memory"
  },
  "research-notion": {
    "path": "knowledge-memory/research-notion.json",
    "category": "knowledge-memory"
  },
  "memos-mcp-server": {
    "path": "knowledge-memory/memos-mcp-server.json",
    "category": "knowledge-memory"
  },
  "sparql": {
    "path": "knowledge-memory/sparql.json",
    "category": "knowledge-memory"
  },
  "mem0-(long-term-memory)": {
    "path": "knowledge-memory/mem0--long-term-memory.json",
    "category": "knowledge-memory"
  },
  "fegis-(schema-driven-memory)": {
    "path": "knowledge-memory/fegis--schema-driven-memory.json",
    "category": "knowledge-memory"
  },
  "chroma-mcp": {
    "path": "knowledge-memory/chroma-mcp.json",
    "category": "knowledge-memory"
  },
  "Memory": {
    "path": "knowledge-memory/modelcontextprotocol-server-memory.json",
    "category": "knowledge-memory"
  },
  "mcp-server-logseq": {
    "path": "knowledge-memory/mcp-server-logseq.json",
    "category": "knowledge-memory"
  },
  "arcknowledge-(custom-rag)": {
    "path": "knowledge-memory/arcknowledge--custom-rag.json",
    "category": "knowledge-memory"
  },
  "mcpunk": {
    "path": "knowledge-memory/mcpunk.json",
    "category": "knowledge-memory"
  },
  "chroma-mcp-server": {
    "path": "knowledge-memory/chroma-mcp-server.json",
    "category": "knowledge-memory"
  },
  "inkeep-rag": {
    "path": "knowledge-memory/inkeep-rag.json",
    "category": "knowledge-memory"
  },
  "notion-mcp-server": {
    "path": "knowledge-memory/notion-mcp-server.json",
    "category": "knowledge-memory"
  },
  "@mcpservers/ragdocs": {
    "path": "knowledge-memory/mcpservers-ragdocs.json",
    "category": "knowledge-memory"
  },
  "@aindreyway/mcp-codex-keeper": {
    "path": "knowledge-memory/aindreyway-mcp-codex-keeper.json",
    "category": "knowledge-memory"
  },
  "pdf-knowledge-base": {
    "path": "knowledge-memory/pdf-knowledge-base.json",
    "category": "knowledge-memory"
  },
  "logseq": {
    "path": "knowledge-memory/logseq.json",
    "category": "knowledge-memory"
  },
  "@neko0721/memory-bank-mcp": {
    "path": "knowledge-memory/neko0721-memory-bank-mcp.json",
    "category": "knowledge-memory"
  },
  "flomo-mcp": {
    "path": "knowledge-memory/flomo-mcp.json",
    "category": "knowledge-memory"
  },
  "esa-mcp-server": {
    "path": "knowledge-memory/esa-mcp-server.json",
    "category": "knowledge-memory"
  },
  "@gleanwork/mcp-server": {
    "path": "knowledge-memory/gleanwork-mcp-server.json",
    "category": "knowledge-memory"
  },
  "zotero": {
    "path": "knowledge-memory/zotero.json",
    "category": "knowledge-memory"
  },
  "rdf-explorer": {
    "path": "knowledge-memory/rdf-explorer.json",
    "category": "knowledge-memory"
  },
  "@delorenj/mcp-qdrant-memory": {
    "path": "knowledge-memory/delorenj-mcp-qdrant-memory.json",
    "category": "knowledge-memory"
  },
  "logseq-mcp": {
    "path": "knowledge-memory/logseq-mcp.json",
    "category": "knowledge-memory"
  },
  "mcp-notes": {
    "path": "knowledge-memory/mcp-notes.json",
    "category": "knowledge-memory"
  },
  "memoer-mcp": {
    "path": "knowledge-memory/memoer-mcp.json",
    "category": "knowledge-memory"
  },
  "code-embeddings": {
    "path": "knowledge-memory/code-embeddings.json",
    "category": "knowledge-memory"
  },
  "systemprompt-mcp-notion": {
    "path": "knowledge-memory/systemprompt-mcp-notion.json",
    "category": "knowledge-memory"
  },
  "markdown-library": {
    "path": "knowledge-memory/markdown-library.json",
    "category": "knowledge-memory"
  },
  "multi-document-rag": {
    "path": "knowledge-memory/multi-document-rag.json",
    "category": "knowledge-memory"
  },
  "optimized-memory": {
    "path": "knowledge-memory/optimized-memory.json",
    "category": "knowledge-memory"
  },
  "@iachilles/memento": {
    "path": "knowledge-memory/iachilles-memento.json",
    "category": "knowledge-memory"
  },
  "context-portal-mcp": {
    "path": "knowledge-memory/context-portal-mcp.json",
    "category": "knowledge-memory"
  },
  "@itseasy21/mcp-knowledge-graph": {
    "path": "knowledge-memory/itseasy21-mcp-knowledge-graph.json",
    "category": "knowledge-memory"
  },
  "@kazuph/mcp-obsidian": {
    "path": "knowledge-memory/kazuph-mcp-obsidian.json",
    "category": "knowledge-memory"
  },
  "journal-rag": {
    "path": "knowledge-memory/journal-rag.json",
    "category": "knowledge-memory"
  },
  "think-tool": {
    "path": "knowledge-memory/think-tool.json",
    "category": "knowledge-memory"
  },
  "groundx-rag": {
    "path": "knowledge-memory/groundx-rag.json",
    "category": "knowledge-memory"
  },
  "mcp-server-obsidian-omnisearch": {
    "path": "knowledge-memory/mcp-server-obsidian-omnisearch.json",
    "category": "knowledge-memory"
  },
  "@kj455/mcp-kibela": {
    "path": "knowledge-memory/kj455-mcp-kibela.json",
    "category": "knowledge-memory"
  },
  "awslabs.bedrock-kb-retrieval-mcp-server": {
    "path": "knowledge-memory/awslabs-bedrock-kb-retrieval-mcp-server.json",
    "category": "knowledge-memory"
  },
  "confluence-cloud": {
    "path": "knowledge-memory/confluence-cloud.json",
    "category": "knowledge-memory"
  },
  "memory-service": {
    "path": "knowledge-memory/memory-service.json",
    "category": "knowledge-memory"
  },
  "basic-memory": {
    "path": "knowledge-memory/basic-memory.json",
    "category": "knowledge-memory"
  },
  "memory-mcp-server": {
    "path": "knowledge-memory/memory-mcp-server.json",
    "category": "knowledge-memory"
  },
  "knowledge-base": {
    "path": "knowledge-memory/knowledge-base.json",
    "category": "knowledge-memory"
  },
  "@iqai/mcp-iqwiki": {
    "path": "knowledge-memory/iqai-mcp-iqwiki.json",
    "category": "knowledge-memory"
  },
  "bear": {
    "path": "knowledge-memory/bear.json",
    "category": "knowledge-memory"
  },
  "@cablate/mcp-google-map": {
    "path": "location-services/cablate-mcp-google-map.json",
    "category": "location-services"
  },
  "weather-alerts-&-forecasts": {
    "path": "location-services/weather-alerts---forecasts.json",
    "category": "location-services"
  },
  "@baidumap/mcp-server-baidu-map": {
    "path": "location-services/baidumap-mcp-server-baidu-map.json",
    "category": "location-services"
  },
  "dnf-gold-price-&-weather": {
    "path": "location-services/dnf-gold-price---weather.json",
    "category": "location-services"
  },
  "geoapify-map-generator": {
    "path": "location-services/geoapify-map-generator.json",
    "category": "location-services"
  },
  "mcp-gaodeweather-server": {
    "path": "location-services/mcp-gaodeweather-server.json",
    "category": "location-services"
  },
  "world-time": {
    "path": "location-services/world-time.json",
    "category": "location-services"
  },
  "whereami-(ip-geolocation)": {
    "path": "location-services/whereami--ip-geolocation.json",
    "category": "location-services"
  },
  "location": {
    "path": "location-services/location.json",
    "category": "location-services"
  },
  "ip-geolocation": {
    "path": "location-services/ip-geolocation.json",
    "category": "location-services"
  },
  "japan-weather": {
    "path": "location-services/japan-weather.json",
    "category": "location-services"
  },
  "xiaozhi-location": {
    "path": "location-services/xiaozhi-location.json",
    "category": "location-services"
  },
  "amap-navigator": {
    "path": "location-services/amap-navigator.json",
    "category": "location-services"
  },
  "Google Maps": {
    "path": "location-services/modelcontextprotocol-server-google-maps.json",
    "category": "location-services"
  },
  "ip-address-lookup": {
    "path": "location-services/ip-address-lookup.json",
    "category": "location-services"
  },
  "aemet_mcp": {
    "path": "location-services/aemet_mcp.json",
    "category": "location-services"
  },
  "weather": {
    "path": "location-services/weather.json",
    "category": "location-services"
  },
  "ordnance-survey-national-geographic-database": {
    "path": "location-services/ordnance-survey-national-geographic-database.json",
    "category": "location-services"
  },
  "nearby-places": {
    "path": "location-services/nearby-places.json",
    "category": "location-services"
  },
  "mcp_weather_server": {
    "path": "location-services/mcp_weather_server.json",
    "category": "location-services"
  },
  "korean-weather": {
    "path": "location-services/korean-weather.json",
    "category": "location-services"
  },
  "jweather-mcp-server": {
    "path": "location-services/jweather-mcp-server.json",
    "category": "location-services"
  },
  "national-weather-service": {
    "path": "location-services/national-weather-service.json",
    "category": "location-services"
  },
  "@feedmob/kayzen-reporting": {
    "path": "marketing/feedmob-kayzen-reporting.json",
    "category": "marketing"
  },
  "@feedmob/jampp-reporting": {
    "path": "marketing/feedmob-jampp-reporting.json",
    "category": "marketing"
  },
  "facebook-ads": {
    "path": "marketing/facebook-ads.json",
    "category": "marketing"
  },
  "@feedmob/singular-reporting": {
    "path": "marketing/feedmob-singular-reporting.json",
    "category": "marketing"
  },
  "instagram-engagement-mcp": {
    "path": "marketing/instagram-engagement-mcp.json",
    "category": "marketing"
  },
  "google-ads": {
    "path": "marketing/google-ads.json",
    "category": "marketing"
  },
  "facebook-pages-manager": {
    "path": "marketing/facebook-pages-manager.json",
    "category": "marketing"
  },
  "linkedin": {
    "path": "marketing/linkedin.json",
    "category": "marketing"
  },
  "linkedin-mcp-runner": {
    "path": "marketing/linkedin-mcp-runner.json",
    "category": "marketing"
  },
  "mailchimp": {
    "path": "marketing/mailchimp.json",
    "category": "marketing"
  },
  "inbound-lead-generation": {
    "path": "marketing/inbound-lead-generation.json",
    "category": "marketing"
  },
  "@felores/placid-mcp-server": {
    "path": "marketing/felores-placid-mcp-server.json",
    "category": "marketing"
  },
  "system-info": {
    "path": "monitoring/system-info.json",
    "category": "monitoring"
  },
  "Raygun": {
    "path": "monitoring/raygun.io-mcp-server-raygun.json",
    "category": "monitoring"
  },
  "@kajirita2002/honeycomb-mcp-server": {
    "path": "monitoring/kajirita2002-honeycomb-mcp-server.json",
    "category": "monitoring"
  },
  "memory-usage-dashboard": {
    "path": "monitoring/memory-usage-dashboard.json",
    "category": "monitoring"
  },
  "@hiyorineko/mcp-rollbar-server": {
    "path": "monitoring/hiyorineko-mcp-rollbar-server.json",
    "category": "monitoring"
  },
  "datadog-mcp-server": {
    "path": "monitoring/datadog-mcp-server.json",
    "category": "monitoring"
  },
  "splunk": {
    "path": "monitoring/splunk.json",
    "category": "monitoring"
  },
  "grafana": {
    "path": "monitoring/grafana.json",
    "category": "monitoring"
  },
  "stdout-mcp-server": {
    "path": "monitoring/stdout-mcp-server.json",
    "category": "monitoring"
  },
  "gigapipe": {
    "path": "monitoring/gigapipe.json",
    "category": "monitoring"
  },
  "sentry-issues-mcp": {
    "path": "monitoring/sentry-issues-mcp.json",
    "category": "monitoring"
  },
  "prometheus": {
    "path": "monitoring/prometheus.json",
    "category": "monitoring"
  },
  "@dynatrace-oss/dynatrace-mcp-server": {
    "path": "monitoring/dynatrace-oss-dynatrace-mcp-server.json",
    "category": "monitoring"
  },
  "isitdown": {
    "path": "monitoring/isitdown.json",
    "category": "monitoring"
  },
  "thingsboard": {
    "path": "monitoring/thingsboard.json",
    "category": "monitoring"
  },
  "buildkite": {
    "path": "monitoring/buildkite.json",
    "category": "monitoring"
  },
  "mcp-sentry-custom": {
    "path": "monitoring/mcp-sentry-custom.json",
    "category": "monitoring"
  },
  "pytorch-hud": {
    "path": "monitoring/pytorch-hud.json",
    "category": "monitoring"
  },
  "log-analyzer-with-cloudwatch-logs": {
    "path": "monitoring/log-analyzer-with-cloudwatch-logs.json",
    "category": "monitoring"
  },
  "@aparkerio/honeycomb-mcp": {
    "path": "monitoring/aparkerio-honeycomb-mcp.json",
    "category": "monitoring"
  },
  "last9-observability": {
    "path": "monitoring/last9-observability.json",
    "category": "monitoring"
  },
  "aws-cloudwatch": {
    "path": "monitoring/aws-cloudwatch.json",
    "category": "monitoring"
  },
  "mcp-server-aliyun-observability": {
    "path": "monitoring/mcp-server-aliyun-observability.json",
    "category": "monitoring"
  },
  "new-relic-logs": {
    "path": "monitoring/new-relic-logs.json",
    "category": "monitoring"
  },
  "mcp-solarwinds": {
    "path": "monitoring/mcp-solarwinds.json",
    "category": "monitoring"
  },
  "pdfsearch": {
    "path": "search-data-extraction/pdfsearch.json",
    "category": "search-data-extraction"
  },
  "exa-search": {
    "path": "search-data-extraction/exa-search.json",
    "category": "search-data-extraction"
  },
  "Brave Search": {
    "path": "search-data-extraction/modelcontextprotocol-server-brave-search.json",
    "category": "search-data-extraction"
  },
  "mcp-search-linkup": {
    "path": "search-data-extraction/mcp-search-linkup.json",
    "category": "search-data-extraction"
  },
  "mcp-simple-pubmed": {
    "path": "search-data-extraction/mcp-simple-pubmed.json",
    "category": "search-data-extraction"
  },
  "@jayarrowz/mcp-xpath": {
    "path": "search-data-extraction/jayarrowz-mcp-xpath.json",
    "category": "search-data-extraction"
  },
  "mcp-private-github-search": {
    "path": "search-data-extraction/mcp-private-github-search.json",
    "category": "search-data-extraction"
  },
  "minima-(local-rag)": {
    "path": "search-data-extraction/minima--local-rag.json",
    "category": "search-data-extraction"
  },
  "duckduckgo-search": {
    "path": "search-data-extraction/duckduckgo-search.json",
    "category": "search-data-extraction"
  },
  "google-search-console": {
    "path": "search-data-extraction/google-search-console.json",
    "category": "search-data-extraction"
  },
  "serpapi-google-search": {
    "path": "search-data-extraction/serpapi-google-search.json",
    "category": "search-data-extraction"
  },
  "search1api-mcp": {
    "path": "search-data-extraction/search1api-mcp.json",
    "category": "search-data-extraction"
  },
  "claude-deep-research": {
    "path": "search-data-extraction/claude-deep-research.json",
    "category": "search-data-extraction"
  },
  "reddit-extractor": {
    "path": "search-data-extraction/reddit-extractor.json",
    "category": "search-data-extraction"
  },
  "papersearch-(arxiv)": {
    "path": "search-data-extraction/papersearch--arxiv.json",
    "category": "search-data-extraction"
  },
  "xiaohongshu-search-and-comment": {
    "path": "search-data-extraction/xiaohongshu-search-and-comment.json",
    "category": "search-data-extraction"
  },
  "book-fetch-(library-genesis)": {
    "path": "search-data-extraction/book-fetch--library-genesis.json",
    "category": "search-data-extraction"
  },
  "perplexity-search": {
    "path": "search-data-extraction/perplexity-search.json",
    "category": "search-data-extraction"
  },
  "aipolabs-mcp": {
    "path": "search-data-extraction/aipolabs-mcp.json",
    "category": "search-data-extraction"
  },
  "brave-search": {
    "path": "search-data-extraction/brave-search.json",
    "category": "search-data-extraction"
  },
  "google-pse-mcp": {
    "path": "search-data-extraction/google-pse-mcp.json",
    "category": "search-data-extraction"
  },
  "azure-ai-search": {
    "path": "search-data-extraction/azure-ai-search.json",
    "category": "search-data-extraction"
  },
  "semantic-scholar": {
    "path": "search-data-extraction/semantic-scholar.json",
    "category": "search-data-extraction"
  },
  "tavily-search": {
    "path": "search-data-extraction/tavily-search.json",
    "category": "search-data-extraction"
  },
  "@kunihiros/google-patents-mcp": {
    "path": "search-data-extraction/kunihiros-google-patents-mcp.json",
    "category": "search-data-extraction"
  },
  "unsplash": {
    "path": "search-data-extraction/unsplash.json",
    "category": "search-data-extraction"
  },
  "arxiv": {
    "path": "search-data-extraction/arxiv.json",
    "category": "search-data-extraction"
  },
  "perplexity-mcp": {
    "path": "search-data-extraction/perplexity-mcp.json",
    "category": "search-data-extraction"
  },
  "box": {
    "path": "search-data-extraction/box.json",
    "category": "search-data-extraction"
  },
  "paperpal": {
    "path": "search-data-extraction/paperpal.json",
    "category": "search-data-extraction"
  },
  "google-search": {
    "path": "search-data-extraction/google-search.json",
    "category": "search-data-extraction"
  },
  "linkedin-profile-scraper": {
    "path": "search-data-extraction/linkedin-profile-scraper.json",
    "category": "search-data-extraction"
  },
  "bilibili-search": {
    "path": "search-data-extraction/bilibili-search.json",
    "category": "search-data-extraction"
  },
  "higress-ai-search-mcp-server": {
    "path": "search-data-extraction/higress-ai-search-mcp-server.json",
    "category": "search-data-extraction"
  },
  "perplexity-research": {
    "path": "search-data-extraction/perplexity-research.json",
    "category": "search-data-extraction"
  },
  "pickapicon-mcp": {
    "path": "search-data-extraction/pickapicon-mcp.json",
    "category": "search-data-extraction"
  },
  "hermes-search-mcp": {
    "path": "search-data-extraction/hermes-search-mcp.json",
    "category": "search-data-extraction"
  },
  "mcp-trends-hub": {
    "path": "search-data-extraction/mcp-trends-hub.json",
    "category": "search-data-extraction"
  },
  "mcp-simple-arxiv": {
    "path": "search-data-extraction/mcp-simple-arxiv.json",
    "category": "search-data-extraction"
  },
  "fastdomaincheck": {
    "path": "search-data-extraction/fastdomaincheck.json",
    "category": "search-data-extraction"
  },
  "academic-paper-search": {
    "path": "search-data-extraction/academic-paper-search.json",
    "category": "search-data-extraction"
  },
  "scholarly-(arxiv)": {
    "path": "search-data-extraction/scholarly--arxiv.json",
    "category": "search-data-extraction"
  },
  "searxng-search": {
    "path": "search-data-extraction/searxng-search.json",
    "category": "search-data-extraction"
  },
  "gemini-deepsearch-mcp": {
    "path": "search-data-extraction/gemini-deepsearch-mcp.json",
    "category": "search-data-extraction"
  },
  "markdown-web-crawl": {
    "path": "search-data-extraction/markdown-web-crawl.json",
    "category": "search-data-extraction"
  },
  "jina-ai-mcp-server": {
    "path": "search-data-extraction/jina-ai-mcp-server.json",
    "category": "search-data-extraction"
  },
  "@cablate/mcp-doc-forge": {
    "path": "search-data-extraction/cablate-mcp-doc-forge.json",
    "category": "search-data-extraction"
  },
  "pubmed-mcp-server": {
    "path": "search-data-extraction/pubmed-mcp-server.json",
    "category": "search-data-extraction"
  },
  "pubmedmcp": {
    "path": "search-data-extraction/pubmedmcp.json",
    "category": "search-data-extraction"
  },
  "uniquity-mcp": {
    "path": "search-data-extraction/uniquity-mcp.json",
    "category": "search-data-extraction"
  },
  "elastic-semantic-search": {
    "path": "search-data-extraction/elastic-semantic-search.json",
    "category": "search-data-extraction"
  },
  "@ashdev/discourse-mcp-server": {
    "path": "search-data-extraction/ashdev-discourse-mcp-server.json",
    "category": "search-data-extraction"
  },
  "openai-websearch-mcp": {
    "path": "search-data-extraction/openai-websearch-mcp.json",
    "category": "search-data-extraction"
  },
  "@arabold/docs-mcp-server": {
    "path": "search-data-extraction/arabold-docs-mcp-server.json",
    "category": "search-data-extraction"
  },
  "mcp-server-docy": {
    "path": "search-data-extraction/mcp-server-docy.json",
    "category": "search-data-extraction"
  },
  "@mcptools/mcp-tavily": {
    "path": "search-data-extraction/mcptools-mcp-tavily.json",
    "category": "search-data-extraction"
  },
  "biorxiv": {
    "path": "search-data-extraction/biorxiv.json",
    "category": "search-data-extraction"
  },
  "hugging-face-hub-search": {
    "path": "search-data-extraction/hugging-face-hub-search.json",
    "category": "search-data-extraction"
  },
  "youtube-transcript": {
    "path": "search-data-extraction/youtube-transcript.json",
    "category": "search-data-extraction"
  },
  "docs-scraper": {
    "path": "search-data-extraction/docs-scraper.json",
    "category": "search-data-extraction"
  },
  "naver-search": {
    "path": "search-data-extraction/naver-search.json",
    "category": "search-data-extraction"
  },
  "bing-search": {
    "path": "search-data-extraction/bing-search.json",
    "category": "search-data-extraction"
  },
  "gnews": {
    "path": "search-data-extraction/gnews.json",
    "category": "search-data-extraction"
  },
  "@adenot/mcp-google-search": {
    "path": "search-data-extraction/adenot-mcp-google-search.json",
    "category": "search-data-extraction"
  },
  "@just-every/mcp-read-website-fast": {
    "path": "search-data-extraction/just-every-mcp-read-website-fast.json",
    "category": "search-data-extraction"
  },
  "backlinks-mcp": {
    "path": "search-data-extraction/backlinks-mcp.json",
    "category": "search-data-extraction"
  },
  "g-search-mcp": {
    "path": "search-data-extraction/g-search-mcp.json",
    "category": "search-data-extraction"
  },
  "document-crawler-&-search": {
    "path": "search-data-extraction/document-crawler---search.json",
    "category": "search-data-extraction"
  },
  "mcp-server-gsc": {
    "path": "search-data-extraction/mcp-server-gsc.json",
    "category": "search-data-extraction"
  },
  "solr-vector-search": {
    "path": "search-data-extraction/solr-vector-search.json",
    "category": "search-data-extraction"
  },
  "jina-ai-web-search": {
    "path": "search-data-extraction/jina-ai-web-search.json",
    "category": "search-data-extraction"
  },
  "@mcp-server/google-search-mcp": {
    "path": "search-data-extraction/mcp-server-google-search-mcp.json",
    "category": "search-data-extraction"
  },
  "typesense": {
    "path": "search-data-extraction/typesense.json",
    "category": "search-data-extraction"
  },
  "pubmed-medical-literature-research": {
    "path": "search-data-extraction/pubmed-medical-literature-research.json",
    "category": "search-data-extraction"
  },
  "perplexity": {
    "path": "search-data-extraction/perplexity.json",
    "category": "search-data-extraction"
  },
  "@brightdata/mcp": {
    "path": "search-data-extraction/brightdata-mcp.json",
    "category": "search-data-extraction"
  },
  "pdf-reader": {
    "path": "search-data-extraction/pdf-reader.json",
    "category": "search-data-extraction"
  },
  "mcp-maigret": {
    "path": "search-data-extraction/mcp-maigret.json",
    "category": "search-data-extraction"
  },
  "Graphlit": {
    "path": "search-data-extraction/graphlit-mcp-server.json",
    "category": "search-data-extraction"
  },
  "duckduckgo-web-search": {
    "path": "search-data-extraction/duckduckgo-web-search.json",
    "category": "search-data-extraction"
  },
  "web3-career": {
    "path": "search-data-extraction/web3-career.json",
    "category": "search-data-extraction"
  },
  "@search-intent/mcp": {
    "path": "search-data-extraction/search-intent-mcp.json",
    "category": "search-data-extraction"
  },
  "linkd-mcp": {
    "path": "search-data-extraction/linkd-mcp.json",
    "category": "search-data-extraction"
  },
  "folo-mcp": {
    "path": "search-data-extraction/folo-mcp.json",
    "category": "search-data-extraction"
  },
  "web-search-and-semantic-similarity": {
    "path": "search-data-extraction/web-search-and-semantic-similarity.json",
    "category": "search-data-extraction"
  },
  "arxiv-mcp-server": {
    "path": "search-data-extraction/arxiv-mcp-server.json",
    "category": "search-data-extraction"
  },
  "mcp-server-dumplingai": {
    "path": "search-data-extraction/mcp-server-dumplingai.json",
    "category": "search-data-extraction"
  },
  "meilisearch": {
    "path": "search-data-extraction/meilisearch.json",
    "category": "search-data-extraction"
  },
  "npm-search-mcp-server": {
    "path": "search-data-extraction/npm-search-mcp-server.json",
    "category": "search-data-extraction"
  },
  "gpt-researcher": {
    "path": "search-data-extraction/gpt-researcher.json",
    "category": "search-data-extraction"
  },
  "mcp-grep": {
    "path": "search-data-extraction/mcp-grep.json",
    "category": "search-data-extraction"
  },
  "@humansean/mcp-bocha": {
    "path": "search-data-extraction/humansean-mcp-bocha.json",
    "category": "search-data-extraction"
  },
  "systemprompt-mcp-reddit": {
    "path": "search-data-extraction/systemprompt-mcp-reddit.json",
    "category": "search-data-extraction"
  },
  "@cyanheads/pubmed-mcp-server": {
    "path": "search-data-extraction/cyanheads-pubmed-mcp-server.json",
    "category": "search-data-extraction"
  },
  "baidu-mcp-server": {
    "path": "search-data-extraction/baidu-mcp-server.json",
    "category": "search-data-extraction"
  },
  "@kazuph/mcp-pocket": {
    "path": "search-data-extraction/kazuph-mcp-pocket.json",
    "category": "search-data-extraction"
  },
  "kagi-search": {
    "path": "search-data-extraction/kagi-search.json",
    "category": "search-data-extraction"
  },
  "ai-agent-marketplace-index": {
    "path": "search-data-extraction/ai-agent-marketplace-index.json",
    "category": "search-data-extraction"
  },
  "web-search": {
    "path": "search-data-extraction/web-search.json",
    "category": "search-data-extraction"
  },
  "bocha-search": {
    "path": "search-data-extraction/bocha-search.json",
    "category": "search-data-extraction"
  },
  "qdrant-with-openai-embeddings": {
    "path": "search-data-extraction/qdrant-with-openai-embeddings.json",
    "category": "search-data-extraction"
  },
  "youtube-data-mcp-server": {
    "path": "search-data-extraction/youtube-data-mcp-server.json",
    "category": "search-data-extraction"
  },
  "mcp-server-reddit": {
    "path": "search-data-extraction/mcp-server-reddit.json",
    "category": "search-data-extraction"
  },
  "orion-vision-mcp": {
    "path": "search-data-extraction/orion-vision-mcp.json",
    "category": "search-data-extraction"
  },
  "youtube-dlp-server": {
    "path": "search-data-extraction/youtube-dlp-server.json",
    "category": "search-data-extraction"
  },
  "academic-author-network": {
    "path": "search-data-extraction/academic-author-network.json",
    "category": "search-data-extraction"
  },
  "@hannesrudolph/mcp-ragdocs": {
    "path": "search-data-extraction/hannesrudolph-mcp-ragdocs.json",
    "category": "search-data-extraction"
  },
  "@anyproto/anytype-mcp": {
    "path": "search-data-extraction/anyproto-anytype-mcp.json",
    "category": "search-data-extraction"
  },
  "crawl4ai-rag": {
    "path": "search-data-extraction/crawl4ai-rag.json",
    "category": "search-data-extraction"
  },
  "@deventerprisesoftware/scrapi-mcp": {
    "path": "search-data-extraction/deventerprisesoftware-scrapi-mcp.json",
    "category": "search-data-extraction"
  },
  "YouTube Transcript": {
    "path": "search-data-extraction/kimtaeyoon83-mcp-server-youtube-transcript.json",
    "category": "search-data-extraction"
  },
  "server-moz-readability": {
    "path": "search-data-extraction/server-moz-readability.json",
    "category": "search-data-extraction"
  },
  "search-engines-proxy": {
    "path": "search-data-extraction/search-engines-proxy.json",
    "category": "search-data-extraction"
  },
  "news-mcp-server": {
    "path": "search-data-extraction/news-mcp-server.json",
    "category": "search-data-extraction"
  },
  "writer-blog-search-(substack-&-medium)": {
    "path": "search-data-extraction/writer-blog-search--substack---medium.json",
    "category": "search-data-extraction"
  },
  "bing-webmaster-tools": {
    "path": "search-data-extraction/bing-webmaster-tools.json",
    "category": "search-data-extraction"
  },
  "kv-extractor-mcp-server": {
    "path": "search-data-extraction/kv-extractor-mcp-server.json",
    "category": "search-data-extraction"
  },
  "twikit": {
    "path": "search-data-extraction/twikit.json",
    "category": "search-data-extraction"
  },
  "better-fetch-mcp": {
    "path": "search-data-extraction/better-fetch-mcp.json",
    "category": "search-data-extraction"
  },
  "mcp-web-content-pick": {
    "path": "search-data-extraction/mcp-web-content-pick.json",
    "category": "search-data-extraction"
  },
  "doc-scraper-(jina.ai)": {
    "path": "search-data-extraction/doc-scraper--jina-ai.json",
    "category": "search-data-extraction"
  },
  "ddg-mcp-server": {
    "path": "search-data-extraction/ddg-mcp-server.json",
    "category": "search-data-extraction"
  },
  "crawlab": {
    "path": "search-data-extraction/crawlab.json",
    "category": "search-data-extraction"
  },
  "serper-search": {
    "path": "search-data-extraction/serper-search.json",
    "category": "search-data-extraction"
  },
  "@kazuph/mcp-youtube": {
    "path": "search-data-extraction/kazuph-mcp-youtube.json",
    "category": "search-data-extraction"
  },
  "twitter": {
    "path": "search-data-extraction/twitter.json",
    "category": "search-data-extraction"
  },
  "insightslibrary": {
    "path": "search-data-extraction/insightslibrary.json",
    "category": "search-data-extraction"
  },
  "hippycampus-(openapi-tools)": {
    "path": "search-data-extraction/hippycampus--openapi-tools.json",
    "category": "search-data-extraction"
  },
  "readability-(fetch-&-parse)": {
    "path": "search-data-extraction/readability--fetch---parse.json",
    "category": "search-data-extraction"
  },
  "tavily-extract": {
    "path": "search-data-extraction/tavily-extract.json",
    "category": "search-data-extraction"
  },
  "@kevinwatt/yt-dlp-mcp": {
    "path": "search-data-extraction/kevinwatt-yt-dlp-mcp.json",
    "category": "search-data-extraction"
  },
  "youtube-transcripts": {
    "path": "search-data-extraction/youtube-transcripts.json",
    "category": "search-data-extraction"
  },
  "@kevinwatt/mcp-server-searxng": {
    "path": "search-data-extraction/kevinwatt-mcp-server-searxng.json",
    "category": "search-data-extraction"
  },
  "ebay": {
    "path": "search-data-extraction/ebay.json",
    "category": "search-data-extraction"
  },
  "exa-mcp": {
    "path": "search-data-extraction/exa-mcp.json",
    "category": "search-data-extraction"
  },
  "document-processing-and-youtube-content-extraction": {
    "path": "search-data-extraction/document-processing-and-youtube-content-extraction.json",
    "category": "search-data-extraction"
  },
  "documentation-search": {
    "path": "search-data-extraction/documentation-search.json",
    "category": "search-data-extraction"
  },
  "outscraper": {
    "path": "search-data-extraction/outscraper.json",
    "category": "search-data-extraction"
  },
  "dappier-(real-time-data-search)": {
    "path": "search-data-extraction/dappier--real-time-data-search.json",
    "category": "search-data-extraction"
  },
  "@xiaohui-wang/mcpadvisor": {
    "path": "search-data-extraction/xiaohui-wang-mcpadvisor.json",
    "category": "search-data-extraction"
  },
  "ast-grep": {
    "path": "search-data-extraction/ast-grep.json",
    "category": "search-data-extraction"
  },
  "awslabs.aws-documentation-mcp-server": {
    "path": "search-data-extraction/awslabs-aws-documentation-mcp-server.json",
    "category": "search-data-extraction"
  },
  "serper-mcp-server": {
    "path": "search-data-extraction/serper-mcp-server.json",
    "category": "search-data-extraction"
  },
  "pubmed-search": {
    "path": "search-data-extraction/pubmed-search.json",
    "category": "search-data-extraction"
  },
  "docfork": {
    "path": "search-data-extraction/docfork.json",
    "category": "search-data-extraction"
  },
  "mcp_rss": {
    "path": "search-data-extraction/mcp_rss.json",
    "category": "search-data-extraction"
  },
  "YouTube Subtitles": {
    "path": "search-data-extraction/anaisbetts-mcp-youtube.json",
    "category": "search-data-extraction"
  },
  "twitter-noauth": {
    "path": "search-data-extraction/twitter-noauth.json",
    "category": "search-data-extraction"
  },
  "zeek": {
    "path": "security/zeek.json",
    "category": "security"
  },
  "netbird": {
    "path": "security/netbird.json",
    "category": "security"
  },
  "sd-elements": {
    "path": "security/sd-elements.json",
    "category": "security"
  },
  "metasploit-framework": {
    "path": "security/metasploit-framework.json",
    "category": "security"
  },
  "@binalyze/air-mcp": {
    "path": "security/binalyze-air-mcp.json",
    "category": "security"
  },
  "roadrecon-analyzer": {
    "path": "security/roadrecon-analyzer.json",
    "category": "security"
  },
  "clamav-virus-scanner": {
    "path": "security/clamav-virus-scanner.json",
    "category": "security"
  },
  "smcp-proxy-(oidc)": {
    "path": "security/smcp-proxy--oidc.json",
    "category": "security"
  },
  "defectdojo-mcp": {
    "path": "security/defectdojo-mcp.json",
    "category": "security"
  },
  "microsoft-entra-id": {
    "path": "security/microsoft-entra-id.json",
    "category": "security"
  },
  "virustotal": {
    "path": "security/virustotal.json",
    "category": "security"
  },
  "argus": {
    "path": "security/argus.json",
    "category": "security"
  },
  "crypto": {
    "path": "security/crypto.json",
    "category": "security"
  },
  "nmap-scanner": {
    "path": "security/nmap-scanner.json",
    "category": "security"
  },
  "headless-ida-pro": {
    "path": "security/headless-ida-pro.json",
    "category": "security"
  },
  "devici": {
    "path": "security/devici.json",
    "category": "security"
  },
  "osv.dev-security-analyzer": {
    "path": "security/osv-dev-security-analyzer.json",
    "category": "security"
  },
  "kali-security-tools": {
    "path": "security/kali-security-tools.json",
    "category": "security"
  },
  "openfga": {
    "path": "security/openfga.json",
    "category": "security"
  },
  "pentest-tools": {
    "path": "security/pentest-tools.json",
    "category": "security"
  },
  "aws-ireveal": {
    "path": "security/aws-ireveal.json",
    "category": "security"
  },
  "nvd-(national-vulnerability-database)": {
    "path": "security/nvd--national-vulnerability-database.json",
    "category": "security"
  },
  "chronicle-security-operations": {
    "path": "security/chronicle-security-operations.json",
    "category": "security"
  },
  "keycloak-model-context-protocol": {
    "path": "security/keycloak-model-context-protocol.json",
    "category": "security"
  },
  "nmap-network-scanner": {
    "path": "security/nmap-network-scanner.json",
    "category": "security"
  },
  "enkryptai": {
    "path": "security/enkryptai.json",
    "category": "security"
  },
  "osint-toolkit": {
    "path": "security/osint-toolkit.json",
    "category": "security"
  },
  "isms": {
    "path": "security/isms.json",
    "category": "security"
  },
  "lanalyzer": {
    "path": "security/lanalyzer.json",
    "category": "security"
  },
  "joern-(code-analysis)": {
    "path": "security/joern--code-analysis.json",
    "category": "security"
  },
  "hydra-penetration-testing-toolkit": {
    "path": "security/hydra-penetration-testing-toolkit.json",
    "category": "security"
  },
  "command-security-layer": {
    "path": "security/command-security-layer.json",
    "category": "security"
  },
  "1password": {
    "path": "security/1password.json",
    "category": "security"
  },
  "triagemcp-(pe-file-analysis)": {
    "path": "security/triagemcp--pe-file-analysis.json",
    "category": "security"
  },
  "mcp-server-esa": {
    "path": "security/mcp-server-esa.json",
    "category": "security"
  },
  "@burtthecoder/mcp-virustotal": {
    "path": "security/burtthecoder-mcp-virustotal.json",
    "category": "security"
  },
  "codeql": {
    "path": "security/codeql.json",
    "category": "security"
  },
  "pfsense": {
    "path": "security/pfsense.json",
    "category": "security"
  },
  "@clerk/agent-toolkit": {
    "path": "security/clerk-agent-toolkit.json",
    "category": "security"
  },
  "keyfactor-command": {
    "path": "security/keyfactor-command.json",
    "category": "security"
  },
  "@infisical/mcp": {
    "path": "security/infisical-mcp.json",
    "category": "security"
  },
  "microsoft-sentinel": {
    "path": "security/microsoft-sentinel.json",
    "category": "security"
  },
  "offensive-security-toolkit": {
    "path": "security/offensive-security-toolkit.json",
    "category": "security"
  },
  "windows-security-hardening": {
    "path": "security/windows-security-hardening.json",
    "category": "security"
  },
  "authenticator-mcp": {
    "path": "security/authenticator-mcp.json",
    "category": "security"
  },
  "@auth0/auth0-mcp-server": {
    "path": "security/auth0-auth0-mcp-server.json",
    "category": "security"
  },
  "volatility-3-memory-forensics": {
    "path": "security/volatility-3-memory-forensics.json",
    "category": "security"
  },
  "@burtthecoder/mcp-dnstwist": {
    "path": "security/burtthecoder-mcp-dnstwist.json",
    "category": "security"
  },
  "microsoft-security-copilot": {
    "path": "security/microsoft-security-copilot.json",
    "category": "security"
  },
  "epss-(exploit-prediction-scoring-system)": {
    "path": "security/epss--exploit-prediction-scoring-system.json",
    "category": "security"
  },
  "keycloak-mcp": {
    "path": "security/keycloak-mcp.json",
    "category": "security"
  },
  "vulnerability-intelligence": {
    "path": "security/vulnerability-intelligence.json",
    "category": "security"
  },
  "baidu-content-safety": {
    "path": "security/baidu-content-safety.json",
    "category": "security"
  },
  "aws-security-inspector": {
    "path": "security/aws-security-inspector.json",
    "category": "security"
  },
  "@burtthecoder/mcp-shodan": {
    "path": "security/burtthecoder-mcp-shodan.json",
    "category": "security"
  },
  "illumio": {
    "path": "security/illumio.json",
    "category": "security"
  },
  "mcp-security-audit": {
    "path": "security/mcp-security-audit.json",
    "category": "security"
  },
  "cisco-ise": {
    "path": "security/cisco-ise.json",
    "category": "security"
  },
  "nhl": {
    "path": "sports/nhl.json",
    "category": "sports"
  },
  "spurs-blog-(pounding-the-rock)": {
    "path": "sports/spurs-blog--pounding-the-rock.json",
    "category": "sports"
  },
  "the-odds-api": {
    "path": "sports/the-odds-api.json",
    "category": "sports"
  },
  "college-football-data": {
    "path": "sports/college-football-data.json",
    "category": "sports"
  },
  "strava": {
    "path": "sports/strava.json",
    "category": "sports"
  },
  "harvest-mcp-server-setup": {
    "path": "support-service-management/harvest-mcp-server-setup.json",
    "category": "support-service-management"
  },
  "hh-jira-mcp-server": {
    "path": "support-service-management/hh-jira-mcp-server.json",
    "category": "support-service-management"
  },
  "connectwise-manage-api": {
    "path": "support-service-management/connectwise-manage-api.json",
    "category": "support-service-management"
  },
  "@mcp-devtools/jira": {
    "path": "support-service-management/mcp-devtools-jira.json",
    "category": "support-service-management"
  },
  "advocu-mcp-server": {
    "path": "support-service-management/advocu-mcp-server.json",
    "category": "support-service-management"
  },
  "jira": {
    "path": "support-service-management/jira.json",
    "category": "support-service-management"
  },
  "@aashari/mcp-server-atlassian-confluence": {
    "path": "support-service-management/aashari-mcp-server-atlassian-confluence.json",
    "category": "support-service-management"
  },
  "godspeed-mcp": {
    "path": "support-service-management/godspeed-mcp.json",
    "category": "support-service-management"
  },
  "devrev-mcp": {
    "path": "support-service-management/devrev-mcp.json",
    "category": "support-service-management"
  },
  "teamretro-mcp-server": {
    "path": "support-service-management/teamretro-mcp-server.json",
    "category": "support-service-management"
  },
  "freshservice-mcp": {
    "path": "support-service-management/freshservice-mcp.json",
    "category": "support-service-management"
  },
  "jira-mcp": {
    "path": "support-service-management/jira-mcp.json",
    "category": "support-service-management"
  },
  "devrev": {
    "path": "support-service-management/devrev.json",
    "category": "support-service-management"
  },
  "freshdesk-mcp": {
    "path": "support-service-management/freshdesk-mcp.json",
    "category": "support-service-management"
  },
  "@cristip73/mcp-server-asana": {
    "path": "support-service-management/cristip73-mcp-server-asana.json",
    "category": "support-service-management"
  },
  "linear": {
    "path": "support-service-management/linear.json",
    "category": "support-service-management"
  },
  "@keegancsmith/linear-issues-mcp-server": {
    "path": "support-service-management/keegancsmith-linear-issues-mcp-server.json",
    "category": "support-service-management"
  },
  "lingo.dev": {
    "path": "translation-services/lingo-dev.json",
    "category": "translation-services"
  },
  "translator-ai": {
    "path": "translation-services/translator-ai.json",
    "category": "translation-services"
  },
  "deepl-mcp-server": {
    "path": "translation-services/deepl-mcp-server.json",
    "category": "translation-services"
  },
  "youtube-translate": {
    "path": "translation-services/youtube-translate.json",
    "category": "translation-services"
  },
  "hong-kong-bus": {
    "path": "travel-transportation/hong-kong-bus.json",
    "category": "travel-transportation"
  },
  "12306-mcp": {
    "path": "travel-transportation/12306-mcp.json",
    "category": "travel-transportation"
  },
  "georgia-511": {
    "path": "travel-transportation/georgia-511.json",
    "category": "travel-transportation"
  },
  "caltrain-mcp": {
    "path": "travel-transportation/caltrain-mcp.json",
    "category": "travel-transportation"
  },
  "@gongrzhe/server-travelplanner-mcp": {
    "path": "travel-transportation/gongrzhe-server-travelplanner-mcp.json",
    "category": "travel-transportation"
  },
  "sncf-train-journey-planner": {
    "path": "travel-transportation/sncf-train-journey-planner.json",
    "category": "travel-transportation"
  },
  "hkopenai.hk_transportation_mcp_server": {
    "path": "travel-transportation/hkopenai-hk_transportation_mcp_server.json",
    "category": "travel-transportation"
  },
  "uber-eats": {
    "path": "travel-transportation/uber-eats.json",
    "category": "travel-transportation"
  },
  "transport-nsw": {
    "path": "travel-transportation/transport-nsw.json",
    "category": "travel-transportation"
  },
  "tripadvisor-vacation-planner": {
    "path": "travel-transportation/tripadvisor-vacation-planner.json",
    "category": "travel-transportation"
  },
  "git-mcp": {
    "path": "version-control/git-mcp.json",
    "category": "version-control"
  },
  "github-agentic-chat": {
    "path": "version-control/github-agentic-chat.json",
    "category": "version-control"
  },
  "@harshmaur/gitlab-mcp": {
    "path": "version-control/harshmaur-gitlab-mcp.json",
    "category": "version-control"
  },
  "github-chat-mcp": {
    "path": "version-control/github-chat-mcp.json",
    "category": "version-control"
  },
  "github-repos-manager-mcp": {
    "path": "version-control/github-repos-manager-mcp.json",
    "category": "version-control"
  },
  "git-commands-mcp": {
    "path": "version-control/git-commands-mcp.json",
    "category": "version-control"
  },
  "@nexus2520/bitbucket-mcp-server": {
    "path": "version-control/nexus2520-bitbucket-mcp-server.json",
    "category": "version-control"
  },
  "gitlab-code-review": {
    "path": "version-control/gitlab-code-review.json",
    "category": "version-control"
  },
  "github-repository-inspector": {
    "path": "version-control/github-repository-inspector.json",
    "category": "version-control"
  },
  "bitbucket": {
    "path": "version-control/bitbucket.json",
    "category": "version-control"
  },
  "GitLab": {
    "path": "version-control/modelcontextprotocol-server-gitlab.json",
    "category": "version-control"
  },
  "git-pr-description-generator": {
    "path": "version-control/git-pr-description-generator.json",
    "category": "version-control"
  },
  "gerrit-code-review": {
    "path": "version-control/gerrit-code-review.json",
    "category": "version-control"
  },
  "git-summary": {
    "path": "version-control/git-summary.json",
    "category": "version-control"
  },
  "gitlab-mr-confluence-linker": {
    "path": "version-control/gitlab-mr-confluence-linker.json",
    "category": "version-control"
  },
  "mcp-github-projects": {
    "path": "version-control/mcp-github-projects.json",
    "category": "version-control"
  },
  "git-ingest": {
    "path": "version-control/git-ingest.json",
    "category": "version-control"
  },
  "@aashari/mcp-server-atlassian-bitbucket": {
    "path": "version-control/aashari-mcp-server-atlassian-bitbucket.json",
    "category": "version-control"
  },
  "mcp-git-commit-aider": {
    "path": "version-control/mcp-git-commit-aider.json",
    "category": "version-control"
  },
  "pygithub": {
    "path": "version-control/pygithub.json",
    "category": "version-control"
  },
  "flux-gitops": {
    "path": "version-control/flux-gitops.json",
    "category": "version-control"
  },
  "github-explorer": {
    "path": "version-control/github-explorer.json",
    "category": "version-control"
  },
  "github": {
    "path": "version-control/github.json",
    "category": "version-control"
  },
  "git": {
    "path": "version-control/git.json",
    "category": "version-control"
  },
  "@kazuph/mcp-github-pera1": {
    "path": "version-control/kazuph-mcp-github-pera1.json",
    "category": "version-control"
  },
  "test-mcp": {
    "path": "version-control/test-mcp.json",
    "category": "version-control"
  },
  "openscad-3d-model-generator": {
    "path": "other-tools-and-integrations/openscad-3d-model-generator.json",
    "category": "other-tools-and-integrations"
  },
  "mathematica-docs": {
    "path": "other-tools-and-integrations/mathematica-docs.json",
    "category": "other-tools-and-integrations"
  },
  "allure-test-reports": {
    "path": "other-tools-and-integrations/allure-test-reports.json",
    "category": "other-tools-and-integrations"
  },
  "image-processor": {
    "path": "other-tools-and-integrations/image-processor.json",
    "category": "other-tools-and-integrations"
  },
  "ms-word": {
    "path": "other-tools-and-integrations/ms-word.json",
    "category": "other-tools-and-integrations"
  },
  "ntlk-mcp-002": {
    "path": "other-tools-and-integrations/ntlk-mcp-002.json",
    "category": "other-tools-and-integrations"
  },
  "@landicefu/divide-and-conquer-mcp-server": {
    "path": "other-tools-and-integrations/landicefu-divide-and-conquer-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "grok2-image-mcp-server": {
    "path": "other-tools-and-integrations/grok2-image-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "pox-sdn-controller": {
    "path": "other-tools-and-integrations/pox-sdn-controller.json",
    "category": "other-tools-and-integrations"
  },
  "@kajirita2002/esa-mcp-server": {
    "path": "other-tools-and-integrations/kajirita2002-esa-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "genkitx-mcp": {
    "path": "other-tools-and-integrations/genkitx-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "heygen-mcp": {
    "path": "other-tools-and-integrations/heygen-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "vllm-benchmark": {
    "path": "other-tools-and-integrations/vllm-benchmark.json",
    "category": "other-tools-and-integrations"
  },
  "any-openapi": {
    "path": "other-tools-and-integrations/any-openapi.json",
    "category": "other-tools-and-integrations"
  },
  "rhino3d": {
    "path": "other-tools-and-integrations/rhino3d.json",
    "category": "other-tools-and-integrations"
  },
  "rhino-8": {
    "path": "other-tools-and-integrations/rhino-8.json",
    "category": "other-tools-and-integrations"
  },
  "@wenbopan/things-mcp": {
    "path": "other-tools-and-integrations/wenbopan-things-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "say-(text-to-speech)": {
    "path": "other-tools-and-integrations/say--text-to-speech.json",
    "category": "other-tools-and-integrations"
  },
  "sound-mcp": {
    "path": "other-tools-and-integrations/sound-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "yolo-computer-vision": {
    "path": "other-tools-and-integrations/yolo-computer-vision.json",
    "category": "other-tools-and-integrations"
  },
  "meta-mcp-server": {
    "path": "other-tools-and-integrations/meta-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "tagesschau": {
    "path": "other-tools-and-integrations/tagesschau.json",
    "category": "other-tools-and-integrations"
  },
  "microcms-mcp-server": {
    "path": "other-tools-and-integrations/microcms-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "@41px/mcp-xmind": {
    "path": "other-tools-and-integrations/41px-mcp-xmind.json",
    "category": "other-tools-and-integrations"
  },
  "video-editor-mcp": {
    "path": "other-tools-and-integrations/video-editor-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "linkedin-mcp": {
    "path": "other-tools-and-integrations/linkedin-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "sherlock-mcp": {
    "path": "other-tools-and-integrations/sherlock-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@kajdep/mcp-fixer": {
    "path": "other-tools-and-integrations/kajdep-mcp-fixer.json",
    "category": "other-tools-and-integrations"
  },
  "tku-academic-systems-(tronclass-&-tku-ilife)": {
    "path": "other-tools-and-integrations/tku-academic-systems--tronclass---tku-ilife.json",
    "category": "other-tools-and-integrations"
  },
  "spiral-writer": {
    "path": "other-tools-and-integrations/spiral-writer.json",
    "category": "other-tools-and-integrations"
  },
  "@jwalsh/mcp-server-qrcode": {
    "path": "other-tools-and-integrations/jwalsh-mcp-server-qrcode.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-diceroll": {
    "path": "other-tools-and-integrations/mcp-server-diceroll.json",
    "category": "other-tools-and-integrations"
  },
  "crewai-enterprise": {
    "path": "other-tools-and-integrations/crewai-enterprise.json",
    "category": "other-tools-and-integrations"
  },
  "goalstory-mcp": {
    "path": "other-tools-and-integrations/goalstory-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-actor-critic-thinking": {
    "path": "other-tools-and-integrations/mcp-server-actor-critic-thinking.json",
    "category": "other-tools-and-integrations"
  },
  "dicom": {
    "path": "other-tools-and-integrations/dicom.json",
    "category": "other-tools-and-integrations"
  },
  "notion-todo": {
    "path": "other-tools-and-integrations/notion-todo.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-mas-sequential-thinking": {
    "path": "other-tools-and-integrations/mcp-server-mas-sequential-thinking.json",
    "category": "other-tools-and-integrations"
  },
  "fastn": {
    "path": "other-tools-and-integrations/fastn.json",
    "category": "other-tools-and-integrations"
  },
  "shopify-mcp-server": {
    "path": "other-tools-and-integrations/shopify-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "Chargebee": {
    "path": "other-tools-and-integrations/chargebee-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "my-mcp-server": {
    "path": "other-tools-and-integrations/my-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-zotero": {
    "path": "other-tools-and-integrations/mcp-zotero.json",
    "category": "other-tools-and-integrations"
  },
  "cursor-rules-mcp": {
    "path": "other-tools-and-integrations/cursor-rules-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "sandbox-fusion": {
    "path": "other-tools-and-integrations/sandbox-fusion.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-applemusic": {
    "path": "other-tools-and-integrations/mcp-applemusic.json",
    "category": "other-tools-and-integrations"
  },
  "chatgpt-responses": {
    "path": "other-tools-and-integrations/chatgpt-responses.json",
    "category": "other-tools-and-integrations"
  },
  "ticktick": {
    "path": "other-tools-and-integrations/ticktick.json",
    "category": "other-tools-and-integrations"
  },
  "mochi-flashcards": {
    "path": "other-tools-and-integrations/mochi-flashcards.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-starter": {
    "path": "other-tools-and-integrations/mcp-starter.json",
    "category": "other-tools-and-integrations"
  },
  "dart-mcp-server": {
    "path": "other-tools-and-integrations/dart-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "@greirson/mcp-todoist": {
    "path": "other-tools-and-integrations/greirson-mcp-todoist.json",
    "category": "other-tools-and-integrations"
  },
  "@cyanheads/toolkit-mcp-server": {
    "path": "other-tools-and-integrations/cyanheads-toolkit-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "hirebase-mcp": {
    "path": "other-tools-and-integrations/hirebase-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "cheerlights": {
    "path": "other-tools-and-integrations/cheerlights.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-serverman": {
    "path": "other-tools-and-integrations/mcp-serverman.json",
    "category": "other-tools-and-integrations"
  },
  "blog-publisher": {
    "path": "other-tools-and-integrations/blog-publisher.json",
    "category": "other-tools-and-integrations"
  },
  "ttaat": {
    "path": "other-tools-and-integrations/ttaat.json",
    "category": "other-tools-and-integrations"
  },
  "todoist": {
    "path": "other-tools-and-integrations/todoist.json",
    "category": "other-tools-and-integrations"
  },
  "bilibili": {
    "path": "other-tools-and-integrations/bilibili.json",
    "category": "other-tools-and-integrations"
  },
  "tuya-mcp-server": {
    "path": "other-tools-and-integrations/tuya-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "things-app": {
    "path": "other-tools-and-integrations/things-app.json",
    "category": "other-tools-and-integrations"
  },
  "onos": {
    "path": "other-tools-and-integrations/onos.json",
    "category": "other-tools-and-integrations"
  },
  "chain-of-thought": {
    "path": "other-tools-and-integrations/chain-of-thought.json",
    "category": "other-tools-and-integrations"
  },
  "@inkdropapp/mcp-server": {
    "path": "other-tools-and-integrations/inkdropapp-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "pdf-to-markdown-converter": {
    "path": "other-tools-and-integrations/pdf-to-markdown-converter.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-sys-bridge": {
    "path": "other-tools-and-integrations/mcp-sys-bridge.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-replicate": {
    "path": "other-tools-and-integrations/mcp-server-replicate.json",
    "category": "other-tools-and-integrations"
  },
  "spring-i/o": {
    "path": "other-tools-and-integrations/spring-i-o.json",
    "category": "other-tools-and-integrations"
  },
  "contentstack-brandkit": {
    "path": "other-tools-and-integrations/contentstack-brandkit.json",
    "category": "other-tools-and-integrations"
  },
  "esignatures": {
    "path": "other-tools-and-integrations/esignatures.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-think-tool": {
    "path": "other-tools-and-integrations/mcp-think-tool.json",
    "category": "other-tools-and-integrations"
  },
  "audio-transcriber": {
    "path": "other-tools-and-integrations/audio-transcriber.json",
    "category": "other-tools-and-integrations"
  },
  "soundcloud-downloader": {
    "path": "other-tools-and-integrations/soundcloud-downloader.json",
    "category": "other-tools-and-integrations"
  },
  "bayesian-monte-carlo-tree-search": {
    "path": "other-tools-and-integrations/bayesian-monte-carlo-tree-search.json",
    "category": "other-tools-and-integrations"
  },
  "google-forms": {
    "path": "other-tools-and-integrations/google-forms.json",
    "category": "other-tools-and-integrations"
  },
  "diff-mcp": {
    "path": "other-tools-and-integrations/diff-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "wordpress": {
    "path": "other-tools-and-integrations/wordpress.json",
    "category": "other-tools-and-integrations"
  },
  "fashion-recommendation-system": {
    "path": "other-tools-and-integrations/fashion-recommendation-system.json",
    "category": "other-tools-and-integrations"
  },
  "mcp4gql": {
    "path": "other-tools-and-integrations/mcp4gql.json",
    "category": "other-tools-and-integrations"
  },
  "short-video-maker": {
    "path": "other-tools-and-integrations/short-video-maker.json",
    "category": "other-tools-and-integrations"
  },
  "confluence-chat": {
    "path": "other-tools-and-integrations/confluence-chat.json",
    "category": "other-tools-and-integrations"
  },
  "bonsai-bim-(blender-ifc)": {
    "path": "other-tools-and-integrations/bonsai-bim--blender-ifc.json",
    "category": "other-tools-and-integrations"
  },
  "raindrop.io": {
    "path": "other-tools-and-integrations/raindrop-io.json",
    "category": "other-tools-and-integrations"
  },
  "crewai-workflow": {
    "path": "other-tools-and-integrations/crewai-workflow.json",
    "category": "other-tools-and-integrations"
  },
  "iflytek-workflow": {
    "path": "other-tools-and-integrations/iflytek-workflow.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-summarization-functions": {
    "path": "other-tools-and-integrations/mcp-summarization-functions.json",
    "category": "other-tools-and-integrations"
  },
  "jexchange-mcp-server": {
    "path": "other-tools-and-integrations/jexchange-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "fiberflow-mcp-gateway": {
    "path": "other-tools-and-integrations/fiberflow-mcp-gateway.json",
    "category": "other-tools-and-integrations"
  },
  "clinicaltrialsgov-mcp-server": {
    "path": "other-tools-and-integrations/clinicaltrialsgov-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "audio-player": {
    "path": "other-tools-and-integrations/audio-player.json",
    "category": "other-tools-and-integrations"
  },
  "hr-policy-chatbot": {
    "path": "other-tools-and-integrations/hr-policy-chatbot.json",
    "category": "other-tools-and-integrations"
  },
  "n8n-mcp-server": {
    "path": "other-tools-and-integrations/n8n-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "fastmcp-todo": {
    "path": "other-tools-and-integrations/fastmcp-todo.json",
    "category": "other-tools-and-integrations"
  },
  "evolvemcp": {
    "path": "other-tools-and-integrations/evolvemcp.json",
    "category": "other-tools-and-integrations"
  },
  "meme-mcp": {
    "path": "other-tools-and-integrations/meme-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@circleci/mcp-server-circleci": {
    "path": "other-tools-and-integrations/circleci-mcp-server-circleci.json",
    "category": "other-tools-and-integrations"
  },
  "@dasheck0/face-generator": {
    "path": "other-tools-and-integrations/dasheck0-face-generator.json",
    "category": "other-tools-and-integrations"
  },
  "cort-mcp": {
    "path": "other-tools-and-integrations/cort-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "joplin": {
    "path": "other-tools-and-integrations/joplin.json",
    "category": "other-tools-and-integrations"
  },
  "@growthbook/mcp": {
    "path": "other-tools-and-integrations/growthbook-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-powerpoint": {
    "path": "other-tools-and-integrations/mcp-powerpoint.json",
    "category": "other-tools-and-integrations"
  },
  "@kevinwatt/mcp-webhook": {
    "path": "other-tools-and-integrations/kevinwatt-mcp-webhook.json",
    "category": "other-tools-and-integrations"
  },
  "email-validator": {
    "path": "other-tools-and-integrations/email-validator.json",
    "category": "other-tools-and-integrations"
  },
  "blender-open-mcp": {
    "path": "other-tools-and-integrations/blender-open-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "spotify": {
    "path": "other-tools-and-integrations/spotify.json",
    "category": "other-tools-and-integrations"
  },
  "openai-mcp": {
    "path": "other-tools-and-integrations/openai-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mcpizza-(domino's-pizza)": {
    "path": "other-tools-and-integrations/mcpizza--domino-s-pizza.json",
    "category": "other-tools-and-integrations"
  },
  "swagger": {
    "path": "other-tools-and-integrations/swagger.json",
    "category": "other-tools-and-integrations"
  },
  "@llmindset/mcp-webcam": {
    "path": "other-tools-and-integrations/llmindset-mcp-webcam.json",
    "category": "other-tools-and-integrations"
  },
  "@automation-ai-labs/mcp-wait": {
    "path": "other-tools-and-integrations/automation-ai-labs-mcp-wait.json",
    "category": "other-tools-and-integrations"
  },
  "daisys-mcp": {
    "path": "other-tools-and-integrations/daisys-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "radarr-and-sonarr": {
    "path": "other-tools-and-integrations/radarr-and-sonarr.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-chain-of-draft-server": {
    "path": "other-tools-and-integrations/mcp-chain-of-draft-server.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-simple-timeserver": {
    "path": "other-tools-and-integrations/mcp-simple-timeserver.json",
    "category": "other-tools-and-integrations"
  },
  "hackernews-api": {
    "path": "other-tools-and-integrations/hackernews-api.json",
    "category": "other-tools-and-integrations"
  },
  "ghidra": {
    "path": "other-tools-and-integrations/ghidra.json",
    "category": "other-tools-and-integrations"
  },
  "systems-modeling": {
    "path": "other-tools-and-integrations/systems-modeling.json",
    "category": "other-tools-and-integrations"
  },
  "shopify-mcp": {
    "path": "other-tools-and-integrations/shopify-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "rabbitmq": {
    "path": "other-tools-and-integrations/rabbitmq.json",
    "category": "other-tools-and-integrations"
  },
  "name-origin-predictor": {
    "path": "other-tools-and-integrations/name-origin-predictor.json",
    "category": "other-tools-and-integrations"
  },
  "chatgpt-(openai-gpt-4o)": {
    "path": "other-tools-and-integrations/chatgpt--openai-gpt-4o.json",
    "category": "other-tools-and-integrations"
  },
  "remote-bridge": {
    "path": "other-tools-and-integrations/remote-bridge.json",
    "category": "other-tools-and-integrations"
  },
  "allvoicelab-mcp": {
    "path": "other-tools-and-integrations/allvoicelab-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "odoo-mcp-improved": {
    "path": "other-tools-and-integrations/odoo-mcp-improved.json",
    "category": "other-tools-and-integrations"
  },
  "fiware-context-broker": {
    "path": "other-tools-and-integrations/fiware-context-broker.json",
    "category": "other-tools-and-integrations"
  },
  "@anaisbetts/mcp-installer": {
    "path": "other-tools-and-integrations/anaisbetts-mcp-installer.json",
    "category": "other-tools-and-integrations"
  },
  "speech-mcp": {
    "path": "other-tools-and-integrations/speech-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "jnews-mcp-server": {
    "path": "other-tools-and-integrations/jnews-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "heybeauty-mcp": {
    "path": "other-tools-and-integrations/heybeauty-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "weekly-reports": {
    "path": "other-tools-and-integrations/weekly-reports.json",
    "category": "other-tools-and-integrations"
  },
  "@k-jarzyna/mcp-miro": {
    "path": "other-tools-and-integrations/k-jarzyna-mcp-miro.json",
    "category": "other-tools-and-integrations"
  },
  "@adeze/raindrop-mcp": {
    "path": "other-tools-and-integrations/adeze-raindrop-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "reaper": {
    "path": "other-tools-and-integrations/reaper.json",
    "category": "other-tools-and-integrations"
  },
  "blender": {
    "path": "other-tools-and-integrations/blender.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-calculator": {
    "path": "other-tools-and-integrations/mcp-server-calculator.json",
    "category": "other-tools-and-integrations"
  },
  "fibery-mcp-server": {
    "path": "other-tools-and-integrations/fibery-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "shaka-packager": {
    "path": "other-tools-and-integrations/shaka-packager.json",
    "category": "other-tools-and-integrations"
  },
  "devhub-cms-mcp": {
    "path": "other-tools-and-integrations/devhub-cms-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "siliconflow-voice-transcription": {
    "path": "other-tools-and-integrations/siliconflow-voice-transcription.json",
    "category": "other-tools-and-integrations"
  },
  "rocketmq": {
    "path": "other-tools-and-integrations/rocketmq.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-birdstats": {
    "path": "other-tools-and-integrations/mcp-birdstats.json",
    "category": "other-tools-and-integrations"
  },
  "internet-speed-test": {
    "path": "other-tools-and-integrations/internet-speed-test.json",
    "category": "other-tools-and-integrations"
  },
  "canon-camera-control": {
    "path": "other-tools-and-integrations/canon-camera-control.json",
    "category": "other-tools-and-integrations"
  },
  "dicom-connectivity": {
    "path": "other-tools-and-integrations/dicom-connectivity.json",
    "category": "other-tools-and-integrations"
  },
  "amazon-bedrock-nova": {
    "path": "other-tools-and-integrations/amazon-bedrock-nova.json",
    "category": "other-tools-and-integrations"
  },
  "promptlab": {
    "path": "other-tools-and-integrations/promptlab.json",
    "category": "other-tools-and-integrations"
  },
  "notion-markdown": {
    "path": "other-tools-and-integrations/notion-markdown.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-langchain-ts-client": {
    "path": "other-tools-and-integrations/mcp-langchain-ts-client.json",
    "category": "other-tools-and-integrations"
  },
  "docling": {
    "path": "other-tools-and-integrations/docling.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-api-connect": {
    "path": "other-tools-and-integrations/mcp-api-connect.json",
    "category": "other-tools-and-integrations"
  },
  "healthcare-data-hub": {
    "path": "other-tools-and-integrations/healthcare-data-hub.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-toolbox": {
    "path": "other-tools-and-integrations/mcp-toolbox.json",
    "category": "other-tools-and-integrations"
  },
  "nsaf-(neuro-symbolic-autonomy-framework)": {
    "path": "other-tools-and-integrations/nsaf--neuro-symbolic-autonomy-framework.json",
    "category": "other-tools-and-integrations"
  },
  "casual-mcp-server-words": {
    "path": "other-tools-and-integrations/casual-mcp-server-words.json",
    "category": "other-tools-and-integrations"
  },
  "things3": {
    "path": "other-tools-and-integrations/things3.json",
    "category": "other-tools-and-integrations"
  },
  "molecule-visualization-(chimerax,-pymol)": {
    "path": "other-tools-and-integrations/molecule-visualization--chimerax--pymol.json",
    "category": "other-tools-and-integrations"
  },
  "@automattic/mcp-wordpress-remote": {
    "path": "other-tools-and-integrations/automattic-mcp-wordpress-remote.json",
    "category": "other-tools-and-integrations"
  },
  "jotai-mcp-server": {
    "path": "other-tools-and-integrations/jotai-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "sequential-story": {
    "path": "other-tools-and-integrations/sequential-story.json",
    "category": "other-tools-and-integrations"
  },
  "time": {
    "path": "other-tools-and-integrations/time.json",
    "category": "other-tools-and-integrations"
  },
  "congress.gov": {
    "path": "other-tools-and-integrations/congress-gov.json",
    "category": "other-tools-and-integrations"
  },
  "@unctad-ai/eregulations-mcp-server": {
    "path": "other-tools-and-integrations/unctad-ai-eregulations-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "@terryliyongjie/api2mcptools": {
    "path": "other-tools-and-integrations/terryliyongjie-api2mcptools.json",
    "category": "other-tools-and-integrations"
  },
  "a2a-mcp-server": {
    "path": "other-tools-and-integrations/a2a-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "canvas-student": {
    "path": "other-tools-and-integrations/canvas-student.json",
    "category": "other-tools-and-integrations"
  },
  "sequential-thinking": {
    "path": "other-tools-and-integrations/sequential-thinking.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-ipfs": {
    "path": "other-tools-and-integrations/mcp-ipfs.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server": {
    "path": "other-tools-and-integrations/mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "things-3": {
    "path": "other-tools-and-integrations/things-3.json",
    "category": "other-tools-and-integrations"
  },
  "fal.ai": {
    "path": "other-tools-and-integrations/fal-ai.json",
    "category": "other-tools-and-integrations"
  },
  "deepseek-mcp-server": {
    "path": "other-tools-and-integrations/deepseek-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "qgis": {
    "path": "other-tools-and-integrations/qgis.json",
    "category": "other-tools-and-integrations"
  },
  "@kydycode/todoist-mcp-server-ext": {
    "path": "other-tools-and-integrations/kydycode-todoist-mcp-server-ext.json",
    "category": "other-tools-and-integrations"
  },
  "bytedance-hot-news": {
    "path": "other-tools-and-integrations/bytedance-hot-news.json",
    "category": "other-tools-and-integrations"
  },
  "koi-agent-personality-network": {
    "path": "other-tools-and-integrations/koi-agent-personality-network.json",
    "category": "other-tools-and-integrations"
  },
  "@delorenj/mcp-server-ticketmaster": {
    "path": "other-tools-and-integrations/delorenj-mcp-server-ticketmaster.json",
    "category": "other-tools-and-integrations"
  },
  "ffmpeg": {
    "path": "other-tools-and-integrations/ffmpeg.json",
    "category": "other-tools-and-integrations"
  },
  "software-planning": {
    "path": "other-tools-and-integrations/software-planning.json",
    "category": "other-tools-and-integrations"
  },
  "readwise": {
    "path": "other-tools-and-integrations/readwise.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-3d-printer-server": {
    "path": "other-tools-and-integrations/mcp-3d-printer-server.json",
    "category": "other-tools-and-integrations"
  },
  "south-asia": {
    "path": "other-tools-and-integrations/south-asia.json",
    "category": "other-tools-and-integrations"
  },
  "popui": {
    "path": "other-tools-and-integrations/popui.json",
    "category": "other-tools-and-integrations"
  },
  "atla": {
    "path": "other-tools-and-integrations/atla.json",
    "category": "other-tools-and-integrations"
  },
  "agentrpc": {
    "path": "other-tools-and-integrations/agentrpc.json",
    "category": "other-tools-and-integrations"
  },
  "expose-(json-rpc-proxy)": {
    "path": "other-tools-and-integrations/expose--json-rpc-proxy.json",
    "category": "other-tools-and-integrations"
  },
  "pubmed": {
    "path": "other-tools-and-integrations/pubmed.json",
    "category": "other-tools-and-integrations"
  },
  "strapi-mcp": {
    "path": "other-tools-and-integrations/strapi-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-cook": {
    "path": "other-tools-and-integrations/mcp-cook.json",
    "category": "other-tools-and-integrations"
  },
  "employee-leave-manager": {
    "path": "other-tools-and-integrations/employee-leave-manager.json",
    "category": "other-tools-and-integrations"
  },
  "spotify-mcp": {
    "path": "other-tools-and-integrations/spotify-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "bci-mcp-(brain-computer-interface)": {
    "path": "other-tools-and-integrations/bci-mcp--brain-computer-interface.json",
    "category": "other-tools-and-integrations"
  },
  "davinci-resolve": {
    "path": "other-tools-and-integrations/davinci-resolve.json",
    "category": "other-tools-and-integrations"
  },
  "needle": {
    "path": "other-tools-and-integrations/needle.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-graphql-schema": {
    "path": "other-tools-and-integrations/mcp-graphql-schema.json",
    "category": "other-tools-and-integrations"
  },
  "voice-recorder-(whisper)": {
    "path": "other-tools-and-integrations/voice-recorder--whisper.json",
    "category": "other-tools-and-integrations"
  },
  "dan-vega-courses": {
    "path": "other-tools-and-integrations/dan-vega-courses.json",
    "category": "other-tools-and-integrations"
  },
  "findmine-mcp": {
    "path": "other-tools-and-integrations/findmine-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-openapi-schema": {
    "path": "other-tools-and-integrations/mcp-openapi-schema.json",
    "category": "other-tools-and-integrations"
  },
  "gemini": {
    "path": "other-tools-and-integrations/gemini.json",
    "category": "other-tools-and-integrations"
  },
  "llm-gateway": {
    "path": "other-tools-and-integrations/llm-gateway.json",
    "category": "other-tools-and-integrations"
  },
  "kicad": {
    "path": "other-tools-and-integrations/kicad.json",
    "category": "other-tools-and-integrations"
  },
  "deep-reasoning-mcp": {
    "path": "other-tools-and-integrations/deep-reasoning-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "ask-human-mcp": {
    "path": "other-tools-and-integrations/ask-human-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "webflow-mcp-server": {
    "path": "other-tools-and-integrations/webflow-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-taskwarrior": {
    "path": "other-tools-and-integrations/mcp-server-taskwarrior.json",
    "category": "other-tools-and-integrations"
  },
  "openapi-swagger-converter": {
    "path": "other-tools-and-integrations/openapi-swagger-converter.json",
    "category": "other-tools-and-integrations"
  },
  "eclass-(uoa)": {
    "path": "other-tools-and-integrations/eclass--uoa.json",
    "category": "other-tools-and-integrations"
  },
  "personal-health-tracker": {
    "path": "other-tools-and-integrations/personal-health-tracker.json",
    "category": "other-tools-and-integrations"
  },
  "video-editor-(ffmpeg)": {
    "path": "other-tools-and-integrations/video-editor--ffmpeg.json",
    "category": "other-tools-and-integrations"
  },
  "shopify": {
    "path": "other-tools-and-integrations/shopify.json",
    "category": "other-tools-and-integrations"
  },
  "claude-enhancements": {
    "path": "other-tools-and-integrations/claude-enhancements.json",
    "category": "other-tools-and-integrations"
  },
  "taskqueue-mcp": {
    "path": "other-tools-and-integrations/taskqueue-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "elfproxy-dynamic-ip": {
    "path": "other-tools-and-integrations/elfproxy-dynamic-ip.json",
    "category": "other-tools-and-integrations"
  },
  "birdnet-pi": {
    "path": "other-tools-and-integrations/birdnet-pi.json",
    "category": "other-tools-and-integrations"
  },
  "strateegia-mcp-server": {
    "path": "other-tools-and-integrations/strateegia-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "just-prompt-(multi-llm-provider)": {
    "path": "other-tools-and-integrations/just-prompt--multi-llm-provider.json",
    "category": "other-tools-and-integrations"
  },
  "ai-expert-workflow-mcp": {
    "path": "other-tools-and-integrations/ai-expert-workflow-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "mistral-ocr": {
    "path": "other-tools-and-integrations/mistral-ocr.json",
    "category": "other-tools-and-integrations"
  },
  "@kazuph/mcp-taskmanager": {
    "path": "other-tools-and-integrations/kazuph-mcp-taskmanager.json",
    "category": "other-tools-and-integrations"
  },
  "@0xbeedao/mcp-taskwarrior": {
    "path": "other-tools-and-integrations/0xbeedao-mcp-taskwarrior.json",
    "category": "other-tools-and-integrations"
  },
  "interaction-mcp": {
    "path": "other-tools-and-integrations/interaction-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "rfk-jr-gateway": {
    "path": "other-tools-and-integrations/rfk-jr-gateway.json",
    "category": "other-tools-and-integrations"
  },
  "elevenlabs-mcp": {
    "path": "other-tools-and-integrations/elevenlabs-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@kunihiros/patsnap-mcp": {
    "path": "other-tools-and-integrations/kunihiros-patsnap-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@baruchiro/paperless-mcp": {
    "path": "other-tools-and-integrations/baruchiro-paperless-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "emqx": {
    "path": "other-tools-and-integrations/emqx.json",
    "category": "other-tools-and-integrations"
  },
  "grok-mcp": {
    "path": "other-tools-and-integrations/grok-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@bschauer/strapi-mcp-server": {
    "path": "other-tools-and-integrations/bschauer-strapi-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "raindrop-mcp": {
    "path": "other-tools-and-integrations/raindrop-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "time-mcp-local": {
    "path": "other-tools-and-integrations/time-mcp-local.json",
    "category": "other-tools-and-integrations"
  },
  "@folderr/folderr-mcp-server": {
    "path": "other-tools-and-integrations/folderr-folderr-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "agent-construct": {
    "path": "other-tools-and-integrations/agent-construct.json",
    "category": "other-tools-and-integrations"
  },
  "dev.to": {
    "path": "other-tools-and-integrations/dev-to.json",
    "category": "other-tools-and-integrations"
  },
  "home-assistant": {
    "path": "other-tools-and-integrations/home-assistant.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-ollama": {
    "path": "other-tools-and-integrations/mcp-ollama.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-ens": {
    "path": "other-tools-and-integrations/mcp-server-ens.json",
    "category": "other-tools-and-integrations"
  },
  "@promptz/mcp": {
    "path": "other-tools-and-integrations/promptz-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "trinity": {
    "path": "other-tools-and-integrations/trinity.json",
    "category": "other-tools-and-integrations"
  },
  "deepseek-reasoner": {
    "path": "other-tools-and-integrations/deepseek-reasoner.json",
    "category": "other-tools-and-integrations"
  },
  "apisix-mcp": {
    "path": "other-tools-and-integrations/apisix-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "music-analysis": {
    "path": "other-tools-and-integrations/music-analysis.json",
    "category": "other-tools-and-integrations"
  },
  "tasks": {
    "path": "other-tools-and-integrations/tasks.json",
    "category": "other-tools-and-integrations"
  },
  "zoho-creator": {
    "path": "other-tools-and-integrations/zoho-creator.json",
    "category": "other-tools-and-integrations"
  },
  "tasks-organizer": {
    "path": "other-tools-and-integrations/tasks-organizer.json",
    "category": "other-tools-and-integrations"
  },
  "swagger-mcp-server": {
    "path": "other-tools-and-integrations/swagger-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "hangul-word-processor": {
    "path": "other-tools-and-integrations/hangul-word-processor.json",
    "category": "other-tools-and-integrations"
  },
  "notion": {
    "path": "other-tools-and-integrations/notion.json",
    "category": "other-tools-and-integrations"
  },
  "productboard-mcp": {
    "path": "other-tools-and-integrations/productboard-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "videocapture": {
    "path": "other-tools-and-integrations/videocapture.json",
    "category": "other-tools-and-integrations"
  },
  "speech-mcp-server": {
    "path": "other-tools-and-integrations/speech-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "reddit": {
    "path": "other-tools-and-integrations/reddit.json",
    "category": "other-tools-and-integrations"
  },
  "bos-(basic-orchestration-system)": {
    "path": "other-tools-and-integrations/bos--basic-orchestration-system.json",
    "category": "other-tools-and-integrations"
  },
  "@jinzcdev/markmap-mcp-server": {
    "path": "other-tools-and-integrations/jinzcdev-markmap-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "@ibraheem4/eventbrite-mcp": {
    "path": "other-tools-and-integrations/ibraheem4-eventbrite-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@epic-web/workshop-mcp": {
    "path": "other-tools-and-integrations/epic-web-workshop-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "directus-extension-mcp": {
    "path": "other-tools-and-integrations/directus-extension-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "claude-lmstudio-bridge": {
    "path": "other-tools-and-integrations/claude-lmstudio-bridge.json",
    "category": "other-tools-and-integrations"
  },
  "pubmed-smithery": {
    "path": "other-tools-and-integrations/pubmed-smithery.json",
    "category": "other-tools-and-integrations"
  },
  "dubco-mcp-server": {
    "path": "other-tools-and-integrations/dubco-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "openapi": {
    "path": "other-tools-and-integrations/openapi.json",
    "category": "other-tools-and-integrations"
  },
  "dify-workflow": {
    "path": "other-tools-and-integrations/dify-workflow.json",
    "category": "other-tools-and-integrations"
  },
  "mozisu-character-counter": {
    "path": "other-tools-and-integrations/mozisu-character-counter.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-chain-of-thought": {
    "path": "other-tools-and-integrations/mcp-chain-of-thought.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-to-markdown": {
    "path": "other-tools-and-integrations/mcp-server-to-markdown.json",
    "category": "other-tools-and-integrations"
  },
  "audio-interface": {
    "path": "other-tools-and-integrations/audio-interface.json",
    "category": "other-tools-and-integrations"
  },
  "dify-tools-bridge": {
    "path": "other-tools-and-integrations/dify-tools-bridge.json",
    "category": "other-tools-and-integrations"
  },
  "kokoro-tts": {
    "path": "other-tools-and-integrations/kokoro-tts.json",
    "category": "other-tools-and-integrations"
  },
  "acp-mcp-server": {
    "path": "other-tools-and-integrations/acp-mcp-server.json",
    "category": "other-tools-and-integrations"
  },
  "chatterbox-tts": {
    "path": "other-tools-and-integrations/chatterbox-tts.json",
    "category": "other-tools-and-integrations"
  },
  "signaturit": {
    "path": "other-tools-and-integrations/signaturit.json",
    "category": "other-tools-and-integrations"
  },
  "@flipt-io/mcp-server-flipt": {
    "path": "other-tools-and-integrations/flipt-io-mcp-server-flipt.json",
    "category": "other-tools-and-integrations"
  },
  "llamaindex-documentation": {
    "path": "other-tools-and-integrations/llamaindex-documentation.json",
    "category": "other-tools-and-integrations"
  },
  "markitdown": {
    "path": "other-tools-and-integrations/markitdown.json",
    "category": "other-tools-and-integrations"
  },
  "grpc-bridge": {
    "path": "other-tools-and-integrations/grpc-bridge.json",
    "category": "other-tools-and-integrations"
  },
  "grumpydev-mcp": {
    "path": "other-tools-and-integrations/grumpydev-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "perplexity-advanced-mcp": {
    "path": "other-tools-and-integrations/perplexity-advanced-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "keep-mcp": {
    "path": "other-tools-and-integrations/keep-mcp.json",
    "category": "other-tools-and-integrations"
  },
  "@fishes/mcp-easy-copy": {
    "path": "other-tools-and-integrations/fishes-mcp-easy-copy.json",
    "category": "other-tools-and-integrations"
  },
  "genesis-world": {
    "path": "other-tools-and-integrations/genesis-world.json",
    "category": "other-tools-and-integrations"
  },
  "powerpoint": {
    "path": "other-tools-and-integrations/powerpoint.json",
    "category": "other-tools-and-integrations"
  },
  "goose-extensions": {
    "path": "other-tools-and-integrations/goose-extensions.json",
    "category": "other-tools-and-integrations"
  },
  "openapi-link": {
    "path": "other-tools-and-integrations/openapi-link.json",
    "category": "other-tools-and-integrations"
  },
  "elevenlabs-text-to-speech": {
    "path": "other-tools-and-integrations/elevenlabs-text-to-speech.json",
    "category": "other-tools-and-integrations"
  },
  "spring-ai": {
    "path": "other-tools-and-integrations/spring-ai.json",
    "category": "other-tools-and-integrations"
  },
  "chain-of-draft-prompt-tool": {
    "path": "other-tools-and-integrations/chain-of-draft-prompt-tool.json",
    "category": "other-tools-and-integrations"
  },
  "slate": {
    "path": "other-tools-and-integrations/slate.json",
    "category": "other-tools-and-integrations"
  },
  "json-canvas": {
    "path": "other-tools-and-integrations/json-canvas.json",
    "category": "other-tools-and-integrations"
  },
  "pymol": {
    "path": "other-tools-and-integrations/pymol.json",
    "category": "other-tools-and-integrations"
  },
  "mcp-server-supos": {
    "path": "other-tools-and-integrations/mcp-server-supos.json",
    "category": "other-tools-and-integrations"
  },
  "systemprompt-mcp-interview": {
    "path": "other-tools-and-integrations/systemprompt-mcp-interview.json",
    "category": "other-tools-and-integrations"
  },
  "deep-research": {
    "path": "other-tools-and-integrations/deep-research.json",
    "category": "other-tools-and-integrations"
  },
  "apple-reminders": {
    "path": "other-tools-and-integrations/apple-reminders.json",
    "category": "other-tools-and-integrations"
  }
}